




// Generated by PIDL compiler.
// Do not modify this file, but modify the source .pidl file.

using System;
using System.Net;

            
using Nettention.Proud; 
namespace SpaceWar
{
	internal class Proxy:Nettention.Proud.RmiProxy
	{
public bool RequestServerConnect(Nettention.Proud.HostID remote,Nettention.Proud.RmiContext rmiContext, string id)
{
	Nettention.Proud.Message __msg=new Nettention.Proud.Message();
		__msg.SimplePacketMode = core.IsSimplePacketMode();
		Nettention.Proud.RmiID __msgid= Common.RequestServerConnect;
		__msg.Write(__msgid);
		SP_Marshaler.Write(__msg, id);
		
	Nettention.Proud.HostID[] __list = new Nettention.Proud.HostID[1];
	__list[0] = remote;
		
	return RmiSend(__list,rmiContext,__msg,
		RmiName_RequestServerConnect, Common.RequestServerConnect);
}

public bool RequestServerConnect(Nettention.Proud.HostID[] remotes,Nettention.Proud.RmiContext rmiContext, string id)
{
	Nettention.Proud.Message __msg=new Nettention.Proud.Message();
__msg.SimplePacketMode = core.IsSimplePacketMode();
Nettention.Proud.RmiID __msgid= Common.RequestServerConnect;
__msg.Write(__msgid);
SP_Marshaler.Write(__msg, id);
		
	return RmiSend(remotes,rmiContext,__msg,
		RmiName_RequestServerConnect, Common.RequestServerConnect);
}
public bool RequestLobbyConnect(Nettention.Proud.HostID remote,Nettention.Proud.RmiContext rmiContext)
{
	Nettention.Proud.Message __msg=new Nettention.Proud.Message();
		__msg.SimplePacketMode = core.IsSimplePacketMode();
		Nettention.Proud.RmiID __msgid= Common.RequestLobbyConnect;
		__msg.Write(__msgid);
		
	Nettention.Proud.HostID[] __list = new Nettention.Proud.HostID[1];
	__list[0] = remote;
		
	return RmiSend(__list,rmiContext,__msg,
		RmiName_RequestLobbyConnect, Common.RequestLobbyConnect);
}

public bool RequestLobbyConnect(Nettention.Proud.HostID[] remotes,Nettention.Proud.RmiContext rmiContext)
{
	Nettention.Proud.Message __msg=new Nettention.Proud.Message();
__msg.SimplePacketMode = core.IsSimplePacketMode();
Nettention.Proud.RmiID __msgid= Common.RequestLobbyConnect;
__msg.Write(__msgid);
		
	return RmiSend(remotes,rmiContext,__msg,
		RmiName_RequestLobbyConnect, Common.RequestLobbyConnect);
}
public bool RequestNetworkGameTeamSelect(Nettention.Proud.HostID remote,Nettention.Proud.RmiContext rmiContext, string name, bool teamRed)
{
	Nettention.Proud.Message __msg=new Nettention.Proud.Message();
		__msg.SimplePacketMode = core.IsSimplePacketMode();
		Nettention.Proud.RmiID __msgid= Common.RequestNetworkGameTeamSelect;
		__msg.Write(__msgid);
		SP_Marshaler.Write(__msg, name);
		SP_Marshaler.Write(__msg, teamRed);
		
	Nettention.Proud.HostID[] __list = new Nettention.Proud.HostID[1];
	__list[0] = remote;
		
	return RmiSend(__list,rmiContext,__msg,
		RmiName_RequestNetworkGameTeamSelect, Common.RequestNetworkGameTeamSelect);
}

public bool RequestNetworkGameTeamSelect(Nettention.Proud.HostID[] remotes,Nettention.Proud.RmiContext rmiContext, string name, bool teamRed)
{
	Nettention.Proud.Message __msg=new Nettention.Proud.Message();
__msg.SimplePacketMode = core.IsSimplePacketMode();
Nettention.Proud.RmiID __msgid= Common.RequestNetworkGameTeamSelect;
__msg.Write(__msgid);
SP_Marshaler.Write(__msg, name);
SP_Marshaler.Write(__msg, teamRed);
		
	return RmiSend(remotes,rmiContext,__msg,
		RmiName_RequestNetworkGameTeamSelect, Common.RequestNetworkGameTeamSelect);
}
public bool RequestNetworkGameReady(Nettention.Proud.HostID remote,Nettention.Proud.RmiContext rmiContext, string name, bool ready)
{
	Nettention.Proud.Message __msg=new Nettention.Proud.Message();
		__msg.SimplePacketMode = core.IsSimplePacketMode();
		Nettention.Proud.RmiID __msgid= Common.RequestNetworkGameReady;
		__msg.Write(__msgid);
		SP_Marshaler.Write(__msg, name);
		SP_Marshaler.Write(__msg, ready);
		
	Nettention.Proud.HostID[] __list = new Nettention.Proud.HostID[1];
	__list[0] = remote;
		
	return RmiSend(__list,rmiContext,__msg,
		RmiName_RequestNetworkGameReady, Common.RequestNetworkGameReady);
}

public bool RequestNetworkGameReady(Nettention.Proud.HostID[] remotes,Nettention.Proud.RmiContext rmiContext, string name, bool ready)
{
	Nettention.Proud.Message __msg=new Nettention.Proud.Message();
__msg.SimplePacketMode = core.IsSimplePacketMode();
Nettention.Proud.RmiID __msgid= Common.RequestNetworkGameReady;
__msg.Write(__msgid);
SP_Marshaler.Write(__msg, name);
SP_Marshaler.Write(__msg, ready);
		
	return RmiSend(remotes,rmiContext,__msg,
		RmiName_RequestNetworkGameReady, Common.RequestNetworkGameReady);
}
public bool RequestNetworkChangeMap(Nettention.Proud.HostID remote,Nettention.Proud.RmiContext rmiContext, string mapName)
{
	Nettention.Proud.Message __msg=new Nettention.Proud.Message();
		__msg.SimplePacketMode = core.IsSimplePacketMode();
		Nettention.Proud.RmiID __msgid= Common.RequestNetworkChangeMap;
		__msg.Write(__msgid);
		SP_Marshaler.Write(__msg, mapName);
		
	Nettention.Proud.HostID[] __list = new Nettention.Proud.HostID[1];
	__list[0] = remote;
		
	return RmiSend(__list,rmiContext,__msg,
		RmiName_RequestNetworkChangeMap, Common.RequestNetworkChangeMap);
}

public bool RequestNetworkChangeMap(Nettention.Proud.HostID[] remotes,Nettention.Proud.RmiContext rmiContext, string mapName)
{
	Nettention.Proud.Message __msg=new Nettention.Proud.Message();
__msg.SimplePacketMode = core.IsSimplePacketMode();
Nettention.Proud.RmiID __msgid= Common.RequestNetworkChangeMap;
__msg.Write(__msgid);
SP_Marshaler.Write(__msg, mapName);
		
	return RmiSend(remotes,rmiContext,__msg,
		RmiName_RequestNetworkChangeMap, Common.RequestNetworkChangeMap);
}
public bool RequestNetworkPlayerCount(Nettention.Proud.HostID remote,Nettention.Proud.RmiContext rmiContext, int playerCount)
{
	Nettention.Proud.Message __msg=new Nettention.Proud.Message();
		__msg.SimplePacketMode = core.IsSimplePacketMode();
		Nettention.Proud.RmiID __msgid= Common.RequestNetworkPlayerCount;
		__msg.Write(__msgid);
		SP_Marshaler.Write(__msg, playerCount);
		
	Nettention.Proud.HostID[] __list = new Nettention.Proud.HostID[1];
	__list[0] = remote;
		
	return RmiSend(__list,rmiContext,__msg,
		RmiName_RequestNetworkPlayerCount, Common.RequestNetworkPlayerCount);
}

public bool RequestNetworkPlayerCount(Nettention.Proud.HostID[] remotes,Nettention.Proud.RmiContext rmiContext, int playerCount)
{
	Nettention.Proud.Message __msg=new Nettention.Proud.Message();
__msg.SimplePacketMode = core.IsSimplePacketMode();
Nettention.Proud.RmiID __msgid= Common.RequestNetworkPlayerCount;
__msg.Write(__msgid);
SP_Marshaler.Write(__msg, playerCount);
		
	return RmiSend(remotes,rmiContext,__msg,
		RmiName_RequestNetworkPlayerCount, Common.RequestNetworkPlayerCount);
}
public bool RequestNetworkGameModeChange(Nettention.Proud.HostID remote,Nettention.Proud.RmiContext rmiContext, int gameMode, bool teamMode)
{
	Nettention.Proud.Message __msg=new Nettention.Proud.Message();
		__msg.SimplePacketMode = core.IsSimplePacketMode();
		Nettention.Proud.RmiID __msgid= Common.RequestNetworkGameModeChange;
		__msg.Write(__msgid);
		SP_Marshaler.Write(__msg, gameMode);
		SP_Marshaler.Write(__msg, teamMode);
		
	Nettention.Proud.HostID[] __list = new Nettention.Proud.HostID[1];
	__list[0] = remote;
		
	return RmiSend(__list,rmiContext,__msg,
		RmiName_RequestNetworkGameModeChange, Common.RequestNetworkGameModeChange);
}

public bool RequestNetworkGameModeChange(Nettention.Proud.HostID[] remotes,Nettention.Proud.RmiContext rmiContext, int gameMode, bool teamMode)
{
	Nettention.Proud.Message __msg=new Nettention.Proud.Message();
__msg.SimplePacketMode = core.IsSimplePacketMode();
Nettention.Proud.RmiID __msgid= Common.RequestNetworkGameModeChange;
__msg.Write(__msgid);
SP_Marshaler.Write(__msg, gameMode);
SP_Marshaler.Write(__msg, teamMode);
		
	return RmiSend(remotes,rmiContext,__msg,
		RmiName_RequestNetworkGameModeChange, Common.RequestNetworkGameModeChange);
}
public bool RequestNetworkGameStart(Nettention.Proud.HostID remote,Nettention.Proud.RmiContext rmiContext)
{
	Nettention.Proud.Message __msg=new Nettention.Proud.Message();
		__msg.SimplePacketMode = core.IsSimplePacketMode();
		Nettention.Proud.RmiID __msgid= Common.RequestNetworkGameStart;
		__msg.Write(__msgid);
		
	Nettention.Proud.HostID[] __list = new Nettention.Proud.HostID[1];
	__list[0] = remote;
		
	return RmiSend(__list,rmiContext,__msg,
		RmiName_RequestNetworkGameStart, Common.RequestNetworkGameStart);
}

public bool RequestNetworkGameStart(Nettention.Proud.HostID[] remotes,Nettention.Proud.RmiContext rmiContext)
{
	Nettention.Proud.Message __msg=new Nettention.Proud.Message();
__msg.SimplePacketMode = core.IsSimplePacketMode();
Nettention.Proud.RmiID __msgid= Common.RequestNetworkGameStart;
__msg.Write(__msgid);
		
	return RmiSend(remotes,rmiContext,__msg,
		RmiName_RequestNetworkGameStart, Common.RequestNetworkGameStart);
}
public bool RequestNetworkHostOut(Nettention.Proud.HostID remote,Nettention.Proud.RmiContext rmiContext, int hostID)
{
	Nettention.Proud.Message __msg=new Nettention.Proud.Message();
		__msg.SimplePacketMode = core.IsSimplePacketMode();
		Nettention.Proud.RmiID __msgid= Common.RequestNetworkHostOut;
		__msg.Write(__msgid);
		SP_Marshaler.Write(__msg, hostID);
		
	Nettention.Proud.HostID[] __list = new Nettention.Proud.HostID[1];
	__list[0] = remote;
		
	return RmiSend(__list,rmiContext,__msg,
		RmiName_RequestNetworkHostOut, Common.RequestNetworkHostOut);
}

public bool RequestNetworkHostOut(Nettention.Proud.HostID[] remotes,Nettention.Proud.RmiContext rmiContext, int hostID)
{
	Nettention.Proud.Message __msg=new Nettention.Proud.Message();
__msg.SimplePacketMode = core.IsSimplePacketMode();
Nettention.Proud.RmiID __msgid= Common.RequestNetworkHostOut;
__msg.Write(__msgid);
SP_Marshaler.Write(__msg, hostID);
		
	return RmiSend(remotes,rmiContext,__msg,
		RmiName_RequestNetworkHostOut, Common.RequestNetworkHostOut);
}
public bool RequestGameSceneJoin(Nettention.Proud.HostID remote,Nettention.Proud.RmiContext rmiContext, UnityEngine.Vector3 pos, int hostID, string name)
{
	Nettention.Proud.Message __msg=new Nettention.Proud.Message();
		__msg.SimplePacketMode = core.IsSimplePacketMode();
		Nettention.Proud.RmiID __msgid= Common.RequestGameSceneJoin;
		__msg.Write(__msgid);
		SP_Marshaler.Write(__msg, pos);
		SP_Marshaler.Write(__msg, hostID);
		SP_Marshaler.Write(__msg, name);
		
	Nettention.Proud.HostID[] __list = new Nettention.Proud.HostID[1];
	__list[0] = remote;
		
	return RmiSend(__list,rmiContext,__msg,
		RmiName_RequestGameSceneJoin, Common.RequestGameSceneJoin);
}

public bool RequestGameSceneJoin(Nettention.Proud.HostID[] remotes,Nettention.Proud.RmiContext rmiContext, UnityEngine.Vector3 pos, int hostID, string name)
{
	Nettention.Proud.Message __msg=new Nettention.Proud.Message();
__msg.SimplePacketMode = core.IsSimplePacketMode();
Nettention.Proud.RmiID __msgid= Common.RequestGameSceneJoin;
__msg.Write(__msgid);
SP_Marshaler.Write(__msg, pos);
SP_Marshaler.Write(__msg, hostID);
SP_Marshaler.Write(__msg, name);
		
	return RmiSend(remotes,rmiContext,__msg,
		RmiName_RequestGameSceneJoin, Common.RequestGameSceneJoin);
}
public bool NotifyNetworkUserSetup(Nettention.Proud.HostID remote,Nettention.Proud.RmiContext rmiContext, int userHostID, string userName, bool ready, bool teamRed)
{
	Nettention.Proud.Message __msg=new Nettention.Proud.Message();
		__msg.SimplePacketMode = core.IsSimplePacketMode();
		Nettention.Proud.RmiID __msgid= Common.NotifyNetworkUserSetup;
		__msg.Write(__msgid);
		SP_Marshaler.Write(__msg, userHostID);
		SP_Marshaler.Write(__msg, userName);
		SP_Marshaler.Write(__msg, ready);
		SP_Marshaler.Write(__msg, teamRed);
		
	Nettention.Proud.HostID[] __list = new Nettention.Proud.HostID[1];
	__list[0] = remote;
		
	return RmiSend(__list,rmiContext,__msg,
		RmiName_NotifyNetworkUserSetup, Common.NotifyNetworkUserSetup);
}

public bool NotifyNetworkUserSetup(Nettention.Proud.HostID[] remotes,Nettention.Proud.RmiContext rmiContext, int userHostID, string userName, bool ready, bool teamRed)
{
	Nettention.Proud.Message __msg=new Nettention.Proud.Message();
__msg.SimplePacketMode = core.IsSimplePacketMode();
Nettention.Proud.RmiID __msgid= Common.NotifyNetworkUserSetup;
__msg.Write(__msgid);
SP_Marshaler.Write(__msg, userHostID);
SP_Marshaler.Write(__msg, userName);
SP_Marshaler.Write(__msg, ready);
SP_Marshaler.Write(__msg, teamRed);
		
	return RmiSend(remotes,rmiContext,__msg,
		RmiName_NotifyNetworkUserSetup, Common.NotifyNetworkUserSetup);
}
public bool NotifyNetworkGameTeamChange(Nettention.Proud.HostID remote,Nettention.Proud.RmiContext rmiContext, int userHostID, bool teamRed)
{
	Nettention.Proud.Message __msg=new Nettention.Proud.Message();
		__msg.SimplePacketMode = core.IsSimplePacketMode();
		Nettention.Proud.RmiID __msgid= Common.NotifyNetworkGameTeamChange;
		__msg.Write(__msgid);
		SP_Marshaler.Write(__msg, userHostID);
		SP_Marshaler.Write(__msg, teamRed);
		
	Nettention.Proud.HostID[] __list = new Nettention.Proud.HostID[1];
	__list[0] = remote;
		
	return RmiSend(__list,rmiContext,__msg,
		RmiName_NotifyNetworkGameTeamChange, Common.NotifyNetworkGameTeamChange);
}

public bool NotifyNetworkGameTeamChange(Nettention.Proud.HostID[] remotes,Nettention.Proud.RmiContext rmiContext, int userHostID, bool teamRed)
{
	Nettention.Proud.Message __msg=new Nettention.Proud.Message();
__msg.SimplePacketMode = core.IsSimplePacketMode();
Nettention.Proud.RmiID __msgid= Common.NotifyNetworkGameTeamChange;
__msg.Write(__msgid);
SP_Marshaler.Write(__msg, userHostID);
SP_Marshaler.Write(__msg, teamRed);
		
	return RmiSend(remotes,rmiContext,__msg,
		RmiName_NotifyNetworkGameTeamChange, Common.NotifyNetworkGameTeamChange);
}
public bool NotifyNetworkConnectUser(Nettention.Proud.HostID remote,Nettention.Proud.RmiContext rmiContext, int userHostID, string userName)
{
	Nettention.Proud.Message __msg=new Nettention.Proud.Message();
		__msg.SimplePacketMode = core.IsSimplePacketMode();
		Nettention.Proud.RmiID __msgid= Common.NotifyNetworkConnectUser;
		__msg.Write(__msgid);
		SP_Marshaler.Write(__msg, userHostID);
		SP_Marshaler.Write(__msg, userName);
		
	Nettention.Proud.HostID[] __list = new Nettention.Proud.HostID[1];
	__list[0] = remote;
		
	return RmiSend(__list,rmiContext,__msg,
		RmiName_NotifyNetworkConnectUser, Common.NotifyNetworkConnectUser);
}

public bool NotifyNetworkConnectUser(Nettention.Proud.HostID[] remotes,Nettention.Proud.RmiContext rmiContext, int userHostID, string userName)
{
	Nettention.Proud.Message __msg=new Nettention.Proud.Message();
__msg.SimplePacketMode = core.IsSimplePacketMode();
Nettention.Proud.RmiID __msgid= Common.NotifyNetworkConnectUser;
__msg.Write(__msgid);
SP_Marshaler.Write(__msg, userHostID);
SP_Marshaler.Write(__msg, userName);
		
	return RmiSend(remotes,rmiContext,__msg,
		RmiName_NotifyNetworkConnectUser, Common.NotifyNetworkConnectUser);
}
public bool NotifyNetworkReady(Nettention.Proud.HostID remote,Nettention.Proud.RmiContext rmiContext, int hostID, string userName, bool ready)
{
	Nettention.Proud.Message __msg=new Nettention.Proud.Message();
		__msg.SimplePacketMode = core.IsSimplePacketMode();
		Nettention.Proud.RmiID __msgid= Common.NotifyNetworkReady;
		__msg.Write(__msgid);
		SP_Marshaler.Write(__msg, hostID);
		SP_Marshaler.Write(__msg, userName);
		SP_Marshaler.Write(__msg, ready);
		
	Nettention.Proud.HostID[] __list = new Nettention.Proud.HostID[1];
	__list[0] = remote;
		
	return RmiSend(__list,rmiContext,__msg,
		RmiName_NotifyNetworkReady, Common.NotifyNetworkReady);
}

public bool NotifyNetworkReady(Nettention.Proud.HostID[] remotes,Nettention.Proud.RmiContext rmiContext, int hostID, string userName, bool ready)
{
	Nettention.Proud.Message __msg=new Nettention.Proud.Message();
__msg.SimplePacketMode = core.IsSimplePacketMode();
Nettention.Proud.RmiID __msgid= Common.NotifyNetworkReady;
__msg.Write(__msgid);
SP_Marshaler.Write(__msg, hostID);
SP_Marshaler.Write(__msg, userName);
SP_Marshaler.Write(__msg, ready);
		
	return RmiSend(remotes,rmiContext,__msg,
		RmiName_NotifyNetworkReady, Common.NotifyNetworkReady);
}
public bool NotifyNetworkGameModeChange(Nettention.Proud.HostID remote,Nettention.Proud.RmiContext rmiContext, int gameMode, bool teamMode)
{
	Nettention.Proud.Message __msg=new Nettention.Proud.Message();
		__msg.SimplePacketMode = core.IsSimplePacketMode();
		Nettention.Proud.RmiID __msgid= Common.NotifyNetworkGameModeChange;
		__msg.Write(__msgid);
		SP_Marshaler.Write(__msg, gameMode);
		SP_Marshaler.Write(__msg, teamMode);
		
	Nettention.Proud.HostID[] __list = new Nettention.Proud.HostID[1];
	__list[0] = remote;
		
	return RmiSend(__list,rmiContext,__msg,
		RmiName_NotifyNetworkGameModeChange, Common.NotifyNetworkGameModeChange);
}

public bool NotifyNetworkGameModeChange(Nettention.Proud.HostID[] remotes,Nettention.Proud.RmiContext rmiContext, int gameMode, bool teamMode)
{
	Nettention.Proud.Message __msg=new Nettention.Proud.Message();
__msg.SimplePacketMode = core.IsSimplePacketMode();
Nettention.Proud.RmiID __msgid= Common.NotifyNetworkGameModeChange;
__msg.Write(__msgid);
SP_Marshaler.Write(__msg, gameMode);
SP_Marshaler.Write(__msg, teamMode);
		
	return RmiSend(remotes,rmiContext,__msg,
		RmiName_NotifyNetworkGameModeChange, Common.NotifyNetworkGameModeChange);
}
public bool NotifyNetworkGamePlayerCountChange(Nettention.Proud.HostID remote,Nettention.Proud.RmiContext rmiContext, int playerCount)
{
	Nettention.Proud.Message __msg=new Nettention.Proud.Message();
		__msg.SimplePacketMode = core.IsSimplePacketMode();
		Nettention.Proud.RmiID __msgid= Common.NotifyNetworkGamePlayerCountChange;
		__msg.Write(__msgid);
		SP_Marshaler.Write(__msg, playerCount);
		
	Nettention.Proud.HostID[] __list = new Nettention.Proud.HostID[1];
	__list[0] = remote;
		
	return RmiSend(__list,rmiContext,__msg,
		RmiName_NotifyNetworkGamePlayerCountChange, Common.NotifyNetworkGamePlayerCountChange);
}

public bool NotifyNetworkGamePlayerCountChange(Nettention.Proud.HostID[] remotes,Nettention.Proud.RmiContext rmiContext, int playerCount)
{
	Nettention.Proud.Message __msg=new Nettention.Proud.Message();
__msg.SimplePacketMode = core.IsSimplePacketMode();
Nettention.Proud.RmiID __msgid= Common.NotifyNetworkGamePlayerCountChange;
__msg.Write(__msgid);
SP_Marshaler.Write(__msg, playerCount);
		
	return RmiSend(remotes,rmiContext,__msg,
		RmiName_NotifyNetworkGamePlayerCountChange, Common.NotifyNetworkGamePlayerCountChange);
}
public bool NotifyNetworkGameChangeMap(Nettention.Proud.HostID remote,Nettention.Proud.RmiContext rmiContext, string map)
{
	Nettention.Proud.Message __msg=new Nettention.Proud.Message();
		__msg.SimplePacketMode = core.IsSimplePacketMode();
		Nettention.Proud.RmiID __msgid= Common.NotifyNetworkGameChangeMap;
		__msg.Write(__msgid);
		SP_Marshaler.Write(__msg, map);
		
	Nettention.Proud.HostID[] __list = new Nettention.Proud.HostID[1];
	__list[0] = remote;
		
	return RmiSend(__list,rmiContext,__msg,
		RmiName_NotifyNetworkGameChangeMap, Common.NotifyNetworkGameChangeMap);
}

public bool NotifyNetworkGameChangeMap(Nettention.Proud.HostID[] remotes,Nettention.Proud.RmiContext rmiContext, string map)
{
	Nettention.Proud.Message __msg=new Nettention.Proud.Message();
__msg.SimplePacketMode = core.IsSimplePacketMode();
Nettention.Proud.RmiID __msgid= Common.NotifyNetworkGameChangeMap;
__msg.Write(__msgid);
SP_Marshaler.Write(__msg, map);
		
	return RmiSend(remotes,rmiContext,__msg,
		RmiName_NotifyNetworkGameChangeMap, Common.NotifyNetworkGameChangeMap);
}
public bool NotifyNetworkGameStart(Nettention.Proud.HostID remote,Nettention.Proud.RmiContext rmiContext)
{
	Nettention.Proud.Message __msg=new Nettention.Proud.Message();
		__msg.SimplePacketMode = core.IsSimplePacketMode();
		Nettention.Proud.RmiID __msgid= Common.NotifyNetworkGameStart;
		__msg.Write(__msgid);
		
	Nettention.Proud.HostID[] __list = new Nettention.Proud.HostID[1];
	__list[0] = remote;
		
	return RmiSend(__list,rmiContext,__msg,
		RmiName_NotifyNetworkGameStart, Common.NotifyNetworkGameStart);
}

public bool NotifyNetworkGameStart(Nettention.Proud.HostID[] remotes,Nettention.Proud.RmiContext rmiContext)
{
	Nettention.Proud.Message __msg=new Nettention.Proud.Message();
__msg.SimplePacketMode = core.IsSimplePacketMode();
Nettention.Proud.RmiID __msgid= Common.NotifyNetworkGameStart;
__msg.Write(__msgid);
		
	return RmiSend(remotes,rmiContext,__msg,
		RmiName_NotifyNetworkGameStart, Common.NotifyNetworkGameStart);
}
public bool NotifyNetworkGameStartFailed(Nettention.Proud.HostID remote,Nettention.Proud.RmiContext rmiContext)
{
	Nettention.Proud.Message __msg=new Nettention.Proud.Message();
		__msg.SimplePacketMode = core.IsSimplePacketMode();
		Nettention.Proud.RmiID __msgid= Common.NotifyNetworkGameStartFailed;
		__msg.Write(__msgid);
		
	Nettention.Proud.HostID[] __list = new Nettention.Proud.HostID[1];
	__list[0] = remote;
		
	return RmiSend(__list,rmiContext,__msg,
		RmiName_NotifyNetworkGameStartFailed, Common.NotifyNetworkGameStartFailed);
}

public bool NotifyNetworkGameStartFailed(Nettention.Proud.HostID[] remotes,Nettention.Proud.RmiContext rmiContext)
{
	Nettention.Proud.Message __msg=new Nettention.Proud.Message();
__msg.SimplePacketMode = core.IsSimplePacketMode();
Nettention.Proud.RmiID __msgid= Common.NotifyNetworkGameStartFailed;
__msg.Write(__msgid);
		
	return RmiSend(remotes,rmiContext,__msg,
		RmiName_NotifyNetworkGameStartFailed, Common.NotifyNetworkGameStartFailed);
}
public bool NotifyNetworkGameHostOut(Nettention.Proud.HostID remote,Nettention.Proud.RmiContext rmiContext)
{
	Nettention.Proud.Message __msg=new Nettention.Proud.Message();
		__msg.SimplePacketMode = core.IsSimplePacketMode();
		Nettention.Proud.RmiID __msgid= Common.NotifyNetworkGameHostOut;
		__msg.Write(__msgid);
		
	Nettention.Proud.HostID[] __list = new Nettention.Proud.HostID[1];
	__list[0] = remote;
		
	return RmiSend(__list,rmiContext,__msg,
		RmiName_NotifyNetworkGameHostOut, Common.NotifyNetworkGameHostOut);
}

public bool NotifyNetworkGameHostOut(Nettention.Proud.HostID[] remotes,Nettention.Proud.RmiContext rmiContext)
{
	Nettention.Proud.Message __msg=new Nettention.Proud.Message();
__msg.SimplePacketMode = core.IsSimplePacketMode();
Nettention.Proud.RmiID __msgid= Common.NotifyNetworkGameHostOut;
__msg.Write(__msgid);
		
	return RmiSend(remotes,rmiContext,__msg,
		RmiName_NotifyNetworkGameHostOut, Common.NotifyNetworkGameHostOut);
}
public bool RequestClientJoin(Nettention.Proud.HostID remote,Nettention.Proud.RmiContext rmiContext, int hostID, string name, float x, float y, float z)
{
	Nettention.Proud.Message __msg=new Nettention.Proud.Message();
		__msg.SimplePacketMode = core.IsSimplePacketMode();
		Nettention.Proud.RmiID __msgid= Common.RequestClientJoin;
		__msg.Write(__msgid);
		SP_Marshaler.Write(__msg, hostID);
		SP_Marshaler.Write(__msg, name);
		SP_Marshaler.Write(__msg, x);
		SP_Marshaler.Write(__msg, y);
		SP_Marshaler.Write(__msg, z);
		
	Nettention.Proud.HostID[] __list = new Nettention.Proud.HostID[1];
	__list[0] = remote;
		
	return RmiSend(__list,rmiContext,__msg,
		RmiName_RequestClientJoin, Common.RequestClientJoin);
}

public bool RequestClientJoin(Nettention.Proud.HostID[] remotes,Nettention.Proud.RmiContext rmiContext, int hostID, string name, float x, float y, float z)
{
	Nettention.Proud.Message __msg=new Nettention.Proud.Message();
__msg.SimplePacketMode = core.IsSimplePacketMode();
Nettention.Proud.RmiID __msgid= Common.RequestClientJoin;
__msg.Write(__msgid);
SP_Marshaler.Write(__msg, hostID);
SP_Marshaler.Write(__msg, name);
SP_Marshaler.Write(__msg, x);
SP_Marshaler.Write(__msg, y);
SP_Marshaler.Write(__msg, z);
		
	return RmiSend(remotes,rmiContext,__msg,
		RmiName_RequestClientJoin, Common.RequestClientJoin);
}
public bool RequestWorldCreateItem(Nettention.Proud.HostID remote,Nettention.Proud.RmiContext rmiContext, int hostID, int itemCID, int itemID, UnityEngine.Vector3 pos, UnityEngine.Vector3 rot)
{
	Nettention.Proud.Message __msg=new Nettention.Proud.Message();
		__msg.SimplePacketMode = core.IsSimplePacketMode();
		Nettention.Proud.RmiID __msgid= Common.RequestWorldCreateItem;
		__msg.Write(__msgid);
		SP_Marshaler.Write(__msg, hostID);
		SP_Marshaler.Write(__msg, itemCID);
		SP_Marshaler.Write(__msg, itemID);
		SP_Marshaler.Write(__msg, pos);
		SP_Marshaler.Write(__msg, rot);
		
	Nettention.Proud.HostID[] __list = new Nettention.Proud.HostID[1];
	__list[0] = remote;
		
	return RmiSend(__list,rmiContext,__msg,
		RmiName_RequestWorldCreateItem, Common.RequestWorldCreateItem);
}

public bool RequestWorldCreateItem(Nettention.Proud.HostID[] remotes,Nettention.Proud.RmiContext rmiContext, int hostID, int itemCID, int itemID, UnityEngine.Vector3 pos, UnityEngine.Vector3 rot)
{
	Nettention.Proud.Message __msg=new Nettention.Proud.Message();
__msg.SimplePacketMode = core.IsSimplePacketMode();
Nettention.Proud.RmiID __msgid= Common.RequestWorldCreateItem;
__msg.Write(__msgid);
SP_Marshaler.Write(__msg, hostID);
SP_Marshaler.Write(__msg, itemCID);
SP_Marshaler.Write(__msg, itemID);
SP_Marshaler.Write(__msg, pos);
SP_Marshaler.Write(__msg, rot);
		
	return RmiSend(remotes,rmiContext,__msg,
		RmiName_RequestWorldCreateItem, Common.RequestWorldCreateItem);
}
public bool RequestPlayerDamage(Nettention.Proud.HostID remote,Nettention.Proud.RmiContext rmiContext, int sendHostID, int targetHostID, string name, string weaponName, float damage, UnityEngine.Vector3 dir)
{
	Nettention.Proud.Message __msg=new Nettention.Proud.Message();
		__msg.SimplePacketMode = core.IsSimplePacketMode();
		Nettention.Proud.RmiID __msgid= Common.RequestPlayerDamage;
		__msg.Write(__msgid);
		SP_Marshaler.Write(__msg, sendHostID);
		SP_Marshaler.Write(__msg, targetHostID);
		SP_Marshaler.Write(__msg, name);
		SP_Marshaler.Write(__msg, weaponName);
		SP_Marshaler.Write(__msg, damage);
		SP_Marshaler.Write(__msg, dir);
		
	Nettention.Proud.HostID[] __list = new Nettention.Proud.HostID[1];
	__list[0] = remote;
		
	return RmiSend(__list,rmiContext,__msg,
		RmiName_RequestPlayerDamage, Common.RequestPlayerDamage);
}

public bool RequestPlayerDamage(Nettention.Proud.HostID[] remotes,Nettention.Proud.RmiContext rmiContext, int sendHostID, int targetHostID, string name, string weaponName, float damage, UnityEngine.Vector3 dir)
{
	Nettention.Proud.Message __msg=new Nettention.Proud.Message();
__msg.SimplePacketMode = core.IsSimplePacketMode();
Nettention.Proud.RmiID __msgid= Common.RequestPlayerDamage;
__msg.Write(__msgid);
SP_Marshaler.Write(__msg, sendHostID);
SP_Marshaler.Write(__msg, targetHostID);
SP_Marshaler.Write(__msg, name);
SP_Marshaler.Write(__msg, weaponName);
SP_Marshaler.Write(__msg, damage);
SP_Marshaler.Write(__msg, dir);
		
	return RmiSend(remotes,rmiContext,__msg,
		RmiName_RequestPlayerDamage, Common.RequestPlayerDamage);
}
public bool RequestPlayerUseOxy(Nettention.Proud.HostID remote,Nettention.Proud.RmiContext rmiContext, int sendHostID, string name, float useOxy)
{
	Nettention.Proud.Message __msg=new Nettention.Proud.Message();
		__msg.SimplePacketMode = core.IsSimplePacketMode();
		Nettention.Proud.RmiID __msgid= Common.RequestPlayerUseOxy;
		__msg.Write(__msgid);
		SP_Marshaler.Write(__msg, sendHostID);
		SP_Marshaler.Write(__msg, name);
		SP_Marshaler.Write(__msg, useOxy);
		
	Nettention.Proud.HostID[] __list = new Nettention.Proud.HostID[1];
	__list[0] = remote;
		
	return RmiSend(__list,rmiContext,__msg,
		RmiName_RequestPlayerUseOxy, Common.RequestPlayerUseOxy);
}

public bool RequestPlayerUseOxy(Nettention.Proud.HostID[] remotes,Nettention.Proud.RmiContext rmiContext, int sendHostID, string name, float useOxy)
{
	Nettention.Proud.Message __msg=new Nettention.Proud.Message();
__msg.SimplePacketMode = core.IsSimplePacketMode();
Nettention.Proud.RmiID __msgid= Common.RequestPlayerUseOxy;
__msg.Write(__msgid);
SP_Marshaler.Write(__msg, sendHostID);
SP_Marshaler.Write(__msg, name);
SP_Marshaler.Write(__msg, useOxy);
		
	return RmiSend(remotes,rmiContext,__msg,
		RmiName_RequestPlayerUseOxy, Common.RequestPlayerUseOxy);
}
public bool RequestUseOxyCharger(Nettention.Proud.HostID remote,Nettention.Proud.RmiContext rmiContext, int sendHostID, int oxyChargerIndex, float userOxy)
{
	Nettention.Proud.Message __msg=new Nettention.Proud.Message();
		__msg.SimplePacketMode = core.IsSimplePacketMode();
		Nettention.Proud.RmiID __msgid= Common.RequestUseOxyCharger;
		__msg.Write(__msgid);
		SP_Marshaler.Write(__msg, sendHostID);
		SP_Marshaler.Write(__msg, oxyChargerIndex);
		SP_Marshaler.Write(__msg, userOxy);
		
	Nettention.Proud.HostID[] __list = new Nettention.Proud.HostID[1];
	__list[0] = remote;
		
	return RmiSend(__list,rmiContext,__msg,
		RmiName_RequestUseOxyCharger, Common.RequestUseOxyCharger);
}

public bool RequestUseOxyCharger(Nettention.Proud.HostID[] remotes,Nettention.Proud.RmiContext rmiContext, int sendHostID, int oxyChargerIndex, float userOxy)
{
	Nettention.Proud.Message __msg=new Nettention.Proud.Message();
__msg.SimplePacketMode = core.IsSimplePacketMode();
Nettention.Proud.RmiID __msgid= Common.RequestUseOxyCharger;
__msg.Write(__msgid);
SP_Marshaler.Write(__msg, sendHostID);
SP_Marshaler.Write(__msg, oxyChargerIndex);
SP_Marshaler.Write(__msg, userOxy);
		
	return RmiSend(remotes,rmiContext,__msg,
		RmiName_RequestUseOxyCharger, Common.RequestUseOxyCharger);
}
public bool RequestUseItemBox(Nettention.Proud.HostID remote,Nettention.Proud.RmiContext rmiContext, int sendHostID, int itemBoxIndex)
{
	Nettention.Proud.Message __msg=new Nettention.Proud.Message();
		__msg.SimplePacketMode = core.IsSimplePacketMode();
		Nettention.Proud.RmiID __msgid= Common.RequestUseItemBox;
		__msg.Write(__msgid);
		SP_Marshaler.Write(__msg, sendHostID);
		SP_Marshaler.Write(__msg, itemBoxIndex);
		
	Nettention.Proud.HostID[] __list = new Nettention.Proud.HostID[1];
	__list[0] = remote;
		
	return RmiSend(__list,rmiContext,__msg,
		RmiName_RequestUseItemBox, Common.RequestUseItemBox);
}

public bool RequestUseItemBox(Nettention.Proud.HostID[] remotes,Nettention.Proud.RmiContext rmiContext, int sendHostID, int itemBoxIndex)
{
	Nettention.Proud.Message __msg=new Nettention.Proud.Message();
__msg.SimplePacketMode = core.IsSimplePacketMode();
Nettention.Proud.RmiID __msgid= Common.RequestUseItemBox;
__msg.Write(__msgid);
SP_Marshaler.Write(__msg, sendHostID);
SP_Marshaler.Write(__msg, itemBoxIndex);
		
	return RmiSend(remotes,rmiContext,__msg,
		RmiName_RequestUseItemBox, Common.RequestUseItemBox);
}
public bool RequestShelterStartSetup(Nettention.Proud.HostID remote,Nettention.Proud.RmiContext rmiContext, int shelterID)
{
	Nettention.Proud.Message __msg=new Nettention.Proud.Message();
		__msg.SimplePacketMode = core.IsSimplePacketMode();
		Nettention.Proud.RmiID __msgid= Common.RequestShelterStartSetup;
		__msg.Write(__msgid);
		SP_Marshaler.Write(__msg, shelterID);
		
	Nettention.Proud.HostID[] __list = new Nettention.Proud.HostID[1];
	__list[0] = remote;
		
	return RmiSend(__list,rmiContext,__msg,
		RmiName_RequestShelterStartSetup, Common.RequestShelterStartSetup);
}

public bool RequestShelterStartSetup(Nettention.Proud.HostID[] remotes,Nettention.Proud.RmiContext rmiContext, int shelterID)
{
	Nettention.Proud.Message __msg=new Nettention.Proud.Message();
__msg.SimplePacketMode = core.IsSimplePacketMode();
Nettention.Proud.RmiID __msgid= Common.RequestShelterStartSetup;
__msg.Write(__msgid);
SP_Marshaler.Write(__msg, shelterID);
		
	return RmiSend(remotes,rmiContext,__msg,
		RmiName_RequestShelterStartSetup, Common.RequestShelterStartSetup);
}
public bool RequestShelterDoorControl(Nettention.Proud.HostID remote,Nettention.Proud.RmiContext rmiContext, int sendHostID, int shelterID, bool doorState)
{
	Nettention.Proud.Message __msg=new Nettention.Proud.Message();
		__msg.SimplePacketMode = core.IsSimplePacketMode();
		Nettention.Proud.RmiID __msgid= Common.RequestShelterDoorControl;
		__msg.Write(__msgid);
		SP_Marshaler.Write(__msg, sendHostID);
		SP_Marshaler.Write(__msg, shelterID);
		SP_Marshaler.Write(__msg, doorState);
		
	Nettention.Proud.HostID[] __list = new Nettention.Proud.HostID[1];
	__list[0] = remote;
		
	return RmiSend(__list,rmiContext,__msg,
		RmiName_RequestShelterDoorControl, Common.RequestShelterDoorControl);
}

public bool RequestShelterDoorControl(Nettention.Proud.HostID[] remotes,Nettention.Proud.RmiContext rmiContext, int sendHostID, int shelterID, bool doorState)
{
	Nettention.Proud.Message __msg=new Nettention.Proud.Message();
__msg.SimplePacketMode = core.IsSimplePacketMode();
Nettention.Proud.RmiID __msgid= Common.RequestShelterDoorControl;
__msg.Write(__msgid);
SP_Marshaler.Write(__msg, sendHostID);
SP_Marshaler.Write(__msg, shelterID);
SP_Marshaler.Write(__msg, doorState);
		
	return RmiSend(remotes,rmiContext,__msg,
		RmiName_RequestShelterDoorControl, Common.RequestShelterDoorControl);
}
public bool RequestShelterEnter(Nettention.Proud.HostID remote,Nettention.Proud.RmiContext rmiContext, int sendHostID, int shelterID, bool enter)
{
	Nettention.Proud.Message __msg=new Nettention.Proud.Message();
		__msg.SimplePacketMode = core.IsSimplePacketMode();
		Nettention.Proud.RmiID __msgid= Common.RequestShelterEnter;
		__msg.Write(__msgid);
		SP_Marshaler.Write(__msg, sendHostID);
		SP_Marshaler.Write(__msg, shelterID);
		SP_Marshaler.Write(__msg, enter);
		
	Nettention.Proud.HostID[] __list = new Nettention.Proud.HostID[1];
	__list[0] = remote;
		
	return RmiSend(__list,rmiContext,__msg,
		RmiName_RequestShelterEnter, Common.RequestShelterEnter);
}

public bool RequestShelterEnter(Nettention.Proud.HostID[] remotes,Nettention.Proud.RmiContext rmiContext, int sendHostID, int shelterID, bool enter)
{
	Nettention.Proud.Message __msg=new Nettention.Proud.Message();
__msg.SimplePacketMode = core.IsSimplePacketMode();
Nettention.Proud.RmiID __msgid= Common.RequestShelterEnter;
__msg.Write(__msgid);
SP_Marshaler.Write(__msg, sendHostID);
SP_Marshaler.Write(__msg, shelterID);
SP_Marshaler.Write(__msg, enter);
		
	return RmiSend(remotes,rmiContext,__msg,
		RmiName_RequestShelterEnter, Common.RequestShelterEnter);
}
public bool NotifyLoginSuccess(Nettention.Proud.HostID remote,Nettention.Proud.RmiContext rmiContext, int hostID, bool host)
{
	Nettention.Proud.Message __msg=new Nettention.Proud.Message();
		__msg.SimplePacketMode = core.IsSimplePacketMode();
		Nettention.Proud.RmiID __msgid= Common.NotifyLoginSuccess;
		__msg.Write(__msgid);
		SP_Marshaler.Write(__msg, hostID);
		SP_Marshaler.Write(__msg, host);
		
	Nettention.Proud.HostID[] __list = new Nettention.Proud.HostID[1];
	__list[0] = remote;
		
	return RmiSend(__list,rmiContext,__msg,
		RmiName_NotifyLoginSuccess, Common.NotifyLoginSuccess);
}

public bool NotifyLoginSuccess(Nettention.Proud.HostID[] remotes,Nettention.Proud.RmiContext rmiContext, int hostID, bool host)
{
	Nettention.Proud.Message __msg=new Nettention.Proud.Message();
__msg.SimplePacketMode = core.IsSimplePacketMode();
Nettention.Proud.RmiID __msgid= Common.NotifyLoginSuccess;
__msg.Write(__msgid);
SP_Marshaler.Write(__msg, hostID);
SP_Marshaler.Write(__msg, host);
		
	return RmiSend(remotes,rmiContext,__msg,
		RmiName_NotifyLoginSuccess, Common.NotifyLoginSuccess);
}
public bool NotifyLoginFailed(Nettention.Proud.HostID remote,Nettention.Proud.RmiContext rmiContext, string reason)
{
	Nettention.Proud.Message __msg=new Nettention.Proud.Message();
		__msg.SimplePacketMode = core.IsSimplePacketMode();
		Nettention.Proud.RmiID __msgid= Common.NotifyLoginFailed;
		__msg.Write(__msgid);
		SP_Marshaler.Write(__msg, reason);
		
	Nettention.Proud.HostID[] __list = new Nettention.Proud.HostID[1];
	__list[0] = remote;
		
	return RmiSend(__list,rmiContext,__msg,
		RmiName_NotifyLoginFailed, Common.NotifyLoginFailed);
}

public bool NotifyLoginFailed(Nettention.Proud.HostID[] remotes,Nettention.Proud.RmiContext rmiContext, string reason)
{
	Nettention.Proud.Message __msg=new Nettention.Proud.Message();
__msg.SimplePacketMode = core.IsSimplePacketMode();
Nettention.Proud.RmiID __msgid= Common.NotifyLoginFailed;
__msg.Write(__msgid);
SP_Marshaler.Write(__msg, reason);
		
	return RmiSend(remotes,rmiContext,__msg,
		RmiName_NotifyLoginFailed, Common.NotifyLoginFailed);
}
public bool NotifyOtherClientJoin(Nettention.Proud.HostID remote,Nettention.Proud.RmiContext rmiContext, int hostID, string name, float x, float y, float z)
{
	Nettention.Proud.Message __msg=new Nettention.Proud.Message();
		__msg.SimplePacketMode = core.IsSimplePacketMode();
		Nettention.Proud.RmiID __msgid= Common.NotifyOtherClientJoin;
		__msg.Write(__msgid);
		SP_Marshaler.Write(__msg, hostID);
		SP_Marshaler.Write(__msg, name);
		SP_Marshaler.Write(__msg, x);
		SP_Marshaler.Write(__msg, y);
		SP_Marshaler.Write(__msg, z);
		
	Nettention.Proud.HostID[] __list = new Nettention.Proud.HostID[1];
	__list[0] = remote;
		
	return RmiSend(__list,rmiContext,__msg,
		RmiName_NotifyOtherClientJoin, Common.NotifyOtherClientJoin);
}

public bool NotifyOtherClientJoin(Nettention.Proud.HostID[] remotes,Nettention.Proud.RmiContext rmiContext, int hostID, string name, float x, float y, float z)
{
	Nettention.Proud.Message __msg=new Nettention.Proud.Message();
__msg.SimplePacketMode = core.IsSimplePacketMode();
Nettention.Proud.RmiID __msgid= Common.NotifyOtherClientJoin;
__msg.Write(__msgid);
SP_Marshaler.Write(__msg, hostID);
SP_Marshaler.Write(__msg, name);
SP_Marshaler.Write(__msg, x);
SP_Marshaler.Write(__msg, y);
SP_Marshaler.Write(__msg, z);
		
	return RmiSend(remotes,rmiContext,__msg,
		RmiName_NotifyOtherClientJoin, Common.NotifyOtherClientJoin);
}
public bool NotifyPlayerLost(Nettention.Proud.HostID remote,Nettention.Proud.RmiContext rmiContext, int hostID)
{
	Nettention.Proud.Message __msg=new Nettention.Proud.Message();
		__msg.SimplePacketMode = core.IsSimplePacketMode();
		Nettention.Proud.RmiID __msgid= Common.NotifyPlayerLost;
		__msg.Write(__msgid);
		SP_Marshaler.Write(__msg, hostID);
		
	Nettention.Proud.HostID[] __list = new Nettention.Proud.HostID[1];
	__list[0] = remote;
		
	return RmiSend(__list,rmiContext,__msg,
		RmiName_NotifyPlayerLost, Common.NotifyPlayerLost);
}

public bool NotifyPlayerLost(Nettention.Proud.HostID[] remotes,Nettention.Proud.RmiContext rmiContext, int hostID)
{
	Nettention.Proud.Message __msg=new Nettention.Proud.Message();
__msg.SimplePacketMode = core.IsSimplePacketMode();
Nettention.Proud.RmiID __msgid= Common.NotifyPlayerLost;
__msg.Write(__msgid);
SP_Marshaler.Write(__msg, hostID);
		
	return RmiSend(remotes,rmiContext,__msg,
		RmiName_NotifyPlayerLost, Common.NotifyPlayerLost);
}
public bool NotifyPlayerMove(Nettention.Proud.HostID remote,Nettention.Proud.RmiContext rmiContext, int hostID, string name, float curX, float curY, float curZ, float velocityX, float velocityY, float velocityZ, float crx, float cry, float crz, float rx, float ry, float rz)
{
	Nettention.Proud.Message __msg=new Nettention.Proud.Message();
		__msg.SimplePacketMode = core.IsSimplePacketMode();
		Nettention.Proud.RmiID __msgid= Common.NotifyPlayerMove;
		__msg.Write(__msgid);
		SP_Marshaler.Write(__msg, hostID);
		SP_Marshaler.Write(__msg, name);
		SP_Marshaler.Write(__msg, curX);
		SP_Marshaler.Write(__msg, curY);
		SP_Marshaler.Write(__msg, curZ);
		SP_Marshaler.Write(__msg, velocityX);
		SP_Marshaler.Write(__msg, velocityY);
		SP_Marshaler.Write(__msg, velocityZ);
		SP_Marshaler.Write(__msg, crx);
		SP_Marshaler.Write(__msg, cry);
		SP_Marshaler.Write(__msg, crz);
		SP_Marshaler.Write(__msg, rx);
		SP_Marshaler.Write(__msg, ry);
		SP_Marshaler.Write(__msg, rz);
		
	Nettention.Proud.HostID[] __list = new Nettention.Proud.HostID[1];
	__list[0] = remote;
		
	return RmiSend(__list,rmiContext,__msg,
		RmiName_NotifyPlayerMove, Common.NotifyPlayerMove);
}

public bool NotifyPlayerMove(Nettention.Proud.HostID[] remotes,Nettention.Proud.RmiContext rmiContext, int hostID, string name, float curX, float curY, float curZ, float velocityX, float velocityY, float velocityZ, float crx, float cry, float crz, float rx, float ry, float rz)
{
	Nettention.Proud.Message __msg=new Nettention.Proud.Message();
__msg.SimplePacketMode = core.IsSimplePacketMode();
Nettention.Proud.RmiID __msgid= Common.NotifyPlayerMove;
__msg.Write(__msgid);
SP_Marshaler.Write(__msg, hostID);
SP_Marshaler.Write(__msg, name);
SP_Marshaler.Write(__msg, curX);
SP_Marshaler.Write(__msg, curY);
SP_Marshaler.Write(__msg, curZ);
SP_Marshaler.Write(__msg, velocityX);
SP_Marshaler.Write(__msg, velocityY);
SP_Marshaler.Write(__msg, velocityZ);
SP_Marshaler.Write(__msg, crx);
SP_Marshaler.Write(__msg, cry);
SP_Marshaler.Write(__msg, crz);
SP_Marshaler.Write(__msg, rx);
SP_Marshaler.Write(__msg, ry);
SP_Marshaler.Write(__msg, rz);
		
	return RmiSend(remotes,rmiContext,__msg,
		RmiName_NotifyPlayerMove, Common.NotifyPlayerMove);
}
public bool NotifyDeleteItem(Nettention.Proud.HostID remote,Nettention.Proud.RmiContext rmiContext, int itemID)
{
	Nettention.Proud.Message __msg=new Nettention.Proud.Message();
		__msg.SimplePacketMode = core.IsSimplePacketMode();
		Nettention.Proud.RmiID __msgid= Common.NotifyDeleteItem;
		__msg.Write(__msgid);
		SP_Marshaler.Write(__msg, itemID);
		
	Nettention.Proud.HostID[] __list = new Nettention.Proud.HostID[1];
	__list[0] = remote;
		
	return RmiSend(__list,rmiContext,__msg,
		RmiName_NotifyDeleteItem, Common.NotifyDeleteItem);
}

public bool NotifyDeleteItem(Nettention.Proud.HostID[] remotes,Nettention.Proud.RmiContext rmiContext, int itemID)
{
	Nettention.Proud.Message __msg=new Nettention.Proud.Message();
__msg.SimplePacketMode = core.IsSimplePacketMode();
Nettention.Proud.RmiID __msgid= Common.NotifyDeleteItem;
__msg.Write(__msgid);
SP_Marshaler.Write(__msg, itemID);
		
	return RmiSend(remotes,rmiContext,__msg,
		RmiName_NotifyDeleteItem, Common.NotifyDeleteItem);
}
public bool NotifyCreateItem(Nettention.Proud.HostID remote,Nettention.Proud.RmiContext rmiContext, int hostID, int itemCID, int itemID, UnityEngine.Vector3 pos, UnityEngine.Vector3 rot)
{
	Nettention.Proud.Message __msg=new Nettention.Proud.Message();
		__msg.SimplePacketMode = core.IsSimplePacketMode();
		Nettention.Proud.RmiID __msgid= Common.NotifyCreateItem;
		__msg.Write(__msgid);
		SP_Marshaler.Write(__msg, hostID);
		SP_Marshaler.Write(__msg, itemCID);
		SP_Marshaler.Write(__msg, itemID);
		SP_Marshaler.Write(__msg, pos);
		SP_Marshaler.Write(__msg, rot);
		
	Nettention.Proud.HostID[] __list = new Nettention.Proud.HostID[1];
	__list[0] = remote;
		
	return RmiSend(__list,rmiContext,__msg,
		RmiName_NotifyCreateItem, Common.NotifyCreateItem);
}

public bool NotifyCreateItem(Nettention.Proud.HostID[] remotes,Nettention.Proud.RmiContext rmiContext, int hostID, int itemCID, int itemID, UnityEngine.Vector3 pos, UnityEngine.Vector3 rot)
{
	Nettention.Proud.Message __msg=new Nettention.Proud.Message();
__msg.SimplePacketMode = core.IsSimplePacketMode();
Nettention.Proud.RmiID __msgid= Common.NotifyCreateItem;
__msg.Write(__msgid);
SP_Marshaler.Write(__msg, hostID);
SP_Marshaler.Write(__msg, itemCID);
SP_Marshaler.Write(__msg, itemID);
SP_Marshaler.Write(__msg, pos);
SP_Marshaler.Write(__msg, rot);
		
	return RmiSend(remotes,rmiContext,__msg,
		RmiName_NotifyCreateItem, Common.NotifyCreateItem);
}
public bool NotifyStartOxyChargerState(Nettention.Proud.HostID remote,Nettention.Proud.RmiContext rmiContext, int oxyChargerID, float oxy)
{
	Nettention.Proud.Message __msg=new Nettention.Proud.Message();
		__msg.SimplePacketMode = core.IsSimplePacketMode();
		Nettention.Proud.RmiID __msgid= Common.NotifyStartOxyChargerState;
		__msg.Write(__msgid);
		SP_Marshaler.Write(__msg, oxyChargerID);
		SP_Marshaler.Write(__msg, oxy);
		
	Nettention.Proud.HostID[] __list = new Nettention.Proud.HostID[1];
	__list[0] = remote;
		
	return RmiSend(__list,rmiContext,__msg,
		RmiName_NotifyStartOxyChargerState, Common.NotifyStartOxyChargerState);
}

public bool NotifyStartOxyChargerState(Nettention.Proud.HostID[] remotes,Nettention.Proud.RmiContext rmiContext, int oxyChargerID, float oxy)
{
	Nettention.Proud.Message __msg=new Nettention.Proud.Message();
__msg.SimplePacketMode = core.IsSimplePacketMode();
Nettention.Proud.RmiID __msgid= Common.NotifyStartOxyChargerState;
__msg.Write(__msgid);
SP_Marshaler.Write(__msg, oxyChargerID);
SP_Marshaler.Write(__msg, oxy);
		
	return RmiSend(remotes,rmiContext,__msg,
		RmiName_NotifyStartOxyChargerState, Common.NotifyStartOxyChargerState);
}
public bool NotifyStartItemBoxState(Nettention.Proud.HostID remote,Nettention.Proud.RmiContext rmiContext, int itemBoxID, bool openState)
{
	Nettention.Proud.Message __msg=new Nettention.Proud.Message();
		__msg.SimplePacketMode = core.IsSimplePacketMode();
		Nettention.Proud.RmiID __msgid= Common.NotifyStartItemBoxState;
		__msg.Write(__msgid);
		SP_Marshaler.Write(__msg, itemBoxID);
		SP_Marshaler.Write(__msg, openState);
		
	Nettention.Proud.HostID[] __list = new Nettention.Proud.HostID[1];
	__list[0] = remote;
		
	return RmiSend(__list,rmiContext,__msg,
		RmiName_NotifyStartItemBoxState, Common.NotifyStartItemBoxState);
}

public bool NotifyStartItemBoxState(Nettention.Proud.HostID[] remotes,Nettention.Proud.RmiContext rmiContext, int itemBoxID, bool openState)
{
	Nettention.Proud.Message __msg=new Nettention.Proud.Message();
__msg.SimplePacketMode = core.IsSimplePacketMode();
Nettention.Proud.RmiID __msgid= Common.NotifyStartItemBoxState;
__msg.Write(__msgid);
SP_Marshaler.Write(__msg, itemBoxID);
SP_Marshaler.Write(__msg, openState);
		
	return RmiSend(remotes,rmiContext,__msg,
		RmiName_NotifyStartItemBoxState, Common.NotifyStartItemBoxState);
}
public bool NotifyPlayerEquipItem(Nettention.Proud.HostID remote,Nettention.Proud.RmiContext rmiContext, int hostID, int itemCID, int itemID)
{
	Nettention.Proud.Message __msg=new Nettention.Proud.Message();
		__msg.SimplePacketMode = core.IsSimplePacketMode();
		Nettention.Proud.RmiID __msgid= Common.NotifyPlayerEquipItem;
		__msg.Write(__msgid);
		SP_Marshaler.Write(__msg, hostID);
		SP_Marshaler.Write(__msg, itemCID);
		SP_Marshaler.Write(__msg, itemID);
		
	Nettention.Proud.HostID[] __list = new Nettention.Proud.HostID[1];
	__list[0] = remote;
		
	return RmiSend(__list,rmiContext,__msg,
		RmiName_NotifyPlayerEquipItem, Common.NotifyPlayerEquipItem);
}

public bool NotifyPlayerEquipItem(Nettention.Proud.HostID[] remotes,Nettention.Proud.RmiContext rmiContext, int hostID, int itemCID, int itemID)
{
	Nettention.Proud.Message __msg=new Nettention.Proud.Message();
__msg.SimplePacketMode = core.IsSimplePacketMode();
Nettention.Proud.RmiID __msgid= Common.NotifyPlayerEquipItem;
__msg.Write(__msgid);
SP_Marshaler.Write(__msg, hostID);
SP_Marshaler.Write(__msg, itemCID);
SP_Marshaler.Write(__msg, itemID);
		
	return RmiSend(remotes,rmiContext,__msg,
		RmiName_NotifyPlayerEquipItem, Common.NotifyPlayerEquipItem);
}
public bool NotifyPlayerUnEquipItem(Nettention.Proud.HostID remote,Nettention.Proud.RmiContext rmiContext, int hostID, int itemCID, int itemID, UnityEngine.Vector3 pos, UnityEngine.Vector3 rot)
{
	Nettention.Proud.Message __msg=new Nettention.Proud.Message();
		__msg.SimplePacketMode = core.IsSimplePacketMode();
		Nettention.Proud.RmiID __msgid= Common.NotifyPlayerUnEquipItem;
		__msg.Write(__msgid);
		SP_Marshaler.Write(__msg, hostID);
		SP_Marshaler.Write(__msg, itemCID);
		SP_Marshaler.Write(__msg, itemID);
		SP_Marshaler.Write(__msg, pos);
		SP_Marshaler.Write(__msg, rot);
		
	Nettention.Proud.HostID[] __list = new Nettention.Proud.HostID[1];
	__list[0] = remote;
		
	return RmiSend(__list,rmiContext,__msg,
		RmiName_NotifyPlayerUnEquipItem, Common.NotifyPlayerUnEquipItem);
}

public bool NotifyPlayerUnEquipItem(Nettention.Proud.HostID[] remotes,Nettention.Proud.RmiContext rmiContext, int hostID, int itemCID, int itemID, UnityEngine.Vector3 pos, UnityEngine.Vector3 rot)
{
	Nettention.Proud.Message __msg=new Nettention.Proud.Message();
__msg.SimplePacketMode = core.IsSimplePacketMode();
Nettention.Proud.RmiID __msgid= Common.NotifyPlayerUnEquipItem;
__msg.Write(__msgid);
SP_Marshaler.Write(__msg, hostID);
SP_Marshaler.Write(__msg, itemCID);
SP_Marshaler.Write(__msg, itemID);
SP_Marshaler.Write(__msg, pos);
SP_Marshaler.Write(__msg, rot);
		
	return RmiSend(remotes,rmiContext,__msg,
		RmiName_NotifyPlayerUnEquipItem, Common.NotifyPlayerUnEquipItem);
}
public bool NotifyPlayerBulletCreate(Nettention.Proud.HostID remote,Nettention.Proud.RmiContext rmiContext, int sendHostID, int bulletType, string bulletID, UnityEngine.Vector3 pos, UnityEngine.Vector3 rot)
{
	Nettention.Proud.Message __msg=new Nettention.Proud.Message();
		__msg.SimplePacketMode = core.IsSimplePacketMode();
		Nettention.Proud.RmiID __msgid= Common.NotifyPlayerBulletCreate;
		__msg.Write(__msgid);
		SP_Marshaler.Write(__msg, sendHostID);
		SP_Marshaler.Write(__msg, bulletType);
		SP_Marshaler.Write(__msg, bulletID);
		SP_Marshaler.Write(__msg, pos);
		SP_Marshaler.Write(__msg, rot);
		
	Nettention.Proud.HostID[] __list = new Nettention.Proud.HostID[1];
	__list[0] = remote;
		
	return RmiSend(__list,rmiContext,__msg,
		RmiName_NotifyPlayerBulletCreate, Common.NotifyPlayerBulletCreate);
}

public bool NotifyPlayerBulletCreate(Nettention.Proud.HostID[] remotes,Nettention.Proud.RmiContext rmiContext, int sendHostID, int bulletType, string bulletID, UnityEngine.Vector3 pos, UnityEngine.Vector3 rot)
{
	Nettention.Proud.Message __msg=new Nettention.Proud.Message();
__msg.SimplePacketMode = core.IsSimplePacketMode();
Nettention.Proud.RmiID __msgid= Common.NotifyPlayerBulletCreate;
__msg.Write(__msgid);
SP_Marshaler.Write(__msg, sendHostID);
SP_Marshaler.Write(__msg, bulletType);
SP_Marshaler.Write(__msg, bulletID);
SP_Marshaler.Write(__msg, pos);
SP_Marshaler.Write(__msg, rot);
		
	return RmiSend(remotes,rmiContext,__msg,
		RmiName_NotifyPlayerBulletCreate, Common.NotifyPlayerBulletCreate);
}
public bool NotifyPlayerBulletMove(Nettention.Proud.HostID remote,Nettention.Proud.RmiContext rmiContext, int sendHostID, string bulletID, UnityEngine.Vector3 pos, UnityEngine.Vector3 velocity, UnityEngine.Vector3 rot)
{
	Nettention.Proud.Message __msg=new Nettention.Proud.Message();
		__msg.SimplePacketMode = core.IsSimplePacketMode();
		Nettention.Proud.RmiID __msgid= Common.NotifyPlayerBulletMove;
		__msg.Write(__msgid);
		SP_Marshaler.Write(__msg, sendHostID);
		SP_Marshaler.Write(__msg, bulletID);
		SP_Marshaler.Write(__msg, pos);
		SP_Marshaler.Write(__msg, velocity);
		SP_Marshaler.Write(__msg, rot);
		
	Nettention.Proud.HostID[] __list = new Nettention.Proud.HostID[1];
	__list[0] = remote;
		
	return RmiSend(__list,rmiContext,__msg,
		RmiName_NotifyPlayerBulletMove, Common.NotifyPlayerBulletMove);
}

public bool NotifyPlayerBulletMove(Nettention.Proud.HostID[] remotes,Nettention.Proud.RmiContext rmiContext, int sendHostID, string bulletID, UnityEngine.Vector3 pos, UnityEngine.Vector3 velocity, UnityEngine.Vector3 rot)
{
	Nettention.Proud.Message __msg=new Nettention.Proud.Message();
__msg.SimplePacketMode = core.IsSimplePacketMode();
Nettention.Proud.RmiID __msgid= Common.NotifyPlayerBulletMove;
__msg.Write(__msgid);
SP_Marshaler.Write(__msg, sendHostID);
SP_Marshaler.Write(__msg, bulletID);
SP_Marshaler.Write(__msg, pos);
SP_Marshaler.Write(__msg, velocity);
SP_Marshaler.Write(__msg, rot);
		
	return RmiSend(remotes,rmiContext,__msg,
		RmiName_NotifyPlayerBulletMove, Common.NotifyPlayerBulletMove);
}
public bool NotifyPlayerBulletDelete(Nettention.Proud.HostID remote,Nettention.Proud.RmiContext rmiContext, int sendHostID, string bulletID)
{
	Nettention.Proud.Message __msg=new Nettention.Proud.Message();
		__msg.SimplePacketMode = core.IsSimplePacketMode();
		Nettention.Proud.RmiID __msgid= Common.NotifyPlayerBulletDelete;
		__msg.Write(__msgid);
		SP_Marshaler.Write(__msg, sendHostID);
		SP_Marshaler.Write(__msg, bulletID);
		
	Nettention.Proud.HostID[] __list = new Nettention.Proud.HostID[1];
	__list[0] = remote;
		
	return RmiSend(__list,rmiContext,__msg,
		RmiName_NotifyPlayerBulletDelete, Common.NotifyPlayerBulletDelete);
}

public bool NotifyPlayerBulletDelete(Nettention.Proud.HostID[] remotes,Nettention.Proud.RmiContext rmiContext, int sendHostID, string bulletID)
{
	Nettention.Proud.Message __msg=new Nettention.Proud.Message();
__msg.SimplePacketMode = core.IsSimplePacketMode();
Nettention.Proud.RmiID __msgid= Common.NotifyPlayerBulletDelete;
__msg.Write(__msgid);
SP_Marshaler.Write(__msg, sendHostID);
SP_Marshaler.Write(__msg, bulletID);
		
	return RmiSend(remotes,rmiContext,__msg,
		RmiName_NotifyPlayerBulletDelete, Common.NotifyPlayerBulletDelete);
}
public bool NotifyPlayerAnimation(Nettention.Proud.HostID remote,Nettention.Proud.RmiContext rmiContext, int hostID, string name, string animationName, int aniValue)
{
	Nettention.Proud.Message __msg=new Nettention.Proud.Message();
		__msg.SimplePacketMode = core.IsSimplePacketMode();
		Nettention.Proud.RmiID __msgid= Common.NotifyPlayerAnimation;
		__msg.Write(__msgid);
		SP_Marshaler.Write(__msg, hostID);
		SP_Marshaler.Write(__msg, name);
		SP_Marshaler.Write(__msg, animationName);
		SP_Marshaler.Write(__msg, aniValue);
		
	Nettention.Proud.HostID[] __list = new Nettention.Proud.HostID[1];
	__list[0] = remote;
		
	return RmiSend(__list,rmiContext,__msg,
		RmiName_NotifyPlayerAnimation, Common.NotifyPlayerAnimation);
}

public bool NotifyPlayerAnimation(Nettention.Proud.HostID[] remotes,Nettention.Proud.RmiContext rmiContext, int hostID, string name, string animationName, int aniValue)
{
	Nettention.Proud.Message __msg=new Nettention.Proud.Message();
__msg.SimplePacketMode = core.IsSimplePacketMode();
Nettention.Proud.RmiID __msgid= Common.NotifyPlayerAnimation;
__msg.Write(__msgid);
SP_Marshaler.Write(__msg, hostID);
SP_Marshaler.Write(__msg, name);
SP_Marshaler.Write(__msg, animationName);
SP_Marshaler.Write(__msg, aniValue);
		
	return RmiSend(remotes,rmiContext,__msg,
		RmiName_NotifyPlayerAnimation, Common.NotifyPlayerAnimation);
}
public bool NotifyPlayerChangeHP(Nettention.Proud.HostID remote,Nettention.Proud.RmiContext rmiContext, int sendHostID, string name, float hp, float prevhp, float maxhp, UnityEngine.Vector3 dir)
{
	Nettention.Proud.Message __msg=new Nettention.Proud.Message();
		__msg.SimplePacketMode = core.IsSimplePacketMode();
		Nettention.Proud.RmiID __msgid= Common.NotifyPlayerChangeHP;
		__msg.Write(__msgid);
		SP_Marshaler.Write(__msg, sendHostID);
		SP_Marshaler.Write(__msg, name);
		SP_Marshaler.Write(__msg, hp);
		SP_Marshaler.Write(__msg, prevhp);
		SP_Marshaler.Write(__msg, maxhp);
		SP_Marshaler.Write(__msg, dir);
		
	Nettention.Proud.HostID[] __list = new Nettention.Proud.HostID[1];
	__list[0] = remote;
		
	return RmiSend(__list,rmiContext,__msg,
		RmiName_NotifyPlayerChangeHP, Common.NotifyPlayerChangeHP);
}

public bool NotifyPlayerChangeHP(Nettention.Proud.HostID[] remotes,Nettention.Proud.RmiContext rmiContext, int sendHostID, string name, float hp, float prevhp, float maxhp, UnityEngine.Vector3 dir)
{
	Nettention.Proud.Message __msg=new Nettention.Proud.Message();
__msg.SimplePacketMode = core.IsSimplePacketMode();
Nettention.Proud.RmiID __msgid= Common.NotifyPlayerChangeHP;
__msg.Write(__msgid);
SP_Marshaler.Write(__msg, sendHostID);
SP_Marshaler.Write(__msg, name);
SP_Marshaler.Write(__msg, hp);
SP_Marshaler.Write(__msg, prevhp);
SP_Marshaler.Write(__msg, maxhp);
SP_Marshaler.Write(__msg, dir);
		
	return RmiSend(remotes,rmiContext,__msg,
		RmiName_NotifyPlayerChangeHP, Common.NotifyPlayerChangeHP);
}
public bool NotifyPlayerChangeOxygen(Nettention.Proud.HostID remote,Nettention.Proud.RmiContext rmiContext, int sendHostID, string name, float oxygen, float prevoxy, float maxoxy)
{
	Nettention.Proud.Message __msg=new Nettention.Proud.Message();
		__msg.SimplePacketMode = core.IsSimplePacketMode();
		Nettention.Proud.RmiID __msgid= Common.NotifyPlayerChangeOxygen;
		__msg.Write(__msgid);
		SP_Marshaler.Write(__msg, sendHostID);
		SP_Marshaler.Write(__msg, name);
		SP_Marshaler.Write(__msg, oxygen);
		SP_Marshaler.Write(__msg, prevoxy);
		SP_Marshaler.Write(__msg, maxoxy);
		
	Nettention.Proud.HostID[] __list = new Nettention.Proud.HostID[1];
	__list[0] = remote;
		
	return RmiSend(__list,rmiContext,__msg,
		RmiName_NotifyPlayerChangeOxygen, Common.NotifyPlayerChangeOxygen);
}

public bool NotifyPlayerChangeOxygen(Nettention.Proud.HostID[] remotes,Nettention.Proud.RmiContext rmiContext, int sendHostID, string name, float oxygen, float prevoxy, float maxoxy)
{
	Nettention.Proud.Message __msg=new Nettention.Proud.Message();
__msg.SimplePacketMode = core.IsSimplePacketMode();
Nettention.Proud.RmiID __msgid= Common.NotifyPlayerChangeOxygen;
__msg.Write(__msgid);
SP_Marshaler.Write(__msg, sendHostID);
SP_Marshaler.Write(__msg, name);
SP_Marshaler.Write(__msg, oxygen);
SP_Marshaler.Write(__msg, prevoxy);
SP_Marshaler.Write(__msg, maxoxy);
		
	return RmiSend(remotes,rmiContext,__msg,
		RmiName_NotifyPlayerChangeOxygen, Common.NotifyPlayerChangeOxygen);
}
public bool NotifyUseOxyCharger(Nettention.Proud.HostID remote,Nettention.Proud.RmiContext rmiContext, int sendHostID, int oxyChargerIndex, float userOxy)
{
	Nettention.Proud.Message __msg=new Nettention.Proud.Message();
		__msg.SimplePacketMode = core.IsSimplePacketMode();
		Nettention.Proud.RmiID __msgid= Common.NotifyUseOxyCharger;
		__msg.Write(__msgid);
		SP_Marshaler.Write(__msg, sendHostID);
		SP_Marshaler.Write(__msg, oxyChargerIndex);
		SP_Marshaler.Write(__msg, userOxy);
		
	Nettention.Proud.HostID[] __list = new Nettention.Proud.HostID[1];
	__list[0] = remote;
		
	return RmiSend(__list,rmiContext,__msg,
		RmiName_NotifyUseOxyCharger, Common.NotifyUseOxyCharger);
}

public bool NotifyUseOxyCharger(Nettention.Proud.HostID[] remotes,Nettention.Proud.RmiContext rmiContext, int sendHostID, int oxyChargerIndex, float userOxy)
{
	Nettention.Proud.Message __msg=new Nettention.Proud.Message();
__msg.SimplePacketMode = core.IsSimplePacketMode();
Nettention.Proud.RmiID __msgid= Common.NotifyUseOxyCharger;
__msg.Write(__msgid);
SP_Marshaler.Write(__msg, sendHostID);
SP_Marshaler.Write(__msg, oxyChargerIndex);
SP_Marshaler.Write(__msg, userOxy);
		
	return RmiSend(remotes,rmiContext,__msg,
		RmiName_NotifyUseOxyCharger, Common.NotifyUseOxyCharger);
}
public bool NotifyUseItemBox(Nettention.Proud.HostID remote,Nettention.Proud.RmiContext rmiContext, int sendHostID, int itemBoxIndex, int itemID)
{
	Nettention.Proud.Message __msg=new Nettention.Proud.Message();
		__msg.SimplePacketMode = core.IsSimplePacketMode();
		Nettention.Proud.RmiID __msgid= Common.NotifyUseItemBox;
		__msg.Write(__msgid);
		SP_Marshaler.Write(__msg, sendHostID);
		SP_Marshaler.Write(__msg, itemBoxIndex);
		SP_Marshaler.Write(__msg, itemID);
		
	Nettention.Proud.HostID[] __list = new Nettention.Proud.HostID[1];
	__list[0] = remote;
		
	return RmiSend(__list,rmiContext,__msg,
		RmiName_NotifyUseItemBox, Common.NotifyUseItemBox);
}

public bool NotifyUseItemBox(Nettention.Proud.HostID[] remotes,Nettention.Proud.RmiContext rmiContext, int sendHostID, int itemBoxIndex, int itemID)
{
	Nettention.Proud.Message __msg=new Nettention.Proud.Message();
__msg.SimplePacketMode = core.IsSimplePacketMode();
Nettention.Proud.RmiID __msgid= Common.NotifyUseItemBox;
__msg.Write(__msgid);
SP_Marshaler.Write(__msg, sendHostID);
SP_Marshaler.Write(__msg, itemBoxIndex);
SP_Marshaler.Write(__msg, itemID);
		
	return RmiSend(remotes,rmiContext,__msg,
		RmiName_NotifyUseItemBox, Common.NotifyUseItemBox);
}
public bool NotifyShelterInfo(Nettention.Proud.HostID remote,Nettention.Proud.RmiContext rmiContext, int sendHostID, int shelterID, bool doorState, bool lightState)
{
	Nettention.Proud.Message __msg=new Nettention.Proud.Message();
		__msg.SimplePacketMode = core.IsSimplePacketMode();
		Nettention.Proud.RmiID __msgid= Common.NotifyShelterInfo;
		__msg.Write(__msgid);
		SP_Marshaler.Write(__msg, sendHostID);
		SP_Marshaler.Write(__msg, shelterID);
		SP_Marshaler.Write(__msg, doorState);
		SP_Marshaler.Write(__msg, lightState);
		
	Nettention.Proud.HostID[] __list = new Nettention.Proud.HostID[1];
	__list[0] = remote;
		
	return RmiSend(__list,rmiContext,__msg,
		RmiName_NotifyShelterInfo, Common.NotifyShelterInfo);
}

public bool NotifyShelterInfo(Nettention.Proud.HostID[] remotes,Nettention.Proud.RmiContext rmiContext, int sendHostID, int shelterID, bool doorState, bool lightState)
{
	Nettention.Proud.Message __msg=new Nettention.Proud.Message();
__msg.SimplePacketMode = core.IsSimplePacketMode();
Nettention.Proud.RmiID __msgid= Common.NotifyShelterInfo;
__msg.Write(__msgid);
SP_Marshaler.Write(__msg, sendHostID);
SP_Marshaler.Write(__msg, shelterID);
SP_Marshaler.Write(__msg, doorState);
SP_Marshaler.Write(__msg, lightState);
		
	return RmiSend(remotes,rmiContext,__msg,
		RmiName_NotifyShelterInfo, Common.NotifyShelterInfo);
}
public bool NotifyMeteorCreateTime(Nettention.Proud.HostID remote,Nettention.Proud.RmiContext rmiContext, int time)
{
	Nettention.Proud.Message __msg=new Nettention.Proud.Message();
		__msg.SimplePacketMode = core.IsSimplePacketMode();
		Nettention.Proud.RmiID __msgid= Common.NotifyMeteorCreateTime;
		__msg.Write(__msgid);
		SP_Marshaler.Write(__msg, time);
		
	Nettention.Proud.HostID[] __list = new Nettention.Proud.HostID[1];
	__list[0] = remote;
		
	return RmiSend(__list,rmiContext,__msg,
		RmiName_NotifyMeteorCreateTime, Common.NotifyMeteorCreateTime);
}

public bool NotifyMeteorCreateTime(Nettention.Proud.HostID[] remotes,Nettention.Proud.RmiContext rmiContext, int time)
{
	Nettention.Proud.Message __msg=new Nettention.Proud.Message();
__msg.SimplePacketMode = core.IsSimplePacketMode();
Nettention.Proud.RmiID __msgid= Common.NotifyMeteorCreateTime;
__msg.Write(__msgid);
SP_Marshaler.Write(__msg, time);
		
	return RmiSend(remotes,rmiContext,__msg,
		RmiName_NotifyMeteorCreateTime, Common.NotifyMeteorCreateTime);
}
public bool NotifyMeteorCreate(Nettention.Proud.HostID remote,Nettention.Proud.RmiContext rmiContext, float anglex, float anglez)
{
	Nettention.Proud.Message __msg=new Nettention.Proud.Message();
		__msg.SimplePacketMode = core.IsSimplePacketMode();
		Nettention.Proud.RmiID __msgid= Common.NotifyMeteorCreate;
		__msg.Write(__msgid);
		SP_Marshaler.Write(__msg, anglex);
		SP_Marshaler.Write(__msg, anglez);
		
	Nettention.Proud.HostID[] __list = new Nettention.Proud.HostID[1];
	__list[0] = remote;
		
	return RmiSend(__list,rmiContext,__msg,
		RmiName_NotifyMeteorCreate, Common.NotifyMeteorCreate);
}

public bool NotifyMeteorCreate(Nettention.Proud.HostID[] remotes,Nettention.Proud.RmiContext rmiContext, float anglex, float anglez)
{
	Nettention.Proud.Message __msg=new Nettention.Proud.Message();
__msg.SimplePacketMode = core.IsSimplePacketMode();
Nettention.Proud.RmiID __msgid= Common.NotifyMeteorCreate;
__msg.Write(__msgid);
SP_Marshaler.Write(__msg, anglex);
SP_Marshaler.Write(__msg, anglez);
		
	return RmiSend(remotes,rmiContext,__msg,
		RmiName_NotifyMeteorCreate, Common.NotifyMeteorCreate);
}
public bool NotifySpaceShipEngineCharge(Nettention.Proud.HostID remote,Nettention.Proud.RmiContext rmiContext, int spaceShipID, float fuel)
{
	Nettention.Proud.Message __msg=new Nettention.Proud.Message();
		__msg.SimplePacketMode = core.IsSimplePacketMode();
		Nettention.Proud.RmiID __msgid= Common.NotifySpaceShipEngineCharge;
		__msg.Write(__msgid);
		SP_Marshaler.Write(__msg, spaceShipID);
		SP_Marshaler.Write(__msg, fuel);
		
	Nettention.Proud.HostID[] __list = new Nettention.Proud.HostID[1];
	__list[0] = remote;
		
	return RmiSend(__list,rmiContext,__msg,
		RmiName_NotifySpaceShipEngineCharge, Common.NotifySpaceShipEngineCharge);
}

public bool NotifySpaceShipEngineCharge(Nettention.Proud.HostID[] remotes,Nettention.Proud.RmiContext rmiContext, int spaceShipID, float fuel)
{
	Nettention.Proud.Message __msg=new Nettention.Proud.Message();
__msg.SimplePacketMode = core.IsSimplePacketMode();
Nettention.Proud.RmiID __msgid= Common.NotifySpaceShipEngineCharge;
__msg.Write(__msgid);
SP_Marshaler.Write(__msg, spaceShipID);
SP_Marshaler.Write(__msg, fuel);
		
	return RmiSend(remotes,rmiContext,__msg,
		RmiName_NotifySpaceShipEngineCharge, Common.NotifySpaceShipEngineCharge);
}
public bool RequestSpaceShip(Nettention.Proud.HostID remote,Nettention.Proud.RmiContext rmiContext, int winPlayerID)
{
	Nettention.Proud.Message __msg=new Nettention.Proud.Message();
		__msg.SimplePacketMode = core.IsSimplePacketMode();
		Nettention.Proud.RmiID __msgid= Common.RequestSpaceShip;
		__msg.Write(__msgid);
		SP_Marshaler.Write(__msg, winPlayerID);
		
	Nettention.Proud.HostID[] __list = new Nettention.Proud.HostID[1];
	__list[0] = remote;
		
	return RmiSend(__list,rmiContext,__msg,
		RmiName_RequestSpaceShip, Common.RequestSpaceShip);
}

public bool RequestSpaceShip(Nettention.Proud.HostID[] remotes,Nettention.Proud.RmiContext rmiContext, int winPlayerID)
{
	Nettention.Proud.Message __msg=new Nettention.Proud.Message();
__msg.SimplePacketMode = core.IsSimplePacketMode();
Nettention.Proud.RmiID __msgid= Common.RequestSpaceShip;
__msg.Write(__msgid);
SP_Marshaler.Write(__msg, winPlayerID);
		
	return RmiSend(remotes,rmiContext,__msg,
		RmiName_RequestSpaceShip, Common.RequestSpaceShip);
}
public bool RequestGameEnd(Nettention.Proud.HostID remote,Nettention.Proud.RmiContext rmiContext)
{
	Nettention.Proud.Message __msg=new Nettention.Proud.Message();
		__msg.SimplePacketMode = core.IsSimplePacketMode();
		Nettention.Proud.RmiID __msgid= Common.RequestGameEnd;
		__msg.Write(__msgid);
		
	Nettention.Proud.HostID[] __list = new Nettention.Proud.HostID[1];
	__list[0] = remote;
		
	return RmiSend(__list,rmiContext,__msg,
		RmiName_RequestGameEnd, Common.RequestGameEnd);
}

public bool RequestGameEnd(Nettention.Proud.HostID[] remotes,Nettention.Proud.RmiContext rmiContext)
{
	Nettention.Proud.Message __msg=new Nettention.Proud.Message();
__msg.SimplePacketMode = core.IsSimplePacketMode();
Nettention.Proud.RmiID __msgid= Common.RequestGameEnd;
__msg.Write(__msgid);
		
	return RmiSend(remotes,rmiContext,__msg,
		RmiName_RequestGameEnd, Common.RequestGameEnd);
}
public bool NotifyKillInfo(Nettention.Proud.HostID remote,Nettention.Proud.RmiContext rmiContext, string targetName, bool kill, int totalKill, int totalAssist)
{
	Nettention.Proud.Message __msg=new Nettention.Proud.Message();
		__msg.SimplePacketMode = core.IsSimplePacketMode();
		Nettention.Proud.RmiID __msgid= Common.NotifyKillInfo;
		__msg.Write(__msgid);
		SP_Marshaler.Write(__msg, targetName);
		SP_Marshaler.Write(__msg, kill);
		SP_Marshaler.Write(__msg, totalKill);
		SP_Marshaler.Write(__msg, totalAssist);
		
	Nettention.Proud.HostID[] __list = new Nettention.Proud.HostID[1];
	__list[0] = remote;
		
	return RmiSend(__list,rmiContext,__msg,
		RmiName_NotifyKillInfo, Common.NotifyKillInfo);
}

public bool NotifyKillInfo(Nettention.Proud.HostID[] remotes,Nettention.Proud.RmiContext rmiContext, string targetName, bool kill, int totalKill, int totalAssist)
{
	Nettention.Proud.Message __msg=new Nettention.Proud.Message();
__msg.SimplePacketMode = core.IsSimplePacketMode();
Nettention.Proud.RmiID __msgid= Common.NotifyKillInfo;
__msg.Write(__msgid);
SP_Marshaler.Write(__msg, targetName);
SP_Marshaler.Write(__msg, kill);
SP_Marshaler.Write(__msg, totalKill);
SP_Marshaler.Write(__msg, totalAssist);
		
	return RmiSend(remotes,rmiContext,__msg,
		RmiName_NotifyKillInfo, Common.NotifyKillInfo);
}
public bool NotifyGameResultInfoMe(Nettention.Proud.HostID remote,Nettention.Proud.RmiContext rmiContext, string gameMode, int winState, int playTime, int kills, int assists, int death, int getMoney)
{
	Nettention.Proud.Message __msg=new Nettention.Proud.Message();
		__msg.SimplePacketMode = core.IsSimplePacketMode();
		Nettention.Proud.RmiID __msgid= Common.NotifyGameResultInfoMe;
		__msg.Write(__msgid);
		SP_Marshaler.Write(__msg, gameMode);
		SP_Marshaler.Write(__msg, winState);
		SP_Marshaler.Write(__msg, playTime);
		SP_Marshaler.Write(__msg, kills);
		SP_Marshaler.Write(__msg, assists);
		SP_Marshaler.Write(__msg, death);
		SP_Marshaler.Write(__msg, getMoney);
		
	Nettention.Proud.HostID[] __list = new Nettention.Proud.HostID[1];
	__list[0] = remote;
		
	return RmiSend(__list,rmiContext,__msg,
		RmiName_NotifyGameResultInfoMe, Common.NotifyGameResultInfoMe);
}

public bool NotifyGameResultInfoMe(Nettention.Proud.HostID[] remotes,Nettention.Proud.RmiContext rmiContext, string gameMode, int winState, int playTime, int kills, int assists, int death, int getMoney)
{
	Nettention.Proud.Message __msg=new Nettention.Proud.Message();
__msg.SimplePacketMode = core.IsSimplePacketMode();
Nettention.Proud.RmiID __msgid= Common.NotifyGameResultInfoMe;
__msg.Write(__msgid);
SP_Marshaler.Write(__msg, gameMode);
SP_Marshaler.Write(__msg, winState);
SP_Marshaler.Write(__msg, playTime);
SP_Marshaler.Write(__msg, kills);
SP_Marshaler.Write(__msg, assists);
SP_Marshaler.Write(__msg, death);
SP_Marshaler.Write(__msg, getMoney);
		
	return RmiSend(remotes,rmiContext,__msg,
		RmiName_NotifyGameResultInfoMe, Common.NotifyGameResultInfoMe);
}
public bool NotifyGameResultInfoOther(Nettention.Proud.HostID remote,Nettention.Proud.RmiContext rmiContext, string name, int state)
{
	Nettention.Proud.Message __msg=new Nettention.Proud.Message();
		__msg.SimplePacketMode = core.IsSimplePacketMode();
		Nettention.Proud.RmiID __msgid= Common.NotifyGameResultInfoOther;
		__msg.Write(__msgid);
		SP_Marshaler.Write(__msg, name);
		SP_Marshaler.Write(__msg, state);
		
	Nettention.Proud.HostID[] __list = new Nettention.Proud.HostID[1];
	__list[0] = remote;
		
	return RmiSend(__list,rmiContext,__msg,
		RmiName_NotifyGameResultInfoOther, Common.NotifyGameResultInfoOther);
}

public bool NotifyGameResultInfoOther(Nettention.Proud.HostID[] remotes,Nettention.Proud.RmiContext rmiContext, string name, int state)
{
	Nettention.Proud.Message __msg=new Nettention.Proud.Message();
__msg.SimplePacketMode = core.IsSimplePacketMode();
Nettention.Proud.RmiID __msgid= Common.NotifyGameResultInfoOther;
__msg.Write(__msgid);
SP_Marshaler.Write(__msg, name);
SP_Marshaler.Write(__msg, state);
		
	return RmiSend(remotes,rmiContext,__msg,
		RmiName_NotifyGameResultInfoOther, Common.NotifyGameResultInfoOther);
}
public bool NotifyGameResultShow(Nettention.Proud.HostID remote,Nettention.Proud.RmiContext rmiContext)
{
	Nettention.Proud.Message __msg=new Nettention.Proud.Message();
		__msg.SimplePacketMode = core.IsSimplePacketMode();
		Nettention.Proud.RmiID __msgid= Common.NotifyGameResultShow;
		__msg.Write(__msgid);
		
	Nettention.Proud.HostID[] __list = new Nettention.Proud.HostID[1];
	__list[0] = remote;
		
	return RmiSend(__list,rmiContext,__msg,
		RmiName_NotifyGameResultShow, Common.NotifyGameResultShow);
}

public bool NotifyGameResultShow(Nettention.Proud.HostID[] remotes,Nettention.Proud.RmiContext rmiContext)
{
	Nettention.Proud.Message __msg=new Nettention.Proud.Message();
__msg.SimplePacketMode = core.IsSimplePacketMode();
Nettention.Proud.RmiID __msgid= Common.NotifyGameResultShow;
__msg.Write(__msgid);
		
	return RmiSend(remotes,rmiContext,__msg,
		RmiName_NotifyGameResultShow, Common.NotifyGameResultShow);
}
#if USE_RMI_NAME_STRING
// RMI name declaration.
// It is the unique pointer that indicates RMI name such as RMI profiler.
const string RmiName_RequestServerConnect="RequestServerConnect";
const string RmiName_RequestLobbyConnect="RequestLobbyConnect";
const string RmiName_RequestNetworkGameTeamSelect="RequestNetworkGameTeamSelect";
const string RmiName_RequestNetworkGameReady="RequestNetworkGameReady";
const string RmiName_RequestNetworkChangeMap="RequestNetworkChangeMap";
const string RmiName_RequestNetworkPlayerCount="RequestNetworkPlayerCount";
const string RmiName_RequestNetworkGameModeChange="RequestNetworkGameModeChange";
const string RmiName_RequestNetworkGameStart="RequestNetworkGameStart";
const string RmiName_RequestNetworkHostOut="RequestNetworkHostOut";
const string RmiName_RequestGameSceneJoin="RequestGameSceneJoin";
const string RmiName_NotifyNetworkUserSetup="NotifyNetworkUserSetup";
const string RmiName_NotifyNetworkGameTeamChange="NotifyNetworkGameTeamChange";
const string RmiName_NotifyNetworkConnectUser="NotifyNetworkConnectUser";
const string RmiName_NotifyNetworkReady="NotifyNetworkReady";
const string RmiName_NotifyNetworkGameModeChange="NotifyNetworkGameModeChange";
const string RmiName_NotifyNetworkGamePlayerCountChange="NotifyNetworkGamePlayerCountChange";
const string RmiName_NotifyNetworkGameChangeMap="NotifyNetworkGameChangeMap";
const string RmiName_NotifyNetworkGameStart="NotifyNetworkGameStart";
const string RmiName_NotifyNetworkGameStartFailed="NotifyNetworkGameStartFailed";
const string RmiName_NotifyNetworkGameHostOut="NotifyNetworkGameHostOut";
const string RmiName_RequestClientJoin="RequestClientJoin";
const string RmiName_RequestWorldCreateItem="RequestWorldCreateItem";
const string RmiName_RequestPlayerDamage="RequestPlayerDamage";
const string RmiName_RequestPlayerUseOxy="RequestPlayerUseOxy";
const string RmiName_RequestUseOxyCharger="RequestUseOxyCharger";
const string RmiName_RequestUseItemBox="RequestUseItemBox";
const string RmiName_RequestShelterStartSetup="RequestShelterStartSetup";
const string RmiName_RequestShelterDoorControl="RequestShelterDoorControl";
const string RmiName_RequestShelterEnter="RequestShelterEnter";
const string RmiName_NotifyLoginSuccess="NotifyLoginSuccess";
const string RmiName_NotifyLoginFailed="NotifyLoginFailed";
const string RmiName_NotifyOtherClientJoin="NotifyOtherClientJoin";
const string RmiName_NotifyPlayerLost="NotifyPlayerLost";
const string RmiName_NotifyPlayerMove="NotifyPlayerMove";
const string RmiName_NotifyDeleteItem="NotifyDeleteItem";
const string RmiName_NotifyCreateItem="NotifyCreateItem";
const string RmiName_NotifyStartOxyChargerState="NotifyStartOxyChargerState";
const string RmiName_NotifyStartItemBoxState="NotifyStartItemBoxState";
const string RmiName_NotifyPlayerEquipItem="NotifyPlayerEquipItem";
const string RmiName_NotifyPlayerUnEquipItem="NotifyPlayerUnEquipItem";
const string RmiName_NotifyPlayerBulletCreate="NotifyPlayerBulletCreate";
const string RmiName_NotifyPlayerBulletMove="NotifyPlayerBulletMove";
const string RmiName_NotifyPlayerBulletDelete="NotifyPlayerBulletDelete";
const string RmiName_NotifyPlayerAnimation="NotifyPlayerAnimation";
const string RmiName_NotifyPlayerChangeHP="NotifyPlayerChangeHP";
const string RmiName_NotifyPlayerChangeOxygen="NotifyPlayerChangeOxygen";
const string RmiName_NotifyUseOxyCharger="NotifyUseOxyCharger";
const string RmiName_NotifyUseItemBox="NotifyUseItemBox";
const string RmiName_NotifyShelterInfo="NotifyShelterInfo";
const string RmiName_NotifyMeteorCreateTime="NotifyMeteorCreateTime";
const string RmiName_NotifyMeteorCreate="NotifyMeteorCreate";
const string RmiName_NotifySpaceShipEngineCharge="NotifySpaceShipEngineCharge";
const string RmiName_RequestSpaceShip="RequestSpaceShip";
const string RmiName_RequestGameEnd="RequestGameEnd";
const string RmiName_NotifyKillInfo="NotifyKillInfo";
const string RmiName_NotifyGameResultInfoMe="NotifyGameResultInfoMe";
const string RmiName_NotifyGameResultInfoOther="NotifyGameResultInfoOther";
const string RmiName_NotifyGameResultShow="NotifyGameResultShow";
       
const string RmiName_First = RmiName_RequestServerConnect;
#else
// RMI name declaration.
// It is the unique pointer that indicates RMI name such as RMI profiler.
const string RmiName_RequestServerConnect="";
const string RmiName_RequestLobbyConnect="";
const string RmiName_RequestNetworkGameTeamSelect="";
const string RmiName_RequestNetworkGameReady="";
const string RmiName_RequestNetworkChangeMap="";
const string RmiName_RequestNetworkPlayerCount="";
const string RmiName_RequestNetworkGameModeChange="";
const string RmiName_RequestNetworkGameStart="";
const string RmiName_RequestNetworkHostOut="";
const string RmiName_RequestGameSceneJoin="";
const string RmiName_NotifyNetworkUserSetup="";
const string RmiName_NotifyNetworkGameTeamChange="";
const string RmiName_NotifyNetworkConnectUser="";
const string RmiName_NotifyNetworkReady="";
const string RmiName_NotifyNetworkGameModeChange="";
const string RmiName_NotifyNetworkGamePlayerCountChange="";
const string RmiName_NotifyNetworkGameChangeMap="";
const string RmiName_NotifyNetworkGameStart="";
const string RmiName_NotifyNetworkGameStartFailed="";
const string RmiName_NotifyNetworkGameHostOut="";
const string RmiName_RequestClientJoin="";
const string RmiName_RequestWorldCreateItem="";
const string RmiName_RequestPlayerDamage="";
const string RmiName_RequestPlayerUseOxy="";
const string RmiName_RequestUseOxyCharger="";
const string RmiName_RequestUseItemBox="";
const string RmiName_RequestShelterStartSetup="";
const string RmiName_RequestShelterDoorControl="";
const string RmiName_RequestShelterEnter="";
const string RmiName_NotifyLoginSuccess="";
const string RmiName_NotifyLoginFailed="";
const string RmiName_NotifyOtherClientJoin="";
const string RmiName_NotifyPlayerLost="";
const string RmiName_NotifyPlayerMove="";
const string RmiName_NotifyDeleteItem="";
const string RmiName_NotifyCreateItem="";
const string RmiName_NotifyStartOxyChargerState="";
const string RmiName_NotifyStartItemBoxState="";
const string RmiName_NotifyPlayerEquipItem="";
const string RmiName_NotifyPlayerUnEquipItem="";
const string RmiName_NotifyPlayerBulletCreate="";
const string RmiName_NotifyPlayerBulletMove="";
const string RmiName_NotifyPlayerBulletDelete="";
const string RmiName_NotifyPlayerAnimation="";
const string RmiName_NotifyPlayerChangeHP="";
const string RmiName_NotifyPlayerChangeOxygen="";
const string RmiName_NotifyUseOxyCharger="";
const string RmiName_NotifyUseItemBox="";
const string RmiName_NotifyShelterInfo="";
const string RmiName_NotifyMeteorCreateTime="";
const string RmiName_NotifyMeteorCreate="";
const string RmiName_NotifySpaceShipEngineCharge="";
const string RmiName_RequestSpaceShip="";
const string RmiName_RequestGameEnd="";
const string RmiName_NotifyKillInfo="";
const string RmiName_NotifyGameResultInfoMe="";
const string RmiName_NotifyGameResultInfoOther="";
const string RmiName_NotifyGameResultShow="";
       
const string RmiName_First = "";
#endif
		public override Nettention.Proud.RmiID[] GetRmiIDList() { return Common.RmiIDList; } 
	}
}

