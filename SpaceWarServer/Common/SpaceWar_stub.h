  






// Generated by PIDL compiler.
// Do not modify this file, but modify the source .pidl file.
   
#pragma once


#include "SpaceWar_common.h"

     
namespace SpaceWar
{
	class Stub : public ::Proud::IRmiStub
	{
	public:
               
		virtual bool RequestServerConnect ( ::Proud::HostID, ::Proud::RmiContext& ,  const string & )		{ 
			return false;
		} 

#define DECRMI_SpaceWar_RequestServerConnect bool RequestServerConnect ( ::Proud::HostID remote, ::Proud::RmiContext& rmiContext ,  const string & id) PN_OVERRIDE

#define DEFRMI_SpaceWar_RequestServerConnect(DerivedClass) bool DerivedClass::RequestServerConnect ( ::Proud::HostID remote, ::Proud::RmiContext& rmiContext ,  const string & id)
#define CALL_SpaceWar_RequestServerConnect RequestServerConnect ( ::Proud::HostID remote, ::Proud::RmiContext& rmiContext ,  const string & id)
#define PARAM_SpaceWar_RequestServerConnect ( ::Proud::HostID remote, ::Proud::RmiContext& rmiContext ,  const string & id)
               
		virtual bool RequestClientJoin ( ::Proud::HostID, ::Proud::RmiContext& ,  const int & ,  const string & ,  const float & ,  const float & ,  const float & )		{ 
			return false;
		} 

#define DECRMI_SpaceWar_RequestClientJoin bool RequestClientJoin ( ::Proud::HostID remote, ::Proud::RmiContext& rmiContext ,  const int & hostID,  const string & name,  const float & x,  const float & y,  const float & z) PN_OVERRIDE

#define DEFRMI_SpaceWar_RequestClientJoin(DerivedClass) bool DerivedClass::RequestClientJoin ( ::Proud::HostID remote, ::Proud::RmiContext& rmiContext ,  const int & hostID,  const string & name,  const float & x,  const float & y,  const float & z)
#define CALL_SpaceWar_RequestClientJoin RequestClientJoin ( ::Proud::HostID remote, ::Proud::RmiContext& rmiContext ,  const int & hostID,  const string & name,  const float & x,  const float & y,  const float & z)
#define PARAM_SpaceWar_RequestClientJoin ( ::Proud::HostID remote, ::Proud::RmiContext& rmiContext ,  const int & hostID,  const string & name,  const float & x,  const float & y,  const float & z)
               
		virtual bool RequestWorldCreateItem ( ::Proud::HostID, ::Proud::RmiContext& ,  const int & ,  const int & ,  const int & ,  const Proud::Vector3 & ,  const Proud::Vector3 & )		{ 
			return false;
		} 

#define DECRMI_SpaceWar_RequestWorldCreateItem bool RequestWorldCreateItem ( ::Proud::HostID remote, ::Proud::RmiContext& rmiContext ,  const int & hostID,  const int & itemCID,  const int & itemID,  const Proud::Vector3 & pos,  const Proud::Vector3 & rot) PN_OVERRIDE

#define DEFRMI_SpaceWar_RequestWorldCreateItem(DerivedClass) bool DerivedClass::RequestWorldCreateItem ( ::Proud::HostID remote, ::Proud::RmiContext& rmiContext ,  const int & hostID,  const int & itemCID,  const int & itemID,  const Proud::Vector3 & pos,  const Proud::Vector3 & rot)
#define CALL_SpaceWar_RequestWorldCreateItem RequestWorldCreateItem ( ::Proud::HostID remote, ::Proud::RmiContext& rmiContext ,  const int & hostID,  const int & itemCID,  const int & itemID,  const Proud::Vector3 & pos,  const Proud::Vector3 & rot)
#define PARAM_SpaceWar_RequestWorldCreateItem ( ::Proud::HostID remote, ::Proud::RmiContext& rmiContext ,  const int & hostID,  const int & itemCID,  const int & itemID,  const Proud::Vector3 & pos,  const Proud::Vector3 & rot)
               
		virtual bool RequestPlayerDamage ( ::Proud::HostID, ::Proud::RmiContext& ,  const int & ,  const int & ,  const string & ,  const string & ,  const float & )		{ 
			return false;
		} 

#define DECRMI_SpaceWar_RequestPlayerDamage bool RequestPlayerDamage ( ::Proud::HostID remote, ::Proud::RmiContext& rmiContext ,  const int & sendHostID,  const int & targetHostID,  const string & name,  const string & weaponName,  const float & damage) PN_OVERRIDE

#define DEFRMI_SpaceWar_RequestPlayerDamage(DerivedClass) bool DerivedClass::RequestPlayerDamage ( ::Proud::HostID remote, ::Proud::RmiContext& rmiContext ,  const int & sendHostID,  const int & targetHostID,  const string & name,  const string & weaponName,  const float & damage)
#define CALL_SpaceWar_RequestPlayerDamage RequestPlayerDamage ( ::Proud::HostID remote, ::Proud::RmiContext& rmiContext ,  const int & sendHostID,  const int & targetHostID,  const string & name,  const string & weaponName,  const float & damage)
#define PARAM_SpaceWar_RequestPlayerDamage ( ::Proud::HostID remote, ::Proud::RmiContext& rmiContext ,  const int & sendHostID,  const int & targetHostID,  const string & name,  const string & weaponName,  const float & damage)
               
		virtual bool RequestPlayerUseOxy ( ::Proud::HostID, ::Proud::RmiContext& ,  const int & ,  const string & ,  const float & )		{ 
			return false;
		} 

#define DECRMI_SpaceWar_RequestPlayerUseOxy bool RequestPlayerUseOxy ( ::Proud::HostID remote, ::Proud::RmiContext& rmiContext ,  const int & sendHostID,  const string & name,  const float & useOxy) PN_OVERRIDE

#define DEFRMI_SpaceWar_RequestPlayerUseOxy(DerivedClass) bool DerivedClass::RequestPlayerUseOxy ( ::Proud::HostID remote, ::Proud::RmiContext& rmiContext ,  const int & sendHostID,  const string & name,  const float & useOxy)
#define CALL_SpaceWar_RequestPlayerUseOxy RequestPlayerUseOxy ( ::Proud::HostID remote, ::Proud::RmiContext& rmiContext ,  const int & sendHostID,  const string & name,  const float & useOxy)
#define PARAM_SpaceWar_RequestPlayerUseOxy ( ::Proud::HostID remote, ::Proud::RmiContext& rmiContext ,  const int & sendHostID,  const string & name,  const float & useOxy)
               
		virtual bool RequestUseOxyCharger ( ::Proud::HostID, ::Proud::RmiContext& ,  const int & ,  const int & ,  const float & )		{ 
			return false;
		} 

#define DECRMI_SpaceWar_RequestUseOxyCharger bool RequestUseOxyCharger ( ::Proud::HostID remote, ::Proud::RmiContext& rmiContext ,  const int & sendHostID,  const int & oxyChargerIndex,  const float & userOxy) PN_OVERRIDE

#define DEFRMI_SpaceWar_RequestUseOxyCharger(DerivedClass) bool DerivedClass::RequestUseOxyCharger ( ::Proud::HostID remote, ::Proud::RmiContext& rmiContext ,  const int & sendHostID,  const int & oxyChargerIndex,  const float & userOxy)
#define CALL_SpaceWar_RequestUseOxyCharger RequestUseOxyCharger ( ::Proud::HostID remote, ::Proud::RmiContext& rmiContext ,  const int & sendHostID,  const int & oxyChargerIndex,  const float & userOxy)
#define PARAM_SpaceWar_RequestUseOxyCharger ( ::Proud::HostID remote, ::Proud::RmiContext& rmiContext ,  const int & sendHostID,  const int & oxyChargerIndex,  const float & userOxy)
               
		virtual bool RequestUseItemBox ( ::Proud::HostID, ::Proud::RmiContext& ,  const int & ,  const int & )		{ 
			return false;
		} 

#define DECRMI_SpaceWar_RequestUseItemBox bool RequestUseItemBox ( ::Proud::HostID remote, ::Proud::RmiContext& rmiContext ,  const int & sendHostID,  const int & itemBoxIndex) PN_OVERRIDE

#define DEFRMI_SpaceWar_RequestUseItemBox(DerivedClass) bool DerivedClass::RequestUseItemBox ( ::Proud::HostID remote, ::Proud::RmiContext& rmiContext ,  const int & sendHostID,  const int & itemBoxIndex)
#define CALL_SpaceWar_RequestUseItemBox RequestUseItemBox ( ::Proud::HostID remote, ::Proud::RmiContext& rmiContext ,  const int & sendHostID,  const int & itemBoxIndex)
#define PARAM_SpaceWar_RequestUseItemBox ( ::Proud::HostID remote, ::Proud::RmiContext& rmiContext ,  const int & sendHostID,  const int & itemBoxIndex)
               
		virtual bool RequestShelterStartSetup ( ::Proud::HostID, ::Proud::RmiContext& ,  const int & )		{ 
			return false;
		} 

#define DECRMI_SpaceWar_RequestShelterStartSetup bool RequestShelterStartSetup ( ::Proud::HostID remote, ::Proud::RmiContext& rmiContext ,  const int & shelterID) PN_OVERRIDE

#define DEFRMI_SpaceWar_RequestShelterStartSetup(DerivedClass) bool DerivedClass::RequestShelterStartSetup ( ::Proud::HostID remote, ::Proud::RmiContext& rmiContext ,  const int & shelterID)
#define CALL_SpaceWar_RequestShelterStartSetup RequestShelterStartSetup ( ::Proud::HostID remote, ::Proud::RmiContext& rmiContext ,  const int & shelterID)
#define PARAM_SpaceWar_RequestShelterStartSetup ( ::Proud::HostID remote, ::Proud::RmiContext& rmiContext ,  const int & shelterID)
               
		virtual bool RequestShelterDoorControl ( ::Proud::HostID, ::Proud::RmiContext& ,  const int & ,  const int & ,  const bool & )		{ 
			return false;
		} 

#define DECRMI_SpaceWar_RequestShelterDoorControl bool RequestShelterDoorControl ( ::Proud::HostID remote, ::Proud::RmiContext& rmiContext ,  const int & sendHostID,  const int & shelterID,  const bool & doorState) PN_OVERRIDE

#define DEFRMI_SpaceWar_RequestShelterDoorControl(DerivedClass) bool DerivedClass::RequestShelterDoorControl ( ::Proud::HostID remote, ::Proud::RmiContext& rmiContext ,  const int & sendHostID,  const int & shelterID,  const bool & doorState)
#define CALL_SpaceWar_RequestShelterDoorControl RequestShelterDoorControl ( ::Proud::HostID remote, ::Proud::RmiContext& rmiContext ,  const int & sendHostID,  const int & shelterID,  const bool & doorState)
#define PARAM_SpaceWar_RequestShelterDoorControl ( ::Proud::HostID remote, ::Proud::RmiContext& rmiContext ,  const int & sendHostID,  const int & shelterID,  const bool & doorState)
               
		virtual bool RequestShelterEnter ( ::Proud::HostID, ::Proud::RmiContext& ,  const int & ,  const int & ,  const bool & )		{ 
			return false;
		} 

#define DECRMI_SpaceWar_RequestShelterEnter bool RequestShelterEnter ( ::Proud::HostID remote, ::Proud::RmiContext& rmiContext ,  const int & sendHostID,  const int & shelterID,  const bool & enter) PN_OVERRIDE

#define DEFRMI_SpaceWar_RequestShelterEnter(DerivedClass) bool DerivedClass::RequestShelterEnter ( ::Proud::HostID remote, ::Proud::RmiContext& rmiContext ,  const int & sendHostID,  const int & shelterID,  const bool & enter)
#define CALL_SpaceWar_RequestShelterEnter RequestShelterEnter ( ::Proud::HostID remote, ::Proud::RmiContext& rmiContext ,  const int & sendHostID,  const int & shelterID,  const bool & enter)
#define PARAM_SpaceWar_RequestShelterEnter ( ::Proud::HostID remote, ::Proud::RmiContext& rmiContext ,  const int & sendHostID,  const int & shelterID,  const bool & enter)
               
		virtual bool NotifyLoginSuccess ( ::Proud::HostID, ::Proud::RmiContext& ,  const int & )		{ 
			return false;
		} 

#define DECRMI_SpaceWar_NotifyLoginSuccess bool NotifyLoginSuccess ( ::Proud::HostID remote, ::Proud::RmiContext& rmiContext ,  const int & hostID) PN_OVERRIDE

#define DEFRMI_SpaceWar_NotifyLoginSuccess(DerivedClass) bool DerivedClass::NotifyLoginSuccess ( ::Proud::HostID remote, ::Proud::RmiContext& rmiContext ,  const int & hostID)
#define CALL_SpaceWar_NotifyLoginSuccess NotifyLoginSuccess ( ::Proud::HostID remote, ::Proud::RmiContext& rmiContext ,  const int & hostID)
#define PARAM_SpaceWar_NotifyLoginSuccess ( ::Proud::HostID remote, ::Proud::RmiContext& rmiContext ,  const int & hostID)
               
		virtual bool NotifyLoginFailed ( ::Proud::HostID, ::Proud::RmiContext& ,  const string & )		{ 
			return false;
		} 

#define DECRMI_SpaceWar_NotifyLoginFailed bool NotifyLoginFailed ( ::Proud::HostID remote, ::Proud::RmiContext& rmiContext ,  const string & reason) PN_OVERRIDE

#define DEFRMI_SpaceWar_NotifyLoginFailed(DerivedClass) bool DerivedClass::NotifyLoginFailed ( ::Proud::HostID remote, ::Proud::RmiContext& rmiContext ,  const string & reason)
#define CALL_SpaceWar_NotifyLoginFailed NotifyLoginFailed ( ::Proud::HostID remote, ::Proud::RmiContext& rmiContext ,  const string & reason)
#define PARAM_SpaceWar_NotifyLoginFailed ( ::Proud::HostID remote, ::Proud::RmiContext& rmiContext ,  const string & reason)
               
		virtual bool NotifyOtherClientJoin ( ::Proud::HostID, ::Proud::RmiContext& ,  const int & ,  const string & ,  const float & ,  const float & ,  const float & )		{ 
			return false;
		} 

#define DECRMI_SpaceWar_NotifyOtherClientJoin bool NotifyOtherClientJoin ( ::Proud::HostID remote, ::Proud::RmiContext& rmiContext ,  const int & hostID,  const string & name,  const float & x,  const float & y,  const float & z) PN_OVERRIDE

#define DEFRMI_SpaceWar_NotifyOtherClientJoin(DerivedClass) bool DerivedClass::NotifyOtherClientJoin ( ::Proud::HostID remote, ::Proud::RmiContext& rmiContext ,  const int & hostID,  const string & name,  const float & x,  const float & y,  const float & z)
#define CALL_SpaceWar_NotifyOtherClientJoin NotifyOtherClientJoin ( ::Proud::HostID remote, ::Proud::RmiContext& rmiContext ,  const int & hostID,  const string & name,  const float & x,  const float & y,  const float & z)
#define PARAM_SpaceWar_NotifyOtherClientJoin ( ::Proud::HostID remote, ::Proud::RmiContext& rmiContext ,  const int & hostID,  const string & name,  const float & x,  const float & y,  const float & z)
               
		virtual bool NotifyPlayerLost ( ::Proud::HostID, ::Proud::RmiContext& ,  const int & )		{ 
			return false;
		} 

#define DECRMI_SpaceWar_NotifyPlayerLost bool NotifyPlayerLost ( ::Proud::HostID remote, ::Proud::RmiContext& rmiContext ,  const int & hostID) PN_OVERRIDE

#define DEFRMI_SpaceWar_NotifyPlayerLost(DerivedClass) bool DerivedClass::NotifyPlayerLost ( ::Proud::HostID remote, ::Proud::RmiContext& rmiContext ,  const int & hostID)
#define CALL_SpaceWar_NotifyPlayerLost NotifyPlayerLost ( ::Proud::HostID remote, ::Proud::RmiContext& rmiContext ,  const int & hostID)
#define PARAM_SpaceWar_NotifyPlayerLost ( ::Proud::HostID remote, ::Proud::RmiContext& rmiContext ,  const int & hostID)
               
		virtual bool NotifyPlayerMove ( ::Proud::HostID, ::Proud::RmiContext& ,  const int & ,  const string & ,  const float & ,  const float & ,  const float & ,  const float & ,  const float & ,  const float & ,  const float & ,  const float & ,  const float & ,  const float & ,  const float & ,  const float & )		{ 
			return false;
		} 

#define DECRMI_SpaceWar_NotifyPlayerMove bool NotifyPlayerMove ( ::Proud::HostID remote, ::Proud::RmiContext& rmiContext ,  const int & hostID,  const string & name,  const float & curX,  const float & curY,  const float & curZ,  const float & velocityX,  const float & velocityY,  const float & velocityZ,  const float & crx,  const float & cry,  const float & crz,  const float & rx,  const float & ry,  const float & rz) PN_OVERRIDE

#define DEFRMI_SpaceWar_NotifyPlayerMove(DerivedClass) bool DerivedClass::NotifyPlayerMove ( ::Proud::HostID remote, ::Proud::RmiContext& rmiContext ,  const int & hostID,  const string & name,  const float & curX,  const float & curY,  const float & curZ,  const float & velocityX,  const float & velocityY,  const float & velocityZ,  const float & crx,  const float & cry,  const float & crz,  const float & rx,  const float & ry,  const float & rz)
#define CALL_SpaceWar_NotifyPlayerMove NotifyPlayerMove ( ::Proud::HostID remote, ::Proud::RmiContext& rmiContext ,  const int & hostID,  const string & name,  const float & curX,  const float & curY,  const float & curZ,  const float & velocityX,  const float & velocityY,  const float & velocityZ,  const float & crx,  const float & cry,  const float & crz,  const float & rx,  const float & ry,  const float & rz)
#define PARAM_SpaceWar_NotifyPlayerMove ( ::Proud::HostID remote, ::Proud::RmiContext& rmiContext ,  const int & hostID,  const string & name,  const float & curX,  const float & curY,  const float & curZ,  const float & velocityX,  const float & velocityY,  const float & velocityZ,  const float & crx,  const float & cry,  const float & crz,  const float & rx,  const float & ry,  const float & rz)
               
		virtual bool NotifyDeleteItem ( ::Proud::HostID, ::Proud::RmiContext& ,  const int & )		{ 
			return false;
		} 

#define DECRMI_SpaceWar_NotifyDeleteItem bool NotifyDeleteItem ( ::Proud::HostID remote, ::Proud::RmiContext& rmiContext ,  const int & itemID) PN_OVERRIDE

#define DEFRMI_SpaceWar_NotifyDeleteItem(DerivedClass) bool DerivedClass::NotifyDeleteItem ( ::Proud::HostID remote, ::Proud::RmiContext& rmiContext ,  const int & itemID)
#define CALL_SpaceWar_NotifyDeleteItem NotifyDeleteItem ( ::Proud::HostID remote, ::Proud::RmiContext& rmiContext ,  const int & itemID)
#define PARAM_SpaceWar_NotifyDeleteItem ( ::Proud::HostID remote, ::Proud::RmiContext& rmiContext ,  const int & itemID)
               
		virtual bool NotifyCreateItem ( ::Proud::HostID, ::Proud::RmiContext& ,  const int & ,  const int & ,  const int & ,  const Proud::Vector3 & ,  const Proud::Vector3 & )		{ 
			return false;
		} 

#define DECRMI_SpaceWar_NotifyCreateItem bool NotifyCreateItem ( ::Proud::HostID remote, ::Proud::RmiContext& rmiContext ,  const int & hostID,  const int & itemCID,  const int & itemID,  const Proud::Vector3 & pos,  const Proud::Vector3 & rot) PN_OVERRIDE

#define DEFRMI_SpaceWar_NotifyCreateItem(DerivedClass) bool DerivedClass::NotifyCreateItem ( ::Proud::HostID remote, ::Proud::RmiContext& rmiContext ,  const int & hostID,  const int & itemCID,  const int & itemID,  const Proud::Vector3 & pos,  const Proud::Vector3 & rot)
#define CALL_SpaceWar_NotifyCreateItem NotifyCreateItem ( ::Proud::HostID remote, ::Proud::RmiContext& rmiContext ,  const int & hostID,  const int & itemCID,  const int & itemID,  const Proud::Vector3 & pos,  const Proud::Vector3 & rot)
#define PARAM_SpaceWar_NotifyCreateItem ( ::Proud::HostID remote, ::Proud::RmiContext& rmiContext ,  const int & hostID,  const int & itemCID,  const int & itemID,  const Proud::Vector3 & pos,  const Proud::Vector3 & rot)
               
		virtual bool NotifyStartOxyChargerState ( ::Proud::HostID, ::Proud::RmiContext& ,  const int & ,  const float & )		{ 
			return false;
		} 

#define DECRMI_SpaceWar_NotifyStartOxyChargerState bool NotifyStartOxyChargerState ( ::Proud::HostID remote, ::Proud::RmiContext& rmiContext ,  const int & oxyChargerID,  const float & oxy) PN_OVERRIDE

#define DEFRMI_SpaceWar_NotifyStartOxyChargerState(DerivedClass) bool DerivedClass::NotifyStartOxyChargerState ( ::Proud::HostID remote, ::Proud::RmiContext& rmiContext ,  const int & oxyChargerID,  const float & oxy)
#define CALL_SpaceWar_NotifyStartOxyChargerState NotifyStartOxyChargerState ( ::Proud::HostID remote, ::Proud::RmiContext& rmiContext ,  const int & oxyChargerID,  const float & oxy)
#define PARAM_SpaceWar_NotifyStartOxyChargerState ( ::Proud::HostID remote, ::Proud::RmiContext& rmiContext ,  const int & oxyChargerID,  const float & oxy)
               
		virtual bool NotifyStartItemBoxState ( ::Proud::HostID, ::Proud::RmiContext& ,  const int & ,  const bool & )		{ 
			return false;
		} 

#define DECRMI_SpaceWar_NotifyStartItemBoxState bool NotifyStartItemBoxState ( ::Proud::HostID remote, ::Proud::RmiContext& rmiContext ,  const int & itemBoxID,  const bool & openState) PN_OVERRIDE

#define DEFRMI_SpaceWar_NotifyStartItemBoxState(DerivedClass) bool DerivedClass::NotifyStartItemBoxState ( ::Proud::HostID remote, ::Proud::RmiContext& rmiContext ,  const int & itemBoxID,  const bool & openState)
#define CALL_SpaceWar_NotifyStartItemBoxState NotifyStartItemBoxState ( ::Proud::HostID remote, ::Proud::RmiContext& rmiContext ,  const int & itemBoxID,  const bool & openState)
#define PARAM_SpaceWar_NotifyStartItemBoxState ( ::Proud::HostID remote, ::Proud::RmiContext& rmiContext ,  const int & itemBoxID,  const bool & openState)
               
		virtual bool NotifyPlayerEquipItem ( ::Proud::HostID, ::Proud::RmiContext& ,  const int & ,  const int & ,  const int & )		{ 
			return false;
		} 

#define DECRMI_SpaceWar_NotifyPlayerEquipItem bool NotifyPlayerEquipItem ( ::Proud::HostID remote, ::Proud::RmiContext& rmiContext ,  const int & hostID,  const int & itemCID,  const int & itemID) PN_OVERRIDE

#define DEFRMI_SpaceWar_NotifyPlayerEquipItem(DerivedClass) bool DerivedClass::NotifyPlayerEquipItem ( ::Proud::HostID remote, ::Proud::RmiContext& rmiContext ,  const int & hostID,  const int & itemCID,  const int & itemID)
#define CALL_SpaceWar_NotifyPlayerEquipItem NotifyPlayerEquipItem ( ::Proud::HostID remote, ::Proud::RmiContext& rmiContext ,  const int & hostID,  const int & itemCID,  const int & itemID)
#define PARAM_SpaceWar_NotifyPlayerEquipItem ( ::Proud::HostID remote, ::Proud::RmiContext& rmiContext ,  const int & hostID,  const int & itemCID,  const int & itemID)
               
		virtual bool NotifyPlayerUnEquipItem ( ::Proud::HostID, ::Proud::RmiContext& ,  const int & ,  const int & ,  const int & ,  const Proud::Vector3 & ,  const Proud::Vector3 & )		{ 
			return false;
		} 

#define DECRMI_SpaceWar_NotifyPlayerUnEquipItem bool NotifyPlayerUnEquipItem ( ::Proud::HostID remote, ::Proud::RmiContext& rmiContext ,  const int & hostID,  const int & itemCID,  const int & itemID,  const Proud::Vector3 & pos,  const Proud::Vector3 & rot) PN_OVERRIDE

#define DEFRMI_SpaceWar_NotifyPlayerUnEquipItem(DerivedClass) bool DerivedClass::NotifyPlayerUnEquipItem ( ::Proud::HostID remote, ::Proud::RmiContext& rmiContext ,  const int & hostID,  const int & itemCID,  const int & itemID,  const Proud::Vector3 & pos,  const Proud::Vector3 & rot)
#define CALL_SpaceWar_NotifyPlayerUnEquipItem NotifyPlayerUnEquipItem ( ::Proud::HostID remote, ::Proud::RmiContext& rmiContext ,  const int & hostID,  const int & itemCID,  const int & itemID,  const Proud::Vector3 & pos,  const Proud::Vector3 & rot)
#define PARAM_SpaceWar_NotifyPlayerUnEquipItem ( ::Proud::HostID remote, ::Proud::RmiContext& rmiContext ,  const int & hostID,  const int & itemCID,  const int & itemID,  const Proud::Vector3 & pos,  const Proud::Vector3 & rot)
               
		virtual bool NotifyPlayerBulletCreate ( ::Proud::HostID, ::Proud::RmiContext& ,  const int & ,  const string & ,  const string & ,  const Proud::Vector3 & ,  const Proud::Vector3 & )		{ 
			return false;
		} 

#define DECRMI_SpaceWar_NotifyPlayerBulletCreate bool NotifyPlayerBulletCreate ( ::Proud::HostID remote, ::Proud::RmiContext& rmiContext ,  const int & sendHostID,  const string & bulletType,  const string & bulletID,  const Proud::Vector3 & pos,  const Proud::Vector3 & rot) PN_OVERRIDE

#define DEFRMI_SpaceWar_NotifyPlayerBulletCreate(DerivedClass) bool DerivedClass::NotifyPlayerBulletCreate ( ::Proud::HostID remote, ::Proud::RmiContext& rmiContext ,  const int & sendHostID,  const string & bulletType,  const string & bulletID,  const Proud::Vector3 & pos,  const Proud::Vector3 & rot)
#define CALL_SpaceWar_NotifyPlayerBulletCreate NotifyPlayerBulletCreate ( ::Proud::HostID remote, ::Proud::RmiContext& rmiContext ,  const int & sendHostID,  const string & bulletType,  const string & bulletID,  const Proud::Vector3 & pos,  const Proud::Vector3 & rot)
#define PARAM_SpaceWar_NotifyPlayerBulletCreate ( ::Proud::HostID remote, ::Proud::RmiContext& rmiContext ,  const int & sendHostID,  const string & bulletType,  const string & bulletID,  const Proud::Vector3 & pos,  const Proud::Vector3 & rot)
               
		virtual bool NotifyPlayerBulletMove ( ::Proud::HostID, ::Proud::RmiContext& ,  const int & ,  const string & ,  const Proud::Vector3 & ,  const Proud::Vector3 & ,  const Proud::Vector3 & )		{ 
			return false;
		} 

#define DECRMI_SpaceWar_NotifyPlayerBulletMove bool NotifyPlayerBulletMove ( ::Proud::HostID remote, ::Proud::RmiContext& rmiContext ,  const int & sendHostID,  const string & bulletID,  const Proud::Vector3 & pos,  const Proud::Vector3 & velocity,  const Proud::Vector3 & rot) PN_OVERRIDE

#define DEFRMI_SpaceWar_NotifyPlayerBulletMove(DerivedClass) bool DerivedClass::NotifyPlayerBulletMove ( ::Proud::HostID remote, ::Proud::RmiContext& rmiContext ,  const int & sendHostID,  const string & bulletID,  const Proud::Vector3 & pos,  const Proud::Vector3 & velocity,  const Proud::Vector3 & rot)
#define CALL_SpaceWar_NotifyPlayerBulletMove NotifyPlayerBulletMove ( ::Proud::HostID remote, ::Proud::RmiContext& rmiContext ,  const int & sendHostID,  const string & bulletID,  const Proud::Vector3 & pos,  const Proud::Vector3 & velocity,  const Proud::Vector3 & rot)
#define PARAM_SpaceWar_NotifyPlayerBulletMove ( ::Proud::HostID remote, ::Proud::RmiContext& rmiContext ,  const int & sendHostID,  const string & bulletID,  const Proud::Vector3 & pos,  const Proud::Vector3 & velocity,  const Proud::Vector3 & rot)
               
		virtual bool NotifyPlayerBulletDelete ( ::Proud::HostID, ::Proud::RmiContext& ,  const int & ,  const string & )		{ 
			return false;
		} 

#define DECRMI_SpaceWar_NotifyPlayerBulletDelete bool NotifyPlayerBulletDelete ( ::Proud::HostID remote, ::Proud::RmiContext& rmiContext ,  const int & sendHostID,  const string & bulletID) PN_OVERRIDE

#define DEFRMI_SpaceWar_NotifyPlayerBulletDelete(DerivedClass) bool DerivedClass::NotifyPlayerBulletDelete ( ::Proud::HostID remote, ::Proud::RmiContext& rmiContext ,  const int & sendHostID,  const string & bulletID)
#define CALL_SpaceWar_NotifyPlayerBulletDelete NotifyPlayerBulletDelete ( ::Proud::HostID remote, ::Proud::RmiContext& rmiContext ,  const int & sendHostID,  const string & bulletID)
#define PARAM_SpaceWar_NotifyPlayerBulletDelete ( ::Proud::HostID remote, ::Proud::RmiContext& rmiContext ,  const int & sendHostID,  const string & bulletID)
               
		virtual bool NotifyPlayerAnimation ( ::Proud::HostID, ::Proud::RmiContext& ,  const int & ,  const string & ,  const string & ,  const int & )		{ 
			return false;
		} 

#define DECRMI_SpaceWar_NotifyPlayerAnimation bool NotifyPlayerAnimation ( ::Proud::HostID remote, ::Proud::RmiContext& rmiContext ,  const int & hostID,  const string & name,  const string & animationName,  const int & aniValue) PN_OVERRIDE

#define DEFRMI_SpaceWar_NotifyPlayerAnimation(DerivedClass) bool DerivedClass::NotifyPlayerAnimation ( ::Proud::HostID remote, ::Proud::RmiContext& rmiContext ,  const int & hostID,  const string & name,  const string & animationName,  const int & aniValue)
#define CALL_SpaceWar_NotifyPlayerAnimation NotifyPlayerAnimation ( ::Proud::HostID remote, ::Proud::RmiContext& rmiContext ,  const int & hostID,  const string & name,  const string & animationName,  const int & aniValue)
#define PARAM_SpaceWar_NotifyPlayerAnimation ( ::Proud::HostID remote, ::Proud::RmiContext& rmiContext ,  const int & hostID,  const string & name,  const string & animationName,  const int & aniValue)
               
		virtual bool NotifyPlayerChangeHP ( ::Proud::HostID, ::Proud::RmiContext& ,  const int & ,  const string & ,  const float & ,  const float & ,  const float & )		{ 
			return false;
		} 

#define DECRMI_SpaceWar_NotifyPlayerChangeHP bool NotifyPlayerChangeHP ( ::Proud::HostID remote, ::Proud::RmiContext& rmiContext ,  const int & sendHostID,  const string & name,  const float & hp,  const float & prevhp,  const float & maxhp) PN_OVERRIDE

#define DEFRMI_SpaceWar_NotifyPlayerChangeHP(DerivedClass) bool DerivedClass::NotifyPlayerChangeHP ( ::Proud::HostID remote, ::Proud::RmiContext& rmiContext ,  const int & sendHostID,  const string & name,  const float & hp,  const float & prevhp,  const float & maxhp)
#define CALL_SpaceWar_NotifyPlayerChangeHP NotifyPlayerChangeHP ( ::Proud::HostID remote, ::Proud::RmiContext& rmiContext ,  const int & sendHostID,  const string & name,  const float & hp,  const float & prevhp,  const float & maxhp)
#define PARAM_SpaceWar_NotifyPlayerChangeHP ( ::Proud::HostID remote, ::Proud::RmiContext& rmiContext ,  const int & sendHostID,  const string & name,  const float & hp,  const float & prevhp,  const float & maxhp)
               
		virtual bool NotifyPlayerChangeOxygen ( ::Proud::HostID, ::Proud::RmiContext& ,  const int & ,  const string & ,  const float & ,  const float & ,  const float & )		{ 
			return false;
		} 

#define DECRMI_SpaceWar_NotifyPlayerChangeOxygen bool NotifyPlayerChangeOxygen ( ::Proud::HostID remote, ::Proud::RmiContext& rmiContext ,  const int & sendHostID,  const string & name,  const float & oxygen,  const float & prevoxy,  const float & maxoxy) PN_OVERRIDE

#define DEFRMI_SpaceWar_NotifyPlayerChangeOxygen(DerivedClass) bool DerivedClass::NotifyPlayerChangeOxygen ( ::Proud::HostID remote, ::Proud::RmiContext& rmiContext ,  const int & sendHostID,  const string & name,  const float & oxygen,  const float & prevoxy,  const float & maxoxy)
#define CALL_SpaceWar_NotifyPlayerChangeOxygen NotifyPlayerChangeOxygen ( ::Proud::HostID remote, ::Proud::RmiContext& rmiContext ,  const int & sendHostID,  const string & name,  const float & oxygen,  const float & prevoxy,  const float & maxoxy)
#define PARAM_SpaceWar_NotifyPlayerChangeOxygen ( ::Proud::HostID remote, ::Proud::RmiContext& rmiContext ,  const int & sendHostID,  const string & name,  const float & oxygen,  const float & prevoxy,  const float & maxoxy)
               
		virtual bool NotifyUseOxyCharger ( ::Proud::HostID, ::Proud::RmiContext& ,  const int & ,  const int & ,  const float & )		{ 
			return false;
		} 

#define DECRMI_SpaceWar_NotifyUseOxyCharger bool NotifyUseOxyCharger ( ::Proud::HostID remote, ::Proud::RmiContext& rmiContext ,  const int & sendHostID,  const int & oxyChargerIndex,  const float & userOxy) PN_OVERRIDE

#define DEFRMI_SpaceWar_NotifyUseOxyCharger(DerivedClass) bool DerivedClass::NotifyUseOxyCharger ( ::Proud::HostID remote, ::Proud::RmiContext& rmiContext ,  const int & sendHostID,  const int & oxyChargerIndex,  const float & userOxy)
#define CALL_SpaceWar_NotifyUseOxyCharger NotifyUseOxyCharger ( ::Proud::HostID remote, ::Proud::RmiContext& rmiContext ,  const int & sendHostID,  const int & oxyChargerIndex,  const float & userOxy)
#define PARAM_SpaceWar_NotifyUseOxyCharger ( ::Proud::HostID remote, ::Proud::RmiContext& rmiContext ,  const int & sendHostID,  const int & oxyChargerIndex,  const float & userOxy)
               
		virtual bool NotifyUseItemBox ( ::Proud::HostID, ::Proud::RmiContext& ,  const int & ,  const int & ,  const int & )		{ 
			return false;
		} 

#define DECRMI_SpaceWar_NotifyUseItemBox bool NotifyUseItemBox ( ::Proud::HostID remote, ::Proud::RmiContext& rmiContext ,  const int & sendHostID,  const int & itemBoxIndex,  const int & itemID) PN_OVERRIDE

#define DEFRMI_SpaceWar_NotifyUseItemBox(DerivedClass) bool DerivedClass::NotifyUseItemBox ( ::Proud::HostID remote, ::Proud::RmiContext& rmiContext ,  const int & sendHostID,  const int & itemBoxIndex,  const int & itemID)
#define CALL_SpaceWar_NotifyUseItemBox NotifyUseItemBox ( ::Proud::HostID remote, ::Proud::RmiContext& rmiContext ,  const int & sendHostID,  const int & itemBoxIndex,  const int & itemID)
#define PARAM_SpaceWar_NotifyUseItemBox ( ::Proud::HostID remote, ::Proud::RmiContext& rmiContext ,  const int & sendHostID,  const int & itemBoxIndex,  const int & itemID)
               
		virtual bool NotifyShelterInfo ( ::Proud::HostID, ::Proud::RmiContext& ,  const int & ,  const int & ,  const bool & ,  const bool & )		{ 
			return false;
		} 

#define DECRMI_SpaceWar_NotifyShelterInfo bool NotifyShelterInfo ( ::Proud::HostID remote, ::Proud::RmiContext& rmiContext ,  const int & sendHostID,  const int & shelterID,  const bool & doorState,  const bool & lightState) PN_OVERRIDE

#define DEFRMI_SpaceWar_NotifyShelterInfo(DerivedClass) bool DerivedClass::NotifyShelterInfo ( ::Proud::HostID remote, ::Proud::RmiContext& rmiContext ,  const int & sendHostID,  const int & shelterID,  const bool & doorState,  const bool & lightState)
#define CALL_SpaceWar_NotifyShelterInfo NotifyShelterInfo ( ::Proud::HostID remote, ::Proud::RmiContext& rmiContext ,  const int & sendHostID,  const int & shelterID,  const bool & doorState,  const bool & lightState)
#define PARAM_SpaceWar_NotifyShelterInfo ( ::Proud::HostID remote, ::Proud::RmiContext& rmiContext ,  const int & sendHostID,  const int & shelterID,  const bool & doorState,  const bool & lightState)
               
		virtual bool NotifyMeteorCreateTime ( ::Proud::HostID, ::Proud::RmiContext& ,  const int & )		{ 
			return false;
		} 

#define DECRMI_SpaceWar_NotifyMeteorCreateTime bool NotifyMeteorCreateTime ( ::Proud::HostID remote, ::Proud::RmiContext& rmiContext ,  const int & time) PN_OVERRIDE

#define DEFRMI_SpaceWar_NotifyMeteorCreateTime(DerivedClass) bool DerivedClass::NotifyMeteorCreateTime ( ::Proud::HostID remote, ::Proud::RmiContext& rmiContext ,  const int & time)
#define CALL_SpaceWar_NotifyMeteorCreateTime NotifyMeteorCreateTime ( ::Proud::HostID remote, ::Proud::RmiContext& rmiContext ,  const int & time)
#define PARAM_SpaceWar_NotifyMeteorCreateTime ( ::Proud::HostID remote, ::Proud::RmiContext& rmiContext ,  const int & time)
               
		virtual bool NotifyMeteorCreate ( ::Proud::HostID, ::Proud::RmiContext& ,  const float & ,  const float & )		{ 
			return false;
		} 

#define DECRMI_SpaceWar_NotifyMeteorCreate bool NotifyMeteorCreate ( ::Proud::HostID remote, ::Proud::RmiContext& rmiContext ,  const float & anglex,  const float & anglez) PN_OVERRIDE

#define DEFRMI_SpaceWar_NotifyMeteorCreate(DerivedClass) bool DerivedClass::NotifyMeteorCreate ( ::Proud::HostID remote, ::Proud::RmiContext& rmiContext ,  const float & anglex,  const float & anglez)
#define CALL_SpaceWar_NotifyMeteorCreate NotifyMeteorCreate ( ::Proud::HostID remote, ::Proud::RmiContext& rmiContext ,  const float & anglex,  const float & anglez)
#define PARAM_SpaceWar_NotifyMeteorCreate ( ::Proud::HostID remote, ::Proud::RmiContext& rmiContext ,  const float & anglex,  const float & anglez)
 
		virtual bool ProcessReceivedMessage(::Proud::CReceivedMessage &pa, void* hostTag) PN_OVERRIDE;
		static const PNTCHAR* RmiName_RequestServerConnect;
		static const PNTCHAR* RmiName_RequestClientJoin;
		static const PNTCHAR* RmiName_RequestWorldCreateItem;
		static const PNTCHAR* RmiName_RequestPlayerDamage;
		static const PNTCHAR* RmiName_RequestPlayerUseOxy;
		static const PNTCHAR* RmiName_RequestUseOxyCharger;
		static const PNTCHAR* RmiName_RequestUseItemBox;
		static const PNTCHAR* RmiName_RequestShelterStartSetup;
		static const PNTCHAR* RmiName_RequestShelterDoorControl;
		static const PNTCHAR* RmiName_RequestShelterEnter;
		static const PNTCHAR* RmiName_NotifyLoginSuccess;
		static const PNTCHAR* RmiName_NotifyLoginFailed;
		static const PNTCHAR* RmiName_NotifyOtherClientJoin;
		static const PNTCHAR* RmiName_NotifyPlayerLost;
		static const PNTCHAR* RmiName_NotifyPlayerMove;
		static const PNTCHAR* RmiName_NotifyDeleteItem;
		static const PNTCHAR* RmiName_NotifyCreateItem;
		static const PNTCHAR* RmiName_NotifyStartOxyChargerState;
		static const PNTCHAR* RmiName_NotifyStartItemBoxState;
		static const PNTCHAR* RmiName_NotifyPlayerEquipItem;
		static const PNTCHAR* RmiName_NotifyPlayerUnEquipItem;
		static const PNTCHAR* RmiName_NotifyPlayerBulletCreate;
		static const PNTCHAR* RmiName_NotifyPlayerBulletMove;
		static const PNTCHAR* RmiName_NotifyPlayerBulletDelete;
		static const PNTCHAR* RmiName_NotifyPlayerAnimation;
		static const PNTCHAR* RmiName_NotifyPlayerChangeHP;
		static const PNTCHAR* RmiName_NotifyPlayerChangeOxygen;
		static const PNTCHAR* RmiName_NotifyUseOxyCharger;
		static const PNTCHAR* RmiName_NotifyUseItemBox;
		static const PNTCHAR* RmiName_NotifyShelterInfo;
		static const PNTCHAR* RmiName_NotifyMeteorCreateTime;
		static const PNTCHAR* RmiName_NotifyMeteorCreate;
		static const PNTCHAR* RmiName_First;
		virtual ::Proud::RmiID* GetRmiIDList() PN_OVERRIDE { return g_RmiIDList; }
		virtual int GetRmiIDListCount() PN_OVERRIDE { return g_RmiIDListCount; }
	};

#ifdef SUPPORTS_CPP11 
	
	class StubFunctional : public Stub 
	{
	public:
               
		std::function< bool ( ::Proud::HostID, ::Proud::RmiContext& ,  const string & ) > RequestServerConnect_Function;
		virtual bool RequestServerConnect ( ::Proud::HostID remote, ::Proud::RmiContext& rmiContext ,  const string & id) 
		{ 
			if (RequestServerConnect_Function==nullptr) 
				return true; 
			return RequestServerConnect_Function(remote,rmiContext, id); 
		}

               
		std::function< bool ( ::Proud::HostID, ::Proud::RmiContext& ,  const int & ,  const string & ,  const float & ,  const float & ,  const float & ) > RequestClientJoin_Function;
		virtual bool RequestClientJoin ( ::Proud::HostID remote, ::Proud::RmiContext& rmiContext ,  const int & hostID,  const string & name,  const float & x,  const float & y,  const float & z) 
		{ 
			if (RequestClientJoin_Function==nullptr) 
				return true; 
			return RequestClientJoin_Function(remote,rmiContext, hostID, name, x, y, z); 
		}

               
		std::function< bool ( ::Proud::HostID, ::Proud::RmiContext& ,  const int & ,  const int & ,  const int & ,  const Proud::Vector3 & ,  const Proud::Vector3 & ) > RequestWorldCreateItem_Function;
		virtual bool RequestWorldCreateItem ( ::Proud::HostID remote, ::Proud::RmiContext& rmiContext ,  const int & hostID,  const int & itemCID,  const int & itemID,  const Proud::Vector3 & pos,  const Proud::Vector3 & rot) 
		{ 
			if (RequestWorldCreateItem_Function==nullptr) 
				return true; 
			return RequestWorldCreateItem_Function(remote,rmiContext, hostID, itemCID, itemID, pos, rot); 
		}

               
		std::function< bool ( ::Proud::HostID, ::Proud::RmiContext& ,  const int & ,  const int & ,  const string & ,  const string & ,  const float & ) > RequestPlayerDamage_Function;
		virtual bool RequestPlayerDamage ( ::Proud::HostID remote, ::Proud::RmiContext& rmiContext ,  const int & sendHostID,  const int & targetHostID,  const string & name,  const string & weaponName,  const float & damage) 
		{ 
			if (RequestPlayerDamage_Function==nullptr) 
				return true; 
			return RequestPlayerDamage_Function(remote,rmiContext, sendHostID, targetHostID, name, weaponName, damage); 
		}

               
		std::function< bool ( ::Proud::HostID, ::Proud::RmiContext& ,  const int & ,  const string & ,  const float & ) > RequestPlayerUseOxy_Function;
		virtual bool RequestPlayerUseOxy ( ::Proud::HostID remote, ::Proud::RmiContext& rmiContext ,  const int & sendHostID,  const string & name,  const float & useOxy) 
		{ 
			if (RequestPlayerUseOxy_Function==nullptr) 
				return true; 
			return RequestPlayerUseOxy_Function(remote,rmiContext, sendHostID, name, useOxy); 
		}

               
		std::function< bool ( ::Proud::HostID, ::Proud::RmiContext& ,  const int & ,  const int & ,  const float & ) > RequestUseOxyCharger_Function;
		virtual bool RequestUseOxyCharger ( ::Proud::HostID remote, ::Proud::RmiContext& rmiContext ,  const int & sendHostID,  const int & oxyChargerIndex,  const float & userOxy) 
		{ 
			if (RequestUseOxyCharger_Function==nullptr) 
				return true; 
			return RequestUseOxyCharger_Function(remote,rmiContext, sendHostID, oxyChargerIndex, userOxy); 
		}

               
		std::function< bool ( ::Proud::HostID, ::Proud::RmiContext& ,  const int & ,  const int & ) > RequestUseItemBox_Function;
		virtual bool RequestUseItemBox ( ::Proud::HostID remote, ::Proud::RmiContext& rmiContext ,  const int & sendHostID,  const int & itemBoxIndex) 
		{ 
			if (RequestUseItemBox_Function==nullptr) 
				return true; 
			return RequestUseItemBox_Function(remote,rmiContext, sendHostID, itemBoxIndex); 
		}

               
		std::function< bool ( ::Proud::HostID, ::Proud::RmiContext& ,  const int & ) > RequestShelterStartSetup_Function;
		virtual bool RequestShelterStartSetup ( ::Proud::HostID remote, ::Proud::RmiContext& rmiContext ,  const int & shelterID) 
		{ 
			if (RequestShelterStartSetup_Function==nullptr) 
				return true; 
			return RequestShelterStartSetup_Function(remote,rmiContext, shelterID); 
		}

               
		std::function< bool ( ::Proud::HostID, ::Proud::RmiContext& ,  const int & ,  const int & ,  const bool & ) > RequestShelterDoorControl_Function;
		virtual bool RequestShelterDoorControl ( ::Proud::HostID remote, ::Proud::RmiContext& rmiContext ,  const int & sendHostID,  const int & shelterID,  const bool & doorState) 
		{ 
			if (RequestShelterDoorControl_Function==nullptr) 
				return true; 
			return RequestShelterDoorControl_Function(remote,rmiContext, sendHostID, shelterID, doorState); 
		}

               
		std::function< bool ( ::Proud::HostID, ::Proud::RmiContext& ,  const int & ,  const int & ,  const bool & ) > RequestShelterEnter_Function;
		virtual bool RequestShelterEnter ( ::Proud::HostID remote, ::Proud::RmiContext& rmiContext ,  const int & sendHostID,  const int & shelterID,  const bool & enter) 
		{ 
			if (RequestShelterEnter_Function==nullptr) 
				return true; 
			return RequestShelterEnter_Function(remote,rmiContext, sendHostID, shelterID, enter); 
		}

               
		std::function< bool ( ::Proud::HostID, ::Proud::RmiContext& ,  const int & ) > NotifyLoginSuccess_Function;
		virtual bool NotifyLoginSuccess ( ::Proud::HostID remote, ::Proud::RmiContext& rmiContext ,  const int & hostID) 
		{ 
			if (NotifyLoginSuccess_Function==nullptr) 
				return true; 
			return NotifyLoginSuccess_Function(remote,rmiContext, hostID); 
		}

               
		std::function< bool ( ::Proud::HostID, ::Proud::RmiContext& ,  const string & ) > NotifyLoginFailed_Function;
		virtual bool NotifyLoginFailed ( ::Proud::HostID remote, ::Proud::RmiContext& rmiContext ,  const string & reason) 
		{ 
			if (NotifyLoginFailed_Function==nullptr) 
				return true; 
			return NotifyLoginFailed_Function(remote,rmiContext, reason); 
		}

               
		std::function< bool ( ::Proud::HostID, ::Proud::RmiContext& ,  const int & ,  const string & ,  const float & ,  const float & ,  const float & ) > NotifyOtherClientJoin_Function;
		virtual bool NotifyOtherClientJoin ( ::Proud::HostID remote, ::Proud::RmiContext& rmiContext ,  const int & hostID,  const string & name,  const float & x,  const float & y,  const float & z) 
		{ 
			if (NotifyOtherClientJoin_Function==nullptr) 
				return true; 
			return NotifyOtherClientJoin_Function(remote,rmiContext, hostID, name, x, y, z); 
		}

               
		std::function< bool ( ::Proud::HostID, ::Proud::RmiContext& ,  const int & ) > NotifyPlayerLost_Function;
		virtual bool NotifyPlayerLost ( ::Proud::HostID remote, ::Proud::RmiContext& rmiContext ,  const int & hostID) 
		{ 
			if (NotifyPlayerLost_Function==nullptr) 
				return true; 
			return NotifyPlayerLost_Function(remote,rmiContext, hostID); 
		}

               
		std::function< bool ( ::Proud::HostID, ::Proud::RmiContext& ,  const int & ,  const string & ,  const float & ,  const float & ,  const float & ,  const float & ,  const float & ,  const float & ,  const float & ,  const float & ,  const float & ,  const float & ,  const float & ,  const float & ) > NotifyPlayerMove_Function;
		virtual bool NotifyPlayerMove ( ::Proud::HostID remote, ::Proud::RmiContext& rmiContext ,  const int & hostID,  const string & name,  const float & curX,  const float & curY,  const float & curZ,  const float & velocityX,  const float & velocityY,  const float & velocityZ,  const float & crx,  const float & cry,  const float & crz,  const float & rx,  const float & ry,  const float & rz) 
		{ 
			if (NotifyPlayerMove_Function==nullptr) 
				return true; 
			return NotifyPlayerMove_Function(remote,rmiContext, hostID, name, curX, curY, curZ, velocityX, velocityY, velocityZ, crx, cry, crz, rx, ry, rz); 
		}

               
		std::function< bool ( ::Proud::HostID, ::Proud::RmiContext& ,  const int & ) > NotifyDeleteItem_Function;
		virtual bool NotifyDeleteItem ( ::Proud::HostID remote, ::Proud::RmiContext& rmiContext ,  const int & itemID) 
		{ 
			if (NotifyDeleteItem_Function==nullptr) 
				return true; 
			return NotifyDeleteItem_Function(remote,rmiContext, itemID); 
		}

               
		std::function< bool ( ::Proud::HostID, ::Proud::RmiContext& ,  const int & ,  const int & ,  const int & ,  const Proud::Vector3 & ,  const Proud::Vector3 & ) > NotifyCreateItem_Function;
		virtual bool NotifyCreateItem ( ::Proud::HostID remote, ::Proud::RmiContext& rmiContext ,  const int & hostID,  const int & itemCID,  const int & itemID,  const Proud::Vector3 & pos,  const Proud::Vector3 & rot) 
		{ 
			if (NotifyCreateItem_Function==nullptr) 
				return true; 
			return NotifyCreateItem_Function(remote,rmiContext, hostID, itemCID, itemID, pos, rot); 
		}

               
		std::function< bool ( ::Proud::HostID, ::Proud::RmiContext& ,  const int & ,  const float & ) > NotifyStartOxyChargerState_Function;
		virtual bool NotifyStartOxyChargerState ( ::Proud::HostID remote, ::Proud::RmiContext& rmiContext ,  const int & oxyChargerID,  const float & oxy) 
		{ 
			if (NotifyStartOxyChargerState_Function==nullptr) 
				return true; 
			return NotifyStartOxyChargerState_Function(remote,rmiContext, oxyChargerID, oxy); 
		}

               
		std::function< bool ( ::Proud::HostID, ::Proud::RmiContext& ,  const int & ,  const bool & ) > NotifyStartItemBoxState_Function;
		virtual bool NotifyStartItemBoxState ( ::Proud::HostID remote, ::Proud::RmiContext& rmiContext ,  const int & itemBoxID,  const bool & openState) 
		{ 
			if (NotifyStartItemBoxState_Function==nullptr) 
				return true; 
			return NotifyStartItemBoxState_Function(remote,rmiContext, itemBoxID, openState); 
		}

               
		std::function< bool ( ::Proud::HostID, ::Proud::RmiContext& ,  const int & ,  const int & ,  const int & ) > NotifyPlayerEquipItem_Function;
		virtual bool NotifyPlayerEquipItem ( ::Proud::HostID remote, ::Proud::RmiContext& rmiContext ,  const int & hostID,  const int & itemCID,  const int & itemID) 
		{ 
			if (NotifyPlayerEquipItem_Function==nullptr) 
				return true; 
			return NotifyPlayerEquipItem_Function(remote,rmiContext, hostID, itemCID, itemID); 
		}

               
		std::function< bool ( ::Proud::HostID, ::Proud::RmiContext& ,  const int & ,  const int & ,  const int & ,  const Proud::Vector3 & ,  const Proud::Vector3 & ) > NotifyPlayerUnEquipItem_Function;
		virtual bool NotifyPlayerUnEquipItem ( ::Proud::HostID remote, ::Proud::RmiContext& rmiContext ,  const int & hostID,  const int & itemCID,  const int & itemID,  const Proud::Vector3 & pos,  const Proud::Vector3 & rot) 
		{ 
			if (NotifyPlayerUnEquipItem_Function==nullptr) 
				return true; 
			return NotifyPlayerUnEquipItem_Function(remote,rmiContext, hostID, itemCID, itemID, pos, rot); 
		}

               
		std::function< bool ( ::Proud::HostID, ::Proud::RmiContext& ,  const int & ,  const string & ,  const string & ,  const Proud::Vector3 & ,  const Proud::Vector3 & ) > NotifyPlayerBulletCreate_Function;
		virtual bool NotifyPlayerBulletCreate ( ::Proud::HostID remote, ::Proud::RmiContext& rmiContext ,  const int & sendHostID,  const string & bulletType,  const string & bulletID,  const Proud::Vector3 & pos,  const Proud::Vector3 & rot) 
		{ 
			if (NotifyPlayerBulletCreate_Function==nullptr) 
				return true; 
			return NotifyPlayerBulletCreate_Function(remote,rmiContext, sendHostID, bulletType, bulletID, pos, rot); 
		}

               
		std::function< bool ( ::Proud::HostID, ::Proud::RmiContext& ,  const int & ,  const string & ,  const Proud::Vector3 & ,  const Proud::Vector3 & ,  const Proud::Vector3 & ) > NotifyPlayerBulletMove_Function;
		virtual bool NotifyPlayerBulletMove ( ::Proud::HostID remote, ::Proud::RmiContext& rmiContext ,  const int & sendHostID,  const string & bulletID,  const Proud::Vector3 & pos,  const Proud::Vector3 & velocity,  const Proud::Vector3 & rot) 
		{ 
			if (NotifyPlayerBulletMove_Function==nullptr) 
				return true; 
			return NotifyPlayerBulletMove_Function(remote,rmiContext, sendHostID, bulletID, pos, velocity, rot); 
		}

               
		std::function< bool ( ::Proud::HostID, ::Proud::RmiContext& ,  const int & ,  const string & ) > NotifyPlayerBulletDelete_Function;
		virtual bool NotifyPlayerBulletDelete ( ::Proud::HostID remote, ::Proud::RmiContext& rmiContext ,  const int & sendHostID,  const string & bulletID) 
		{ 
			if (NotifyPlayerBulletDelete_Function==nullptr) 
				return true; 
			return NotifyPlayerBulletDelete_Function(remote,rmiContext, sendHostID, bulletID); 
		}

               
		std::function< bool ( ::Proud::HostID, ::Proud::RmiContext& ,  const int & ,  const string & ,  const string & ,  const int & ) > NotifyPlayerAnimation_Function;
		virtual bool NotifyPlayerAnimation ( ::Proud::HostID remote, ::Proud::RmiContext& rmiContext ,  const int & hostID,  const string & name,  const string & animationName,  const int & aniValue) 
		{ 
			if (NotifyPlayerAnimation_Function==nullptr) 
				return true; 
			return NotifyPlayerAnimation_Function(remote,rmiContext, hostID, name, animationName, aniValue); 
		}

               
		std::function< bool ( ::Proud::HostID, ::Proud::RmiContext& ,  const int & ,  const string & ,  const float & ,  const float & ,  const float & ) > NotifyPlayerChangeHP_Function;
		virtual bool NotifyPlayerChangeHP ( ::Proud::HostID remote, ::Proud::RmiContext& rmiContext ,  const int & sendHostID,  const string & name,  const float & hp,  const float & prevhp,  const float & maxhp) 
		{ 
			if (NotifyPlayerChangeHP_Function==nullptr) 
				return true; 
			return NotifyPlayerChangeHP_Function(remote,rmiContext, sendHostID, name, hp, prevhp, maxhp); 
		}

               
		std::function< bool ( ::Proud::HostID, ::Proud::RmiContext& ,  const int & ,  const string & ,  const float & ,  const float & ,  const float & ) > NotifyPlayerChangeOxygen_Function;
		virtual bool NotifyPlayerChangeOxygen ( ::Proud::HostID remote, ::Proud::RmiContext& rmiContext ,  const int & sendHostID,  const string & name,  const float & oxygen,  const float & prevoxy,  const float & maxoxy) 
		{ 
			if (NotifyPlayerChangeOxygen_Function==nullptr) 
				return true; 
			return NotifyPlayerChangeOxygen_Function(remote,rmiContext, sendHostID, name, oxygen, prevoxy, maxoxy); 
		}

               
		std::function< bool ( ::Proud::HostID, ::Proud::RmiContext& ,  const int & ,  const int & ,  const float & ) > NotifyUseOxyCharger_Function;
		virtual bool NotifyUseOxyCharger ( ::Proud::HostID remote, ::Proud::RmiContext& rmiContext ,  const int & sendHostID,  const int & oxyChargerIndex,  const float & userOxy) 
		{ 
			if (NotifyUseOxyCharger_Function==nullptr) 
				return true; 
			return NotifyUseOxyCharger_Function(remote,rmiContext, sendHostID, oxyChargerIndex, userOxy); 
		}

               
		std::function< bool ( ::Proud::HostID, ::Proud::RmiContext& ,  const int & ,  const int & ,  const int & ) > NotifyUseItemBox_Function;
		virtual bool NotifyUseItemBox ( ::Proud::HostID remote, ::Proud::RmiContext& rmiContext ,  const int & sendHostID,  const int & itemBoxIndex,  const int & itemID) 
		{ 
			if (NotifyUseItemBox_Function==nullptr) 
				return true; 
			return NotifyUseItemBox_Function(remote,rmiContext, sendHostID, itemBoxIndex, itemID); 
		}

               
		std::function< bool ( ::Proud::HostID, ::Proud::RmiContext& ,  const int & ,  const int & ,  const bool & ,  const bool & ) > NotifyShelterInfo_Function;
		virtual bool NotifyShelterInfo ( ::Proud::HostID remote, ::Proud::RmiContext& rmiContext ,  const int & sendHostID,  const int & shelterID,  const bool & doorState,  const bool & lightState) 
		{ 
			if (NotifyShelterInfo_Function==nullptr) 
				return true; 
			return NotifyShelterInfo_Function(remote,rmiContext, sendHostID, shelterID, doorState, lightState); 
		}

               
		std::function< bool ( ::Proud::HostID, ::Proud::RmiContext& ,  const int & ) > NotifyMeteorCreateTime_Function;
		virtual bool NotifyMeteorCreateTime ( ::Proud::HostID remote, ::Proud::RmiContext& rmiContext ,  const int & time) 
		{ 
			if (NotifyMeteorCreateTime_Function==nullptr) 
				return true; 
			return NotifyMeteorCreateTime_Function(remote,rmiContext, time); 
		}

               
		std::function< bool ( ::Proud::HostID, ::Proud::RmiContext& ,  const float & ,  const float & ) > NotifyMeteorCreate_Function;
		virtual bool NotifyMeteorCreate ( ::Proud::HostID remote, ::Proud::RmiContext& rmiContext ,  const float & anglex,  const float & anglez) 
		{ 
			if (NotifyMeteorCreate_Function==nullptr) 
				return true; 
			return NotifyMeteorCreate_Function(remote,rmiContext, anglex, anglez); 
		}

	};
#endif
}

