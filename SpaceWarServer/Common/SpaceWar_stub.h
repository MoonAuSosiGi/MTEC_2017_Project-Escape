  






// Generated by PIDL compiler.
// Do not modify this file, but modify the source .pidl file.
   
#pragma once


#include "SpaceWar_common.h"

     
namespace SpaceWar
{
	class Stub : public ::Proud::IRmiStub
	{
	public:
               
		virtual bool RequestServerConnect ( ::Proud::HostID, ::Proud::RmiContext& ,  const string & )		{ 
			return false;
		} 

#define DECRMI_SpaceWar_RequestServerConnect bool RequestServerConnect ( ::Proud::HostID remote, ::Proud::RmiContext& rmiContext ,  const string & id) PN_OVERRIDE

#define DEFRMI_SpaceWar_RequestServerConnect(DerivedClass) bool DerivedClass::RequestServerConnect ( ::Proud::HostID remote, ::Proud::RmiContext& rmiContext ,  const string & id)
#define CALL_SpaceWar_RequestServerConnect RequestServerConnect ( ::Proud::HostID remote, ::Proud::RmiContext& rmiContext ,  const string & id)
#define PARAM_SpaceWar_RequestServerConnect ( ::Proud::HostID remote, ::Proud::RmiContext& rmiContext ,  const string & id)
               
		virtual bool RequestLobbyConnect ( ::Proud::HostID, ::Proud::RmiContext& )		{ 
			return false;
		} 

#define DECRMI_SpaceWar_RequestLobbyConnect bool RequestLobbyConnect ( ::Proud::HostID remote, ::Proud::RmiContext& rmiContext ) PN_OVERRIDE

#define DEFRMI_SpaceWar_RequestLobbyConnect(DerivedClass) bool DerivedClass::RequestLobbyConnect ( ::Proud::HostID remote, ::Proud::RmiContext& rmiContext )
#define CALL_SpaceWar_RequestLobbyConnect RequestLobbyConnect ( ::Proud::HostID remote, ::Proud::RmiContext& rmiContext )
#define PARAM_SpaceWar_RequestLobbyConnect ( ::Proud::HostID remote, ::Proud::RmiContext& rmiContext )
               
		virtual bool RequestNetworkGameTeamSelect ( ::Proud::HostID, ::Proud::RmiContext& ,  const string & ,  const bool & )		{ 
			return false;
		} 

#define DECRMI_SpaceWar_RequestNetworkGameTeamSelect bool RequestNetworkGameTeamSelect ( ::Proud::HostID remote, ::Proud::RmiContext& rmiContext ,  const string & name,  const bool & teamRed) PN_OVERRIDE

#define DEFRMI_SpaceWar_RequestNetworkGameTeamSelect(DerivedClass) bool DerivedClass::RequestNetworkGameTeamSelect ( ::Proud::HostID remote, ::Proud::RmiContext& rmiContext ,  const string & name,  const bool & teamRed)
#define CALL_SpaceWar_RequestNetworkGameTeamSelect RequestNetworkGameTeamSelect ( ::Proud::HostID remote, ::Proud::RmiContext& rmiContext ,  const string & name,  const bool & teamRed)
#define PARAM_SpaceWar_RequestNetworkGameTeamSelect ( ::Proud::HostID remote, ::Proud::RmiContext& rmiContext ,  const string & name,  const bool & teamRed)
               
		virtual bool RequestNetworkGameReady ( ::Proud::HostID, ::Proud::RmiContext& ,  const string & ,  const bool & )		{ 
			return false;
		} 

#define DECRMI_SpaceWar_RequestNetworkGameReady bool RequestNetworkGameReady ( ::Proud::HostID remote, ::Proud::RmiContext& rmiContext ,  const string & name,  const bool & ready) PN_OVERRIDE

#define DEFRMI_SpaceWar_RequestNetworkGameReady(DerivedClass) bool DerivedClass::RequestNetworkGameReady ( ::Proud::HostID remote, ::Proud::RmiContext& rmiContext ,  const string & name,  const bool & ready)
#define CALL_SpaceWar_RequestNetworkGameReady RequestNetworkGameReady ( ::Proud::HostID remote, ::Proud::RmiContext& rmiContext ,  const string & name,  const bool & ready)
#define PARAM_SpaceWar_RequestNetworkGameReady ( ::Proud::HostID remote, ::Proud::RmiContext& rmiContext ,  const string & name,  const bool & ready)
               
		virtual bool RequestNetworkChangeMap ( ::Proud::HostID, ::Proud::RmiContext& ,  const string & )		{ 
			return false;
		} 

#define DECRMI_SpaceWar_RequestNetworkChangeMap bool RequestNetworkChangeMap ( ::Proud::HostID remote, ::Proud::RmiContext& rmiContext ,  const string & mapName) PN_OVERRIDE

#define DEFRMI_SpaceWar_RequestNetworkChangeMap(DerivedClass) bool DerivedClass::RequestNetworkChangeMap ( ::Proud::HostID remote, ::Proud::RmiContext& rmiContext ,  const string & mapName)
#define CALL_SpaceWar_RequestNetworkChangeMap RequestNetworkChangeMap ( ::Proud::HostID remote, ::Proud::RmiContext& rmiContext ,  const string & mapName)
#define PARAM_SpaceWar_RequestNetworkChangeMap ( ::Proud::HostID remote, ::Proud::RmiContext& rmiContext ,  const string & mapName)
               
		virtual bool RequestNetworkPlayerCount ( ::Proud::HostID, ::Proud::RmiContext& ,  const int & )		{ 
			return false;
		} 

#define DECRMI_SpaceWar_RequestNetworkPlayerCount bool RequestNetworkPlayerCount ( ::Proud::HostID remote, ::Proud::RmiContext& rmiContext ,  const int & playerCount) PN_OVERRIDE

#define DEFRMI_SpaceWar_RequestNetworkPlayerCount(DerivedClass) bool DerivedClass::RequestNetworkPlayerCount ( ::Proud::HostID remote, ::Proud::RmiContext& rmiContext ,  const int & playerCount)
#define CALL_SpaceWar_RequestNetworkPlayerCount RequestNetworkPlayerCount ( ::Proud::HostID remote, ::Proud::RmiContext& rmiContext ,  const int & playerCount)
#define PARAM_SpaceWar_RequestNetworkPlayerCount ( ::Proud::HostID remote, ::Proud::RmiContext& rmiContext ,  const int & playerCount)
               
		virtual bool RequestNetworkGameModeChange ( ::Proud::HostID, ::Proud::RmiContext& ,  const int & ,  const bool & )		{ 
			return false;
		} 

#define DECRMI_SpaceWar_RequestNetworkGameModeChange bool RequestNetworkGameModeChange ( ::Proud::HostID remote, ::Proud::RmiContext& rmiContext ,  const int & gameMode,  const bool & teamMode) PN_OVERRIDE

#define DEFRMI_SpaceWar_RequestNetworkGameModeChange(DerivedClass) bool DerivedClass::RequestNetworkGameModeChange ( ::Proud::HostID remote, ::Proud::RmiContext& rmiContext ,  const int & gameMode,  const bool & teamMode)
#define CALL_SpaceWar_RequestNetworkGameModeChange RequestNetworkGameModeChange ( ::Proud::HostID remote, ::Proud::RmiContext& rmiContext ,  const int & gameMode,  const bool & teamMode)
#define PARAM_SpaceWar_RequestNetworkGameModeChange ( ::Proud::HostID remote, ::Proud::RmiContext& rmiContext ,  const int & gameMode,  const bool & teamMode)
               
		virtual bool RequestNetworkGameStart ( ::Proud::HostID, ::Proud::RmiContext& )		{ 
			return false;
		} 

#define DECRMI_SpaceWar_RequestNetworkGameStart bool RequestNetworkGameStart ( ::Proud::HostID remote, ::Proud::RmiContext& rmiContext ) PN_OVERRIDE

#define DEFRMI_SpaceWar_RequestNetworkGameStart(DerivedClass) bool DerivedClass::RequestNetworkGameStart ( ::Proud::HostID remote, ::Proud::RmiContext& rmiContext )
#define CALL_SpaceWar_RequestNetworkGameStart RequestNetworkGameStart ( ::Proud::HostID remote, ::Proud::RmiContext& rmiContext )
#define PARAM_SpaceWar_RequestNetworkGameStart ( ::Proud::HostID remote, ::Proud::RmiContext& rmiContext )
               
		virtual bool RequestNetworkHostOut ( ::Proud::HostID, ::Proud::RmiContext& ,  const int & )		{ 
			return false;
		} 

#define DECRMI_SpaceWar_RequestNetworkHostOut bool RequestNetworkHostOut ( ::Proud::HostID remote, ::Proud::RmiContext& rmiContext ,  const int & hostID) PN_OVERRIDE

#define DEFRMI_SpaceWar_RequestNetworkHostOut(DerivedClass) bool DerivedClass::RequestNetworkHostOut ( ::Proud::HostID remote, ::Proud::RmiContext& rmiContext ,  const int & hostID)
#define CALL_SpaceWar_RequestNetworkHostOut RequestNetworkHostOut ( ::Proud::HostID remote, ::Proud::RmiContext& rmiContext ,  const int & hostID)
#define PARAM_SpaceWar_RequestNetworkHostOut ( ::Proud::HostID remote, ::Proud::RmiContext& rmiContext ,  const int & hostID)
               
		virtual bool RequestGameSceneJoin ( ::Proud::HostID, ::Proud::RmiContext& ,  const Proud::Vector3 & ,  const int & ,  const string & )		{ 
			return false;
		} 

#define DECRMI_SpaceWar_RequestGameSceneJoin bool RequestGameSceneJoin ( ::Proud::HostID remote, ::Proud::RmiContext& rmiContext ,  const Proud::Vector3 & pos,  const int & hostID,  const string & name) PN_OVERRIDE

#define DEFRMI_SpaceWar_RequestGameSceneJoin(DerivedClass) bool DerivedClass::RequestGameSceneJoin ( ::Proud::HostID remote, ::Proud::RmiContext& rmiContext ,  const Proud::Vector3 & pos,  const int & hostID,  const string & name)
#define CALL_SpaceWar_RequestGameSceneJoin RequestGameSceneJoin ( ::Proud::HostID remote, ::Proud::RmiContext& rmiContext ,  const Proud::Vector3 & pos,  const int & hostID,  const string & name)
#define PARAM_SpaceWar_RequestGameSceneJoin ( ::Proud::HostID remote, ::Proud::RmiContext& rmiContext ,  const Proud::Vector3 & pos,  const int & hostID,  const string & name)
               
		virtual bool NotifyNetworkUserSetup ( ::Proud::HostID, ::Proud::RmiContext& ,  const int & ,  const string & ,  const bool & ,  const bool & )		{ 
			return false;
		} 

#define DECRMI_SpaceWar_NotifyNetworkUserSetup bool NotifyNetworkUserSetup ( ::Proud::HostID remote, ::Proud::RmiContext& rmiContext ,  const int & userHostID,  const string & userName,  const bool & ready,  const bool & teamRed) PN_OVERRIDE

#define DEFRMI_SpaceWar_NotifyNetworkUserSetup(DerivedClass) bool DerivedClass::NotifyNetworkUserSetup ( ::Proud::HostID remote, ::Proud::RmiContext& rmiContext ,  const int & userHostID,  const string & userName,  const bool & ready,  const bool & teamRed)
#define CALL_SpaceWar_NotifyNetworkUserSetup NotifyNetworkUserSetup ( ::Proud::HostID remote, ::Proud::RmiContext& rmiContext ,  const int & userHostID,  const string & userName,  const bool & ready,  const bool & teamRed)
#define PARAM_SpaceWar_NotifyNetworkUserSetup ( ::Proud::HostID remote, ::Proud::RmiContext& rmiContext ,  const int & userHostID,  const string & userName,  const bool & ready,  const bool & teamRed)
               
		virtual bool NotifyNetworkGameTeamChange ( ::Proud::HostID, ::Proud::RmiContext& ,  const int & ,  const bool & )		{ 
			return false;
		} 

#define DECRMI_SpaceWar_NotifyNetworkGameTeamChange bool NotifyNetworkGameTeamChange ( ::Proud::HostID remote, ::Proud::RmiContext& rmiContext ,  const int & userHostID,  const bool & teamRed) PN_OVERRIDE

#define DEFRMI_SpaceWar_NotifyNetworkGameTeamChange(DerivedClass) bool DerivedClass::NotifyNetworkGameTeamChange ( ::Proud::HostID remote, ::Proud::RmiContext& rmiContext ,  const int & userHostID,  const bool & teamRed)
#define CALL_SpaceWar_NotifyNetworkGameTeamChange NotifyNetworkGameTeamChange ( ::Proud::HostID remote, ::Proud::RmiContext& rmiContext ,  const int & userHostID,  const bool & teamRed)
#define PARAM_SpaceWar_NotifyNetworkGameTeamChange ( ::Proud::HostID remote, ::Proud::RmiContext& rmiContext ,  const int & userHostID,  const bool & teamRed)
               
		virtual bool NotifyNetworkConnectUser ( ::Proud::HostID, ::Proud::RmiContext& ,  const int & ,  const string & )		{ 
			return false;
		} 

#define DECRMI_SpaceWar_NotifyNetworkConnectUser bool NotifyNetworkConnectUser ( ::Proud::HostID remote, ::Proud::RmiContext& rmiContext ,  const int & userHostID,  const string & userName) PN_OVERRIDE

#define DEFRMI_SpaceWar_NotifyNetworkConnectUser(DerivedClass) bool DerivedClass::NotifyNetworkConnectUser ( ::Proud::HostID remote, ::Proud::RmiContext& rmiContext ,  const int & userHostID,  const string & userName)
#define CALL_SpaceWar_NotifyNetworkConnectUser NotifyNetworkConnectUser ( ::Proud::HostID remote, ::Proud::RmiContext& rmiContext ,  const int & userHostID,  const string & userName)
#define PARAM_SpaceWar_NotifyNetworkConnectUser ( ::Proud::HostID remote, ::Proud::RmiContext& rmiContext ,  const int & userHostID,  const string & userName)
               
		virtual bool NotifyNetworkReady ( ::Proud::HostID, ::Proud::RmiContext& ,  const int & ,  const string & ,  const bool & )		{ 
			return false;
		} 

#define DECRMI_SpaceWar_NotifyNetworkReady bool NotifyNetworkReady ( ::Proud::HostID remote, ::Proud::RmiContext& rmiContext ,  const int & hostID,  const string & userName,  const bool & ready) PN_OVERRIDE

#define DEFRMI_SpaceWar_NotifyNetworkReady(DerivedClass) bool DerivedClass::NotifyNetworkReady ( ::Proud::HostID remote, ::Proud::RmiContext& rmiContext ,  const int & hostID,  const string & userName,  const bool & ready)
#define CALL_SpaceWar_NotifyNetworkReady NotifyNetworkReady ( ::Proud::HostID remote, ::Proud::RmiContext& rmiContext ,  const int & hostID,  const string & userName,  const bool & ready)
#define PARAM_SpaceWar_NotifyNetworkReady ( ::Proud::HostID remote, ::Proud::RmiContext& rmiContext ,  const int & hostID,  const string & userName,  const bool & ready)
               
		virtual bool NotifyNetworkGameModeChange ( ::Proud::HostID, ::Proud::RmiContext& ,  const int & ,  const bool & )		{ 
			return false;
		} 

#define DECRMI_SpaceWar_NotifyNetworkGameModeChange bool NotifyNetworkGameModeChange ( ::Proud::HostID remote, ::Proud::RmiContext& rmiContext ,  const int & gameMode,  const bool & teamMode) PN_OVERRIDE

#define DEFRMI_SpaceWar_NotifyNetworkGameModeChange(DerivedClass) bool DerivedClass::NotifyNetworkGameModeChange ( ::Proud::HostID remote, ::Proud::RmiContext& rmiContext ,  const int & gameMode,  const bool & teamMode)
#define CALL_SpaceWar_NotifyNetworkGameModeChange NotifyNetworkGameModeChange ( ::Proud::HostID remote, ::Proud::RmiContext& rmiContext ,  const int & gameMode,  const bool & teamMode)
#define PARAM_SpaceWar_NotifyNetworkGameModeChange ( ::Proud::HostID remote, ::Proud::RmiContext& rmiContext ,  const int & gameMode,  const bool & teamMode)
               
		virtual bool NotifyNetworkGamePlayerCountChange ( ::Proud::HostID, ::Proud::RmiContext& ,  const int & )		{ 
			return false;
		} 

#define DECRMI_SpaceWar_NotifyNetworkGamePlayerCountChange bool NotifyNetworkGamePlayerCountChange ( ::Proud::HostID remote, ::Proud::RmiContext& rmiContext ,  const int & playerCount) PN_OVERRIDE

#define DEFRMI_SpaceWar_NotifyNetworkGamePlayerCountChange(DerivedClass) bool DerivedClass::NotifyNetworkGamePlayerCountChange ( ::Proud::HostID remote, ::Proud::RmiContext& rmiContext ,  const int & playerCount)
#define CALL_SpaceWar_NotifyNetworkGamePlayerCountChange NotifyNetworkGamePlayerCountChange ( ::Proud::HostID remote, ::Proud::RmiContext& rmiContext ,  const int & playerCount)
#define PARAM_SpaceWar_NotifyNetworkGamePlayerCountChange ( ::Proud::HostID remote, ::Proud::RmiContext& rmiContext ,  const int & playerCount)
               
		virtual bool NotifyNetworkGameChangeMap ( ::Proud::HostID, ::Proud::RmiContext& ,  const string & )		{ 
			return false;
		} 

#define DECRMI_SpaceWar_NotifyNetworkGameChangeMap bool NotifyNetworkGameChangeMap ( ::Proud::HostID remote, ::Proud::RmiContext& rmiContext ,  const string & map) PN_OVERRIDE

#define DEFRMI_SpaceWar_NotifyNetworkGameChangeMap(DerivedClass) bool DerivedClass::NotifyNetworkGameChangeMap ( ::Proud::HostID remote, ::Proud::RmiContext& rmiContext ,  const string & map)
#define CALL_SpaceWar_NotifyNetworkGameChangeMap NotifyNetworkGameChangeMap ( ::Proud::HostID remote, ::Proud::RmiContext& rmiContext ,  const string & map)
#define PARAM_SpaceWar_NotifyNetworkGameChangeMap ( ::Proud::HostID remote, ::Proud::RmiContext& rmiContext ,  const string & map)
               
		virtual bool NotifyNetworkGameStart ( ::Proud::HostID, ::Proud::RmiContext& )		{ 
			return false;
		} 

#define DECRMI_SpaceWar_NotifyNetworkGameStart bool NotifyNetworkGameStart ( ::Proud::HostID remote, ::Proud::RmiContext& rmiContext ) PN_OVERRIDE

#define DEFRMI_SpaceWar_NotifyNetworkGameStart(DerivedClass) bool DerivedClass::NotifyNetworkGameStart ( ::Proud::HostID remote, ::Proud::RmiContext& rmiContext )
#define CALL_SpaceWar_NotifyNetworkGameStart NotifyNetworkGameStart ( ::Proud::HostID remote, ::Proud::RmiContext& rmiContext )
#define PARAM_SpaceWar_NotifyNetworkGameStart ( ::Proud::HostID remote, ::Proud::RmiContext& rmiContext )
               
		virtual bool NotifyNetworkGameStartFailed ( ::Proud::HostID, ::Proud::RmiContext& )		{ 
			return false;
		} 

#define DECRMI_SpaceWar_NotifyNetworkGameStartFailed bool NotifyNetworkGameStartFailed ( ::Proud::HostID remote, ::Proud::RmiContext& rmiContext ) PN_OVERRIDE

#define DEFRMI_SpaceWar_NotifyNetworkGameStartFailed(DerivedClass) bool DerivedClass::NotifyNetworkGameStartFailed ( ::Proud::HostID remote, ::Proud::RmiContext& rmiContext )
#define CALL_SpaceWar_NotifyNetworkGameStartFailed NotifyNetworkGameStartFailed ( ::Proud::HostID remote, ::Proud::RmiContext& rmiContext )
#define PARAM_SpaceWar_NotifyNetworkGameStartFailed ( ::Proud::HostID remote, ::Proud::RmiContext& rmiContext )
               
		virtual bool NotifyNetworkGameHostOut ( ::Proud::HostID, ::Proud::RmiContext& )		{ 
			return false;
		} 

#define DECRMI_SpaceWar_NotifyNetworkGameHostOut bool NotifyNetworkGameHostOut ( ::Proud::HostID remote, ::Proud::RmiContext& rmiContext ) PN_OVERRIDE

#define DEFRMI_SpaceWar_NotifyNetworkGameHostOut(DerivedClass) bool DerivedClass::NotifyNetworkGameHostOut ( ::Proud::HostID remote, ::Proud::RmiContext& rmiContext )
#define CALL_SpaceWar_NotifyNetworkGameHostOut NotifyNetworkGameHostOut ( ::Proud::HostID remote, ::Proud::RmiContext& rmiContext )
#define PARAM_SpaceWar_NotifyNetworkGameHostOut ( ::Proud::HostID remote, ::Proud::RmiContext& rmiContext )
               
		virtual bool RequestClientJoin ( ::Proud::HostID, ::Proud::RmiContext& ,  const int & ,  const string & ,  const float & ,  const float & ,  const float & )		{ 
			return false;
		} 

#define DECRMI_SpaceWar_RequestClientJoin bool RequestClientJoin ( ::Proud::HostID remote, ::Proud::RmiContext& rmiContext ,  const int & hostID,  const string & name,  const float & x,  const float & y,  const float & z) PN_OVERRIDE

#define DEFRMI_SpaceWar_RequestClientJoin(DerivedClass) bool DerivedClass::RequestClientJoin ( ::Proud::HostID remote, ::Proud::RmiContext& rmiContext ,  const int & hostID,  const string & name,  const float & x,  const float & y,  const float & z)
#define CALL_SpaceWar_RequestClientJoin RequestClientJoin ( ::Proud::HostID remote, ::Proud::RmiContext& rmiContext ,  const int & hostID,  const string & name,  const float & x,  const float & y,  const float & z)
#define PARAM_SpaceWar_RequestClientJoin ( ::Proud::HostID remote, ::Proud::RmiContext& rmiContext ,  const int & hostID,  const string & name,  const float & x,  const float & y,  const float & z)
               
		virtual bool RequestWorldCreateItem ( ::Proud::HostID, ::Proud::RmiContext& ,  const int & ,  const int & ,  const int & ,  const Proud::Vector3 & ,  const Proud::Vector3 & )		{ 
			return false;
		} 

#define DECRMI_SpaceWar_RequestWorldCreateItem bool RequestWorldCreateItem ( ::Proud::HostID remote, ::Proud::RmiContext& rmiContext ,  const int & hostID,  const int & itemCID,  const int & itemID,  const Proud::Vector3 & pos,  const Proud::Vector3 & rot) PN_OVERRIDE

#define DEFRMI_SpaceWar_RequestWorldCreateItem(DerivedClass) bool DerivedClass::RequestWorldCreateItem ( ::Proud::HostID remote, ::Proud::RmiContext& rmiContext ,  const int & hostID,  const int & itemCID,  const int & itemID,  const Proud::Vector3 & pos,  const Proud::Vector3 & rot)
#define CALL_SpaceWar_RequestWorldCreateItem RequestWorldCreateItem ( ::Proud::HostID remote, ::Proud::RmiContext& rmiContext ,  const int & hostID,  const int & itemCID,  const int & itemID,  const Proud::Vector3 & pos,  const Proud::Vector3 & rot)
#define PARAM_SpaceWar_RequestWorldCreateItem ( ::Proud::HostID remote, ::Proud::RmiContext& rmiContext ,  const int & hostID,  const int & itemCID,  const int & itemID,  const Proud::Vector3 & pos,  const Proud::Vector3 & rot)
               
		virtual bool RequestPlayerDamage ( ::Proud::HostID, ::Proud::RmiContext& ,  const int & ,  const int & ,  const string & ,  const string & ,  const float & )		{ 
			return false;
		} 

#define DECRMI_SpaceWar_RequestPlayerDamage bool RequestPlayerDamage ( ::Proud::HostID remote, ::Proud::RmiContext& rmiContext ,  const int & sendHostID,  const int & targetHostID,  const string & name,  const string & weaponName,  const float & damage) PN_OVERRIDE

#define DEFRMI_SpaceWar_RequestPlayerDamage(DerivedClass) bool DerivedClass::RequestPlayerDamage ( ::Proud::HostID remote, ::Proud::RmiContext& rmiContext ,  const int & sendHostID,  const int & targetHostID,  const string & name,  const string & weaponName,  const float & damage)
#define CALL_SpaceWar_RequestPlayerDamage RequestPlayerDamage ( ::Proud::HostID remote, ::Proud::RmiContext& rmiContext ,  const int & sendHostID,  const int & targetHostID,  const string & name,  const string & weaponName,  const float & damage)
#define PARAM_SpaceWar_RequestPlayerDamage ( ::Proud::HostID remote, ::Proud::RmiContext& rmiContext ,  const int & sendHostID,  const int & targetHostID,  const string & name,  const string & weaponName,  const float & damage)
               
		virtual bool RequestPlayerUseOxy ( ::Proud::HostID, ::Proud::RmiContext& ,  const int & ,  const string & ,  const float & )		{ 
			return false;
		} 

#define DECRMI_SpaceWar_RequestPlayerUseOxy bool RequestPlayerUseOxy ( ::Proud::HostID remote, ::Proud::RmiContext& rmiContext ,  const int & sendHostID,  const string & name,  const float & useOxy) PN_OVERRIDE

#define DEFRMI_SpaceWar_RequestPlayerUseOxy(DerivedClass) bool DerivedClass::RequestPlayerUseOxy ( ::Proud::HostID remote, ::Proud::RmiContext& rmiContext ,  const int & sendHostID,  const string & name,  const float & useOxy)
#define CALL_SpaceWar_RequestPlayerUseOxy RequestPlayerUseOxy ( ::Proud::HostID remote, ::Proud::RmiContext& rmiContext ,  const int & sendHostID,  const string & name,  const float & useOxy)
#define PARAM_SpaceWar_RequestPlayerUseOxy ( ::Proud::HostID remote, ::Proud::RmiContext& rmiContext ,  const int & sendHostID,  const string & name,  const float & useOxy)
               
		virtual bool RequestUseOxyCharger ( ::Proud::HostID, ::Proud::RmiContext& ,  const int & ,  const int & ,  const float & )		{ 
			return false;
		} 

#define DECRMI_SpaceWar_RequestUseOxyCharger bool RequestUseOxyCharger ( ::Proud::HostID remote, ::Proud::RmiContext& rmiContext ,  const int & sendHostID,  const int & oxyChargerIndex,  const float & userOxy) PN_OVERRIDE

#define DEFRMI_SpaceWar_RequestUseOxyCharger(DerivedClass) bool DerivedClass::RequestUseOxyCharger ( ::Proud::HostID remote, ::Proud::RmiContext& rmiContext ,  const int & sendHostID,  const int & oxyChargerIndex,  const float & userOxy)
#define CALL_SpaceWar_RequestUseOxyCharger RequestUseOxyCharger ( ::Proud::HostID remote, ::Proud::RmiContext& rmiContext ,  const int & sendHostID,  const int & oxyChargerIndex,  const float & userOxy)
#define PARAM_SpaceWar_RequestUseOxyCharger ( ::Proud::HostID remote, ::Proud::RmiContext& rmiContext ,  const int & sendHostID,  const int & oxyChargerIndex,  const float & userOxy)
               
		virtual bool RequestUseItemBox ( ::Proud::HostID, ::Proud::RmiContext& ,  const int & ,  const int & )		{ 
			return false;
		} 

#define DECRMI_SpaceWar_RequestUseItemBox bool RequestUseItemBox ( ::Proud::HostID remote, ::Proud::RmiContext& rmiContext ,  const int & sendHostID,  const int & itemBoxIndex) PN_OVERRIDE

#define DEFRMI_SpaceWar_RequestUseItemBox(DerivedClass) bool DerivedClass::RequestUseItemBox ( ::Proud::HostID remote, ::Proud::RmiContext& rmiContext ,  const int & sendHostID,  const int & itemBoxIndex)
#define CALL_SpaceWar_RequestUseItemBox RequestUseItemBox ( ::Proud::HostID remote, ::Proud::RmiContext& rmiContext ,  const int & sendHostID,  const int & itemBoxIndex)
#define PARAM_SpaceWar_RequestUseItemBox ( ::Proud::HostID remote, ::Proud::RmiContext& rmiContext ,  const int & sendHostID,  const int & itemBoxIndex)
               
		virtual bool RequestShelterStartSetup ( ::Proud::HostID, ::Proud::RmiContext& ,  const int & )		{ 
			return false;
		} 

#define DECRMI_SpaceWar_RequestShelterStartSetup bool RequestShelterStartSetup ( ::Proud::HostID remote, ::Proud::RmiContext& rmiContext ,  const int & shelterID) PN_OVERRIDE

#define DEFRMI_SpaceWar_RequestShelterStartSetup(DerivedClass) bool DerivedClass::RequestShelterStartSetup ( ::Proud::HostID remote, ::Proud::RmiContext& rmiContext ,  const int & shelterID)
#define CALL_SpaceWar_RequestShelterStartSetup RequestShelterStartSetup ( ::Proud::HostID remote, ::Proud::RmiContext& rmiContext ,  const int & shelterID)
#define PARAM_SpaceWar_RequestShelterStartSetup ( ::Proud::HostID remote, ::Proud::RmiContext& rmiContext ,  const int & shelterID)
               
		virtual bool RequestShelterDoorControl ( ::Proud::HostID, ::Proud::RmiContext& ,  const int & ,  const int & ,  const bool & )		{ 
			return false;
		} 

#define DECRMI_SpaceWar_RequestShelterDoorControl bool RequestShelterDoorControl ( ::Proud::HostID remote, ::Proud::RmiContext& rmiContext ,  const int & sendHostID,  const int & shelterID,  const bool & doorState) PN_OVERRIDE

#define DEFRMI_SpaceWar_RequestShelterDoorControl(DerivedClass) bool DerivedClass::RequestShelterDoorControl ( ::Proud::HostID remote, ::Proud::RmiContext& rmiContext ,  const int & sendHostID,  const int & shelterID,  const bool & doorState)
#define CALL_SpaceWar_RequestShelterDoorControl RequestShelterDoorControl ( ::Proud::HostID remote, ::Proud::RmiContext& rmiContext ,  const int & sendHostID,  const int & shelterID,  const bool & doorState)
#define PARAM_SpaceWar_RequestShelterDoorControl ( ::Proud::HostID remote, ::Proud::RmiContext& rmiContext ,  const int & sendHostID,  const int & shelterID,  const bool & doorState)
               
		virtual bool RequestShelterEnter ( ::Proud::HostID, ::Proud::RmiContext& ,  const int & ,  const int & ,  const bool & )		{ 
			return false;
		} 

#define DECRMI_SpaceWar_RequestShelterEnter bool RequestShelterEnter ( ::Proud::HostID remote, ::Proud::RmiContext& rmiContext ,  const int & sendHostID,  const int & shelterID,  const bool & enter) PN_OVERRIDE

#define DEFRMI_SpaceWar_RequestShelterEnter(DerivedClass) bool DerivedClass::RequestShelterEnter ( ::Proud::HostID remote, ::Proud::RmiContext& rmiContext ,  const int & sendHostID,  const int & shelterID,  const bool & enter)
#define CALL_SpaceWar_RequestShelterEnter RequestShelterEnter ( ::Proud::HostID remote, ::Proud::RmiContext& rmiContext ,  const int & sendHostID,  const int & shelterID,  const bool & enter)
#define PARAM_SpaceWar_RequestShelterEnter ( ::Proud::HostID remote, ::Proud::RmiContext& rmiContext ,  const int & sendHostID,  const int & shelterID,  const bool & enter)
               
		virtual bool NotifyLoginSuccess ( ::Proud::HostID, ::Proud::RmiContext& ,  const int & ,  const bool & )		{ 
			return false;
		} 

#define DECRMI_SpaceWar_NotifyLoginSuccess bool NotifyLoginSuccess ( ::Proud::HostID remote, ::Proud::RmiContext& rmiContext ,  const int & hostID,  const bool & host) PN_OVERRIDE

#define DEFRMI_SpaceWar_NotifyLoginSuccess(DerivedClass) bool DerivedClass::NotifyLoginSuccess ( ::Proud::HostID remote, ::Proud::RmiContext& rmiContext ,  const int & hostID,  const bool & host)
#define CALL_SpaceWar_NotifyLoginSuccess NotifyLoginSuccess ( ::Proud::HostID remote, ::Proud::RmiContext& rmiContext ,  const int & hostID,  const bool & host)
#define PARAM_SpaceWar_NotifyLoginSuccess ( ::Proud::HostID remote, ::Proud::RmiContext& rmiContext ,  const int & hostID,  const bool & host)
               
		virtual bool NotifyLoginFailed ( ::Proud::HostID, ::Proud::RmiContext& ,  const string & )		{ 
			return false;
		} 

#define DECRMI_SpaceWar_NotifyLoginFailed bool NotifyLoginFailed ( ::Proud::HostID remote, ::Proud::RmiContext& rmiContext ,  const string & reason) PN_OVERRIDE

#define DEFRMI_SpaceWar_NotifyLoginFailed(DerivedClass) bool DerivedClass::NotifyLoginFailed ( ::Proud::HostID remote, ::Proud::RmiContext& rmiContext ,  const string & reason)
#define CALL_SpaceWar_NotifyLoginFailed NotifyLoginFailed ( ::Proud::HostID remote, ::Proud::RmiContext& rmiContext ,  const string & reason)
#define PARAM_SpaceWar_NotifyLoginFailed ( ::Proud::HostID remote, ::Proud::RmiContext& rmiContext ,  const string & reason)
               
		virtual bool NotifyOtherClientJoin ( ::Proud::HostID, ::Proud::RmiContext& ,  const int & ,  const string & ,  const float & ,  const float & ,  const float & )		{ 
			return false;
		} 

#define DECRMI_SpaceWar_NotifyOtherClientJoin bool NotifyOtherClientJoin ( ::Proud::HostID remote, ::Proud::RmiContext& rmiContext ,  const int & hostID,  const string & name,  const float & x,  const float & y,  const float & z) PN_OVERRIDE

#define DEFRMI_SpaceWar_NotifyOtherClientJoin(DerivedClass) bool DerivedClass::NotifyOtherClientJoin ( ::Proud::HostID remote, ::Proud::RmiContext& rmiContext ,  const int & hostID,  const string & name,  const float & x,  const float & y,  const float & z)
#define CALL_SpaceWar_NotifyOtherClientJoin NotifyOtherClientJoin ( ::Proud::HostID remote, ::Proud::RmiContext& rmiContext ,  const int & hostID,  const string & name,  const float & x,  const float & y,  const float & z)
#define PARAM_SpaceWar_NotifyOtherClientJoin ( ::Proud::HostID remote, ::Proud::RmiContext& rmiContext ,  const int & hostID,  const string & name,  const float & x,  const float & y,  const float & z)
               
		virtual bool NotifyPlayerLost ( ::Proud::HostID, ::Proud::RmiContext& ,  const int & )		{ 
			return false;
		} 

#define DECRMI_SpaceWar_NotifyPlayerLost bool NotifyPlayerLost ( ::Proud::HostID remote, ::Proud::RmiContext& rmiContext ,  const int & hostID) PN_OVERRIDE

#define DEFRMI_SpaceWar_NotifyPlayerLost(DerivedClass) bool DerivedClass::NotifyPlayerLost ( ::Proud::HostID remote, ::Proud::RmiContext& rmiContext ,  const int & hostID)
#define CALL_SpaceWar_NotifyPlayerLost NotifyPlayerLost ( ::Proud::HostID remote, ::Proud::RmiContext& rmiContext ,  const int & hostID)
#define PARAM_SpaceWar_NotifyPlayerLost ( ::Proud::HostID remote, ::Proud::RmiContext& rmiContext ,  const int & hostID)
               
		virtual bool NotifyPlayerMove ( ::Proud::HostID, ::Proud::RmiContext& ,  const int & ,  const string & ,  const float & ,  const float & ,  const float & ,  const float & ,  const float & ,  const float & ,  const float & ,  const float & ,  const float & ,  const float & ,  const float & ,  const float & )		{ 
			return false;
		} 

#define DECRMI_SpaceWar_NotifyPlayerMove bool NotifyPlayerMove ( ::Proud::HostID remote, ::Proud::RmiContext& rmiContext ,  const int & hostID,  const string & name,  const float & curX,  const float & curY,  const float & curZ,  const float & velocityX,  const float & velocityY,  const float & velocityZ,  const float & crx,  const float & cry,  const float & crz,  const float & rx,  const float & ry,  const float & rz) PN_OVERRIDE

#define DEFRMI_SpaceWar_NotifyPlayerMove(DerivedClass) bool DerivedClass::NotifyPlayerMove ( ::Proud::HostID remote, ::Proud::RmiContext& rmiContext ,  const int & hostID,  const string & name,  const float & curX,  const float & curY,  const float & curZ,  const float & velocityX,  const float & velocityY,  const float & velocityZ,  const float & crx,  const float & cry,  const float & crz,  const float & rx,  const float & ry,  const float & rz)
#define CALL_SpaceWar_NotifyPlayerMove NotifyPlayerMove ( ::Proud::HostID remote, ::Proud::RmiContext& rmiContext ,  const int & hostID,  const string & name,  const float & curX,  const float & curY,  const float & curZ,  const float & velocityX,  const float & velocityY,  const float & velocityZ,  const float & crx,  const float & cry,  const float & crz,  const float & rx,  const float & ry,  const float & rz)
#define PARAM_SpaceWar_NotifyPlayerMove ( ::Proud::HostID remote, ::Proud::RmiContext& rmiContext ,  const int & hostID,  const string & name,  const float & curX,  const float & curY,  const float & curZ,  const float & velocityX,  const float & velocityY,  const float & velocityZ,  const float & crx,  const float & cry,  const float & crz,  const float & rx,  const float & ry,  const float & rz)
               
		virtual bool NotifyDeleteItem ( ::Proud::HostID, ::Proud::RmiContext& ,  const int & )		{ 
			return false;
		} 

#define DECRMI_SpaceWar_NotifyDeleteItem bool NotifyDeleteItem ( ::Proud::HostID remote, ::Proud::RmiContext& rmiContext ,  const int & itemID) PN_OVERRIDE

#define DEFRMI_SpaceWar_NotifyDeleteItem(DerivedClass) bool DerivedClass::NotifyDeleteItem ( ::Proud::HostID remote, ::Proud::RmiContext& rmiContext ,  const int & itemID)
#define CALL_SpaceWar_NotifyDeleteItem NotifyDeleteItem ( ::Proud::HostID remote, ::Proud::RmiContext& rmiContext ,  const int & itemID)
#define PARAM_SpaceWar_NotifyDeleteItem ( ::Proud::HostID remote, ::Proud::RmiContext& rmiContext ,  const int & itemID)
               
		virtual bool NotifyCreateItem ( ::Proud::HostID, ::Proud::RmiContext& ,  const int & ,  const int & ,  const int & ,  const Proud::Vector3 & ,  const Proud::Vector3 & )		{ 
			return false;
		} 

#define DECRMI_SpaceWar_NotifyCreateItem bool NotifyCreateItem ( ::Proud::HostID remote, ::Proud::RmiContext& rmiContext ,  const int & hostID,  const int & itemCID,  const int & itemID,  const Proud::Vector3 & pos,  const Proud::Vector3 & rot) PN_OVERRIDE

#define DEFRMI_SpaceWar_NotifyCreateItem(DerivedClass) bool DerivedClass::NotifyCreateItem ( ::Proud::HostID remote, ::Proud::RmiContext& rmiContext ,  const int & hostID,  const int & itemCID,  const int & itemID,  const Proud::Vector3 & pos,  const Proud::Vector3 & rot)
#define CALL_SpaceWar_NotifyCreateItem NotifyCreateItem ( ::Proud::HostID remote, ::Proud::RmiContext& rmiContext ,  const int & hostID,  const int & itemCID,  const int & itemID,  const Proud::Vector3 & pos,  const Proud::Vector3 & rot)
#define PARAM_SpaceWar_NotifyCreateItem ( ::Proud::HostID remote, ::Proud::RmiContext& rmiContext ,  const int & hostID,  const int & itemCID,  const int & itemID,  const Proud::Vector3 & pos,  const Proud::Vector3 & rot)
               
		virtual bool NotifyStartOxyChargerState ( ::Proud::HostID, ::Proud::RmiContext& ,  const int & ,  const float & )		{ 
			return false;
		} 

#define DECRMI_SpaceWar_NotifyStartOxyChargerState bool NotifyStartOxyChargerState ( ::Proud::HostID remote, ::Proud::RmiContext& rmiContext ,  const int & oxyChargerID,  const float & oxy) PN_OVERRIDE

#define DEFRMI_SpaceWar_NotifyStartOxyChargerState(DerivedClass) bool DerivedClass::NotifyStartOxyChargerState ( ::Proud::HostID remote, ::Proud::RmiContext& rmiContext ,  const int & oxyChargerID,  const float & oxy)
#define CALL_SpaceWar_NotifyStartOxyChargerState NotifyStartOxyChargerState ( ::Proud::HostID remote, ::Proud::RmiContext& rmiContext ,  const int & oxyChargerID,  const float & oxy)
#define PARAM_SpaceWar_NotifyStartOxyChargerState ( ::Proud::HostID remote, ::Proud::RmiContext& rmiContext ,  const int & oxyChargerID,  const float & oxy)
               
		virtual bool NotifyStartItemBoxState ( ::Proud::HostID, ::Proud::RmiContext& ,  const int & ,  const bool & )		{ 
			return false;
		} 

#define DECRMI_SpaceWar_NotifyStartItemBoxState bool NotifyStartItemBoxState ( ::Proud::HostID remote, ::Proud::RmiContext& rmiContext ,  const int & itemBoxID,  const bool & openState) PN_OVERRIDE

#define DEFRMI_SpaceWar_NotifyStartItemBoxState(DerivedClass) bool DerivedClass::NotifyStartItemBoxState ( ::Proud::HostID remote, ::Proud::RmiContext& rmiContext ,  const int & itemBoxID,  const bool & openState)
#define CALL_SpaceWar_NotifyStartItemBoxState NotifyStartItemBoxState ( ::Proud::HostID remote, ::Proud::RmiContext& rmiContext ,  const int & itemBoxID,  const bool & openState)
#define PARAM_SpaceWar_NotifyStartItemBoxState ( ::Proud::HostID remote, ::Proud::RmiContext& rmiContext ,  const int & itemBoxID,  const bool & openState)
               
		virtual bool NotifyPlayerEquipItem ( ::Proud::HostID, ::Proud::RmiContext& ,  const int & ,  const int & ,  const int & )		{ 
			return false;
		} 

#define DECRMI_SpaceWar_NotifyPlayerEquipItem bool NotifyPlayerEquipItem ( ::Proud::HostID remote, ::Proud::RmiContext& rmiContext ,  const int & hostID,  const int & itemCID,  const int & itemID) PN_OVERRIDE

#define DEFRMI_SpaceWar_NotifyPlayerEquipItem(DerivedClass) bool DerivedClass::NotifyPlayerEquipItem ( ::Proud::HostID remote, ::Proud::RmiContext& rmiContext ,  const int & hostID,  const int & itemCID,  const int & itemID)
#define CALL_SpaceWar_NotifyPlayerEquipItem NotifyPlayerEquipItem ( ::Proud::HostID remote, ::Proud::RmiContext& rmiContext ,  const int & hostID,  const int & itemCID,  const int & itemID)
#define PARAM_SpaceWar_NotifyPlayerEquipItem ( ::Proud::HostID remote, ::Proud::RmiContext& rmiContext ,  const int & hostID,  const int & itemCID,  const int & itemID)
               
		virtual bool NotifyPlayerUnEquipItem ( ::Proud::HostID, ::Proud::RmiContext& ,  const int & ,  const int & ,  const int & ,  const Proud::Vector3 & ,  const Proud::Vector3 & )		{ 
			return false;
		} 

#define DECRMI_SpaceWar_NotifyPlayerUnEquipItem bool NotifyPlayerUnEquipItem ( ::Proud::HostID remote, ::Proud::RmiContext& rmiContext ,  const int & hostID,  const int & itemCID,  const int & itemID,  const Proud::Vector3 & pos,  const Proud::Vector3 & rot) PN_OVERRIDE

#define DEFRMI_SpaceWar_NotifyPlayerUnEquipItem(DerivedClass) bool DerivedClass::NotifyPlayerUnEquipItem ( ::Proud::HostID remote, ::Proud::RmiContext& rmiContext ,  const int & hostID,  const int & itemCID,  const int & itemID,  const Proud::Vector3 & pos,  const Proud::Vector3 & rot)
#define CALL_SpaceWar_NotifyPlayerUnEquipItem NotifyPlayerUnEquipItem ( ::Proud::HostID remote, ::Proud::RmiContext& rmiContext ,  const int & hostID,  const int & itemCID,  const int & itemID,  const Proud::Vector3 & pos,  const Proud::Vector3 & rot)
#define PARAM_SpaceWar_NotifyPlayerUnEquipItem ( ::Proud::HostID remote, ::Proud::RmiContext& rmiContext ,  const int & hostID,  const int & itemCID,  const int & itemID,  const Proud::Vector3 & pos,  const Proud::Vector3 & rot)
               
		virtual bool NotifyPlayerBulletCreate ( ::Proud::HostID, ::Proud::RmiContext& ,  const int & ,  const string & ,  const string & ,  const Proud::Vector3 & ,  const Proud::Vector3 & )		{ 
			return false;
		} 

#define DECRMI_SpaceWar_NotifyPlayerBulletCreate bool NotifyPlayerBulletCreate ( ::Proud::HostID remote, ::Proud::RmiContext& rmiContext ,  const int & sendHostID,  const string & bulletType,  const string & bulletID,  const Proud::Vector3 & pos,  const Proud::Vector3 & rot) PN_OVERRIDE

#define DEFRMI_SpaceWar_NotifyPlayerBulletCreate(DerivedClass) bool DerivedClass::NotifyPlayerBulletCreate ( ::Proud::HostID remote, ::Proud::RmiContext& rmiContext ,  const int & sendHostID,  const string & bulletType,  const string & bulletID,  const Proud::Vector3 & pos,  const Proud::Vector3 & rot)
#define CALL_SpaceWar_NotifyPlayerBulletCreate NotifyPlayerBulletCreate ( ::Proud::HostID remote, ::Proud::RmiContext& rmiContext ,  const int & sendHostID,  const string & bulletType,  const string & bulletID,  const Proud::Vector3 & pos,  const Proud::Vector3 & rot)
#define PARAM_SpaceWar_NotifyPlayerBulletCreate ( ::Proud::HostID remote, ::Proud::RmiContext& rmiContext ,  const int & sendHostID,  const string & bulletType,  const string & bulletID,  const Proud::Vector3 & pos,  const Proud::Vector3 & rot)
               
		virtual bool NotifyPlayerBulletMove ( ::Proud::HostID, ::Proud::RmiContext& ,  const int & ,  const string & ,  const Proud::Vector3 & ,  const Proud::Vector3 & ,  const Proud::Vector3 & )		{ 
			return false;
		} 

#define DECRMI_SpaceWar_NotifyPlayerBulletMove bool NotifyPlayerBulletMove ( ::Proud::HostID remote, ::Proud::RmiContext& rmiContext ,  const int & sendHostID,  const string & bulletID,  const Proud::Vector3 & pos,  const Proud::Vector3 & velocity,  const Proud::Vector3 & rot) PN_OVERRIDE

#define DEFRMI_SpaceWar_NotifyPlayerBulletMove(DerivedClass) bool DerivedClass::NotifyPlayerBulletMove ( ::Proud::HostID remote, ::Proud::RmiContext& rmiContext ,  const int & sendHostID,  const string & bulletID,  const Proud::Vector3 & pos,  const Proud::Vector3 & velocity,  const Proud::Vector3 & rot)
#define CALL_SpaceWar_NotifyPlayerBulletMove NotifyPlayerBulletMove ( ::Proud::HostID remote, ::Proud::RmiContext& rmiContext ,  const int & sendHostID,  const string & bulletID,  const Proud::Vector3 & pos,  const Proud::Vector3 & velocity,  const Proud::Vector3 & rot)
#define PARAM_SpaceWar_NotifyPlayerBulletMove ( ::Proud::HostID remote, ::Proud::RmiContext& rmiContext ,  const int & sendHostID,  const string & bulletID,  const Proud::Vector3 & pos,  const Proud::Vector3 & velocity,  const Proud::Vector3 & rot)
               
		virtual bool NotifyPlayerBulletDelete ( ::Proud::HostID, ::Proud::RmiContext& ,  const int & ,  const string & )		{ 
			return false;
		} 

#define DECRMI_SpaceWar_NotifyPlayerBulletDelete bool NotifyPlayerBulletDelete ( ::Proud::HostID remote, ::Proud::RmiContext& rmiContext ,  const int & sendHostID,  const string & bulletID) PN_OVERRIDE

#define DEFRMI_SpaceWar_NotifyPlayerBulletDelete(DerivedClass) bool DerivedClass::NotifyPlayerBulletDelete ( ::Proud::HostID remote, ::Proud::RmiContext& rmiContext ,  const int & sendHostID,  const string & bulletID)
#define CALL_SpaceWar_NotifyPlayerBulletDelete NotifyPlayerBulletDelete ( ::Proud::HostID remote, ::Proud::RmiContext& rmiContext ,  const int & sendHostID,  const string & bulletID)
#define PARAM_SpaceWar_NotifyPlayerBulletDelete ( ::Proud::HostID remote, ::Proud::RmiContext& rmiContext ,  const int & sendHostID,  const string & bulletID)
               
		virtual bool NotifyPlayerAnimation ( ::Proud::HostID, ::Proud::RmiContext& ,  const int & ,  const string & ,  const string & ,  const int & )		{ 
			return false;
		} 

#define DECRMI_SpaceWar_NotifyPlayerAnimation bool NotifyPlayerAnimation ( ::Proud::HostID remote, ::Proud::RmiContext& rmiContext ,  const int & hostID,  const string & name,  const string & animationName,  const int & aniValue) PN_OVERRIDE

#define DEFRMI_SpaceWar_NotifyPlayerAnimation(DerivedClass) bool DerivedClass::NotifyPlayerAnimation ( ::Proud::HostID remote, ::Proud::RmiContext& rmiContext ,  const int & hostID,  const string & name,  const string & animationName,  const int & aniValue)
#define CALL_SpaceWar_NotifyPlayerAnimation NotifyPlayerAnimation ( ::Proud::HostID remote, ::Proud::RmiContext& rmiContext ,  const int & hostID,  const string & name,  const string & animationName,  const int & aniValue)
#define PARAM_SpaceWar_NotifyPlayerAnimation ( ::Proud::HostID remote, ::Proud::RmiContext& rmiContext ,  const int & hostID,  const string & name,  const string & animationName,  const int & aniValue)
               
		virtual bool NotifyPlayerChangeHP ( ::Proud::HostID, ::Proud::RmiContext& ,  const int & ,  const string & ,  const float & ,  const float & ,  const float & )		{ 
			return false;
		} 

#define DECRMI_SpaceWar_NotifyPlayerChangeHP bool NotifyPlayerChangeHP ( ::Proud::HostID remote, ::Proud::RmiContext& rmiContext ,  const int & sendHostID,  const string & name,  const float & hp,  const float & prevhp,  const float & maxhp) PN_OVERRIDE

#define DEFRMI_SpaceWar_NotifyPlayerChangeHP(DerivedClass) bool DerivedClass::NotifyPlayerChangeHP ( ::Proud::HostID remote, ::Proud::RmiContext& rmiContext ,  const int & sendHostID,  const string & name,  const float & hp,  const float & prevhp,  const float & maxhp)
#define CALL_SpaceWar_NotifyPlayerChangeHP NotifyPlayerChangeHP ( ::Proud::HostID remote, ::Proud::RmiContext& rmiContext ,  const int & sendHostID,  const string & name,  const float & hp,  const float & prevhp,  const float & maxhp)
#define PARAM_SpaceWar_NotifyPlayerChangeHP ( ::Proud::HostID remote, ::Proud::RmiContext& rmiContext ,  const int & sendHostID,  const string & name,  const float & hp,  const float & prevhp,  const float & maxhp)
               
		virtual bool NotifyPlayerChangeOxygen ( ::Proud::HostID, ::Proud::RmiContext& ,  const int & ,  const string & ,  const float & ,  const float & ,  const float & )		{ 
			return false;
		} 

#define DECRMI_SpaceWar_NotifyPlayerChangeOxygen bool NotifyPlayerChangeOxygen ( ::Proud::HostID remote, ::Proud::RmiContext& rmiContext ,  const int & sendHostID,  const string & name,  const float & oxygen,  const float & prevoxy,  const float & maxoxy) PN_OVERRIDE

#define DEFRMI_SpaceWar_NotifyPlayerChangeOxygen(DerivedClass) bool DerivedClass::NotifyPlayerChangeOxygen ( ::Proud::HostID remote, ::Proud::RmiContext& rmiContext ,  const int & sendHostID,  const string & name,  const float & oxygen,  const float & prevoxy,  const float & maxoxy)
#define CALL_SpaceWar_NotifyPlayerChangeOxygen NotifyPlayerChangeOxygen ( ::Proud::HostID remote, ::Proud::RmiContext& rmiContext ,  const int & sendHostID,  const string & name,  const float & oxygen,  const float & prevoxy,  const float & maxoxy)
#define PARAM_SpaceWar_NotifyPlayerChangeOxygen ( ::Proud::HostID remote, ::Proud::RmiContext& rmiContext ,  const int & sendHostID,  const string & name,  const float & oxygen,  const float & prevoxy,  const float & maxoxy)
               
		virtual bool NotifyUseOxyCharger ( ::Proud::HostID, ::Proud::RmiContext& ,  const int & ,  const int & ,  const float & )		{ 
			return false;
		} 

#define DECRMI_SpaceWar_NotifyUseOxyCharger bool NotifyUseOxyCharger ( ::Proud::HostID remote, ::Proud::RmiContext& rmiContext ,  const int & sendHostID,  const int & oxyChargerIndex,  const float & userOxy) PN_OVERRIDE

#define DEFRMI_SpaceWar_NotifyUseOxyCharger(DerivedClass) bool DerivedClass::NotifyUseOxyCharger ( ::Proud::HostID remote, ::Proud::RmiContext& rmiContext ,  const int & sendHostID,  const int & oxyChargerIndex,  const float & userOxy)
#define CALL_SpaceWar_NotifyUseOxyCharger NotifyUseOxyCharger ( ::Proud::HostID remote, ::Proud::RmiContext& rmiContext ,  const int & sendHostID,  const int & oxyChargerIndex,  const float & userOxy)
#define PARAM_SpaceWar_NotifyUseOxyCharger ( ::Proud::HostID remote, ::Proud::RmiContext& rmiContext ,  const int & sendHostID,  const int & oxyChargerIndex,  const float & userOxy)
               
		virtual bool NotifyUseItemBox ( ::Proud::HostID, ::Proud::RmiContext& ,  const int & ,  const int & ,  const int & )		{ 
			return false;
		} 

#define DECRMI_SpaceWar_NotifyUseItemBox bool NotifyUseItemBox ( ::Proud::HostID remote, ::Proud::RmiContext& rmiContext ,  const int & sendHostID,  const int & itemBoxIndex,  const int & itemID) PN_OVERRIDE

#define DEFRMI_SpaceWar_NotifyUseItemBox(DerivedClass) bool DerivedClass::NotifyUseItemBox ( ::Proud::HostID remote, ::Proud::RmiContext& rmiContext ,  const int & sendHostID,  const int & itemBoxIndex,  const int & itemID)
#define CALL_SpaceWar_NotifyUseItemBox NotifyUseItemBox ( ::Proud::HostID remote, ::Proud::RmiContext& rmiContext ,  const int & sendHostID,  const int & itemBoxIndex,  const int & itemID)
#define PARAM_SpaceWar_NotifyUseItemBox ( ::Proud::HostID remote, ::Proud::RmiContext& rmiContext ,  const int & sendHostID,  const int & itemBoxIndex,  const int & itemID)
               
		virtual bool NotifyShelterInfo ( ::Proud::HostID, ::Proud::RmiContext& ,  const int & ,  const int & ,  const bool & ,  const bool & )		{ 
			return false;
		} 

#define DECRMI_SpaceWar_NotifyShelterInfo bool NotifyShelterInfo ( ::Proud::HostID remote, ::Proud::RmiContext& rmiContext ,  const int & sendHostID,  const int & shelterID,  const bool & doorState,  const bool & lightState) PN_OVERRIDE

#define DEFRMI_SpaceWar_NotifyShelterInfo(DerivedClass) bool DerivedClass::NotifyShelterInfo ( ::Proud::HostID remote, ::Proud::RmiContext& rmiContext ,  const int & sendHostID,  const int & shelterID,  const bool & doorState,  const bool & lightState)
#define CALL_SpaceWar_NotifyShelterInfo NotifyShelterInfo ( ::Proud::HostID remote, ::Proud::RmiContext& rmiContext ,  const int & sendHostID,  const int & shelterID,  const bool & doorState,  const bool & lightState)
#define PARAM_SpaceWar_NotifyShelterInfo ( ::Proud::HostID remote, ::Proud::RmiContext& rmiContext ,  const int & sendHostID,  const int & shelterID,  const bool & doorState,  const bool & lightState)
               
		virtual bool NotifyMeteorCreateTime ( ::Proud::HostID, ::Proud::RmiContext& ,  const int & )		{ 
			return false;
		} 

#define DECRMI_SpaceWar_NotifyMeteorCreateTime bool NotifyMeteorCreateTime ( ::Proud::HostID remote, ::Proud::RmiContext& rmiContext ,  const int & time) PN_OVERRIDE

#define DEFRMI_SpaceWar_NotifyMeteorCreateTime(DerivedClass) bool DerivedClass::NotifyMeteorCreateTime ( ::Proud::HostID remote, ::Proud::RmiContext& rmiContext ,  const int & time)
#define CALL_SpaceWar_NotifyMeteorCreateTime NotifyMeteorCreateTime ( ::Proud::HostID remote, ::Proud::RmiContext& rmiContext ,  const int & time)
#define PARAM_SpaceWar_NotifyMeteorCreateTime ( ::Proud::HostID remote, ::Proud::RmiContext& rmiContext ,  const int & time)
               
		virtual bool NotifyMeteorCreate ( ::Proud::HostID, ::Proud::RmiContext& ,  const float & ,  const float & )		{ 
			return false;
		} 

#define DECRMI_SpaceWar_NotifyMeteorCreate bool NotifyMeteorCreate ( ::Proud::HostID remote, ::Proud::RmiContext& rmiContext ,  const float & anglex,  const float & anglez) PN_OVERRIDE

#define DEFRMI_SpaceWar_NotifyMeteorCreate(DerivedClass) bool DerivedClass::NotifyMeteorCreate ( ::Proud::HostID remote, ::Proud::RmiContext& rmiContext ,  const float & anglex,  const float & anglez)
#define CALL_SpaceWar_NotifyMeteorCreate NotifyMeteorCreate ( ::Proud::HostID remote, ::Proud::RmiContext& rmiContext ,  const float & anglex,  const float & anglez)
#define PARAM_SpaceWar_NotifyMeteorCreate ( ::Proud::HostID remote, ::Proud::RmiContext& rmiContext ,  const float & anglex,  const float & anglez)
               
		virtual bool NotifySpaceShipEngineCharge ( ::Proud::HostID, ::Proud::RmiContext& ,  const int & ,  const float & )		{ 
			return false;
		} 

#define DECRMI_SpaceWar_NotifySpaceShipEngineCharge bool NotifySpaceShipEngineCharge ( ::Proud::HostID remote, ::Proud::RmiContext& rmiContext ,  const int & spaceShipID,  const float & fuel) PN_OVERRIDE

#define DEFRMI_SpaceWar_NotifySpaceShipEngineCharge(DerivedClass) bool DerivedClass::NotifySpaceShipEngineCharge ( ::Proud::HostID remote, ::Proud::RmiContext& rmiContext ,  const int & spaceShipID,  const float & fuel)
#define CALL_SpaceWar_NotifySpaceShipEngineCharge NotifySpaceShipEngineCharge ( ::Proud::HostID remote, ::Proud::RmiContext& rmiContext ,  const int & spaceShipID,  const float & fuel)
#define PARAM_SpaceWar_NotifySpaceShipEngineCharge ( ::Proud::HostID remote, ::Proud::RmiContext& rmiContext ,  const int & spaceShipID,  const float & fuel)
               
		virtual bool RequestSpaceShip ( ::Proud::HostID, ::Proud::RmiContext& ,  const int & )		{ 
			return false;
		} 

#define DECRMI_SpaceWar_RequestSpaceShip bool RequestSpaceShip ( ::Proud::HostID remote, ::Proud::RmiContext& rmiContext ,  const int & winPlayerID) PN_OVERRIDE

#define DEFRMI_SpaceWar_RequestSpaceShip(DerivedClass) bool DerivedClass::RequestSpaceShip ( ::Proud::HostID remote, ::Proud::RmiContext& rmiContext ,  const int & winPlayerID)
#define CALL_SpaceWar_RequestSpaceShip RequestSpaceShip ( ::Proud::HostID remote, ::Proud::RmiContext& rmiContext ,  const int & winPlayerID)
#define PARAM_SpaceWar_RequestSpaceShip ( ::Proud::HostID remote, ::Proud::RmiContext& rmiContext ,  const int & winPlayerID)
               
		virtual bool RequestGameEnd ( ::Proud::HostID, ::Proud::RmiContext& )		{ 
			return false;
		} 

#define DECRMI_SpaceWar_RequestGameEnd bool RequestGameEnd ( ::Proud::HostID remote, ::Proud::RmiContext& rmiContext ) PN_OVERRIDE

#define DEFRMI_SpaceWar_RequestGameEnd(DerivedClass) bool DerivedClass::RequestGameEnd ( ::Proud::HostID remote, ::Proud::RmiContext& rmiContext )
#define CALL_SpaceWar_RequestGameEnd RequestGameEnd ( ::Proud::HostID remote, ::Proud::RmiContext& rmiContext )
#define PARAM_SpaceWar_RequestGameEnd ( ::Proud::HostID remote, ::Proud::RmiContext& rmiContext )
               
		virtual bool NotifyKillInfo ( ::Proud::HostID, ::Proud::RmiContext& ,  const string & ,  const bool & ,  const int & ,  const int & )		{ 
			return false;
		} 

#define DECRMI_SpaceWar_NotifyKillInfo bool NotifyKillInfo ( ::Proud::HostID remote, ::Proud::RmiContext& rmiContext ,  const string & targetName,  const bool & kill,  const int & totalKill,  const int & totalAssist) PN_OVERRIDE

#define DEFRMI_SpaceWar_NotifyKillInfo(DerivedClass) bool DerivedClass::NotifyKillInfo ( ::Proud::HostID remote, ::Proud::RmiContext& rmiContext ,  const string & targetName,  const bool & kill,  const int & totalKill,  const int & totalAssist)
#define CALL_SpaceWar_NotifyKillInfo NotifyKillInfo ( ::Proud::HostID remote, ::Proud::RmiContext& rmiContext ,  const string & targetName,  const bool & kill,  const int & totalKill,  const int & totalAssist)
#define PARAM_SpaceWar_NotifyKillInfo ( ::Proud::HostID remote, ::Proud::RmiContext& rmiContext ,  const string & targetName,  const bool & kill,  const int & totalKill,  const int & totalAssist)
               
		virtual bool NotifyGameResultInfoMe ( ::Proud::HostID, ::Proud::RmiContext& ,  const string & ,  const int & ,  const int & ,  const int & ,  const int & ,  const int & ,  const int & )		{ 
			return false;
		} 

#define DECRMI_SpaceWar_NotifyGameResultInfoMe bool NotifyGameResultInfoMe ( ::Proud::HostID remote, ::Proud::RmiContext& rmiContext ,  const string & gameMode,  const int & winState,  const int & playTime,  const int & kills,  const int & assists,  const int & death,  const int & getMoney) PN_OVERRIDE

#define DEFRMI_SpaceWar_NotifyGameResultInfoMe(DerivedClass) bool DerivedClass::NotifyGameResultInfoMe ( ::Proud::HostID remote, ::Proud::RmiContext& rmiContext ,  const string & gameMode,  const int & winState,  const int & playTime,  const int & kills,  const int & assists,  const int & death,  const int & getMoney)
#define CALL_SpaceWar_NotifyGameResultInfoMe NotifyGameResultInfoMe ( ::Proud::HostID remote, ::Proud::RmiContext& rmiContext ,  const string & gameMode,  const int & winState,  const int & playTime,  const int & kills,  const int & assists,  const int & death,  const int & getMoney)
#define PARAM_SpaceWar_NotifyGameResultInfoMe ( ::Proud::HostID remote, ::Proud::RmiContext& rmiContext ,  const string & gameMode,  const int & winState,  const int & playTime,  const int & kills,  const int & assists,  const int & death,  const int & getMoney)
               
		virtual bool NotifyGameResultInfoOther ( ::Proud::HostID, ::Proud::RmiContext& ,  const string & ,  const int & )		{ 
			return false;
		} 

#define DECRMI_SpaceWar_NotifyGameResultInfoOther bool NotifyGameResultInfoOther ( ::Proud::HostID remote, ::Proud::RmiContext& rmiContext ,  const string & name,  const int & state) PN_OVERRIDE

#define DEFRMI_SpaceWar_NotifyGameResultInfoOther(DerivedClass) bool DerivedClass::NotifyGameResultInfoOther ( ::Proud::HostID remote, ::Proud::RmiContext& rmiContext ,  const string & name,  const int & state)
#define CALL_SpaceWar_NotifyGameResultInfoOther NotifyGameResultInfoOther ( ::Proud::HostID remote, ::Proud::RmiContext& rmiContext ,  const string & name,  const int & state)
#define PARAM_SpaceWar_NotifyGameResultInfoOther ( ::Proud::HostID remote, ::Proud::RmiContext& rmiContext ,  const string & name,  const int & state)
               
		virtual bool NotifyGameResultShow ( ::Proud::HostID, ::Proud::RmiContext& )		{ 
			return false;
		} 

#define DECRMI_SpaceWar_NotifyGameResultShow bool NotifyGameResultShow ( ::Proud::HostID remote, ::Proud::RmiContext& rmiContext ) PN_OVERRIDE

#define DEFRMI_SpaceWar_NotifyGameResultShow(DerivedClass) bool DerivedClass::NotifyGameResultShow ( ::Proud::HostID remote, ::Proud::RmiContext& rmiContext )
#define CALL_SpaceWar_NotifyGameResultShow NotifyGameResultShow ( ::Proud::HostID remote, ::Proud::RmiContext& rmiContext )
#define PARAM_SpaceWar_NotifyGameResultShow ( ::Proud::HostID remote, ::Proud::RmiContext& rmiContext )
 
		virtual bool ProcessReceivedMessage(::Proud::CReceivedMessage &pa, void* hostTag) PN_OVERRIDE;
		static const PNTCHAR* RmiName_RequestServerConnect;
		static const PNTCHAR* RmiName_RequestLobbyConnect;
		static const PNTCHAR* RmiName_RequestNetworkGameTeamSelect;
		static const PNTCHAR* RmiName_RequestNetworkGameReady;
		static const PNTCHAR* RmiName_RequestNetworkChangeMap;
		static const PNTCHAR* RmiName_RequestNetworkPlayerCount;
		static const PNTCHAR* RmiName_RequestNetworkGameModeChange;
		static const PNTCHAR* RmiName_RequestNetworkGameStart;
		static const PNTCHAR* RmiName_RequestNetworkHostOut;
		static const PNTCHAR* RmiName_RequestGameSceneJoin;
		static const PNTCHAR* RmiName_NotifyNetworkUserSetup;
		static const PNTCHAR* RmiName_NotifyNetworkGameTeamChange;
		static const PNTCHAR* RmiName_NotifyNetworkConnectUser;
		static const PNTCHAR* RmiName_NotifyNetworkReady;
		static const PNTCHAR* RmiName_NotifyNetworkGameModeChange;
		static const PNTCHAR* RmiName_NotifyNetworkGamePlayerCountChange;
		static const PNTCHAR* RmiName_NotifyNetworkGameChangeMap;
		static const PNTCHAR* RmiName_NotifyNetworkGameStart;
		static const PNTCHAR* RmiName_NotifyNetworkGameStartFailed;
		static const PNTCHAR* RmiName_NotifyNetworkGameHostOut;
		static const PNTCHAR* RmiName_RequestClientJoin;
		static const PNTCHAR* RmiName_RequestWorldCreateItem;
		static const PNTCHAR* RmiName_RequestPlayerDamage;
		static const PNTCHAR* RmiName_RequestPlayerUseOxy;
		static const PNTCHAR* RmiName_RequestUseOxyCharger;
		static const PNTCHAR* RmiName_RequestUseItemBox;
		static const PNTCHAR* RmiName_RequestShelterStartSetup;
		static const PNTCHAR* RmiName_RequestShelterDoorControl;
		static const PNTCHAR* RmiName_RequestShelterEnter;
		static const PNTCHAR* RmiName_NotifyLoginSuccess;
		static const PNTCHAR* RmiName_NotifyLoginFailed;
		static const PNTCHAR* RmiName_NotifyOtherClientJoin;
		static const PNTCHAR* RmiName_NotifyPlayerLost;
		static const PNTCHAR* RmiName_NotifyPlayerMove;
		static const PNTCHAR* RmiName_NotifyDeleteItem;
		static const PNTCHAR* RmiName_NotifyCreateItem;
		static const PNTCHAR* RmiName_NotifyStartOxyChargerState;
		static const PNTCHAR* RmiName_NotifyStartItemBoxState;
		static const PNTCHAR* RmiName_NotifyPlayerEquipItem;
		static const PNTCHAR* RmiName_NotifyPlayerUnEquipItem;
		static const PNTCHAR* RmiName_NotifyPlayerBulletCreate;
		static const PNTCHAR* RmiName_NotifyPlayerBulletMove;
		static const PNTCHAR* RmiName_NotifyPlayerBulletDelete;
		static const PNTCHAR* RmiName_NotifyPlayerAnimation;
		static const PNTCHAR* RmiName_NotifyPlayerChangeHP;
		static const PNTCHAR* RmiName_NotifyPlayerChangeOxygen;
		static const PNTCHAR* RmiName_NotifyUseOxyCharger;
		static const PNTCHAR* RmiName_NotifyUseItemBox;
		static const PNTCHAR* RmiName_NotifyShelterInfo;
		static const PNTCHAR* RmiName_NotifyMeteorCreateTime;
		static const PNTCHAR* RmiName_NotifyMeteorCreate;
		static const PNTCHAR* RmiName_NotifySpaceShipEngineCharge;
		static const PNTCHAR* RmiName_RequestSpaceShip;
		static const PNTCHAR* RmiName_RequestGameEnd;
		static const PNTCHAR* RmiName_NotifyKillInfo;
		static const PNTCHAR* RmiName_NotifyGameResultInfoMe;
		static const PNTCHAR* RmiName_NotifyGameResultInfoOther;
		static const PNTCHAR* RmiName_NotifyGameResultShow;
		static const PNTCHAR* RmiName_First;
		virtual ::Proud::RmiID* GetRmiIDList() PN_OVERRIDE { return g_RmiIDList; }
		virtual int GetRmiIDListCount() PN_OVERRIDE { return g_RmiIDListCount; }
	};

#ifdef SUPPORTS_CPP11 
	
	class StubFunctional : public Stub 
	{
	public:
               
		std::function< bool ( ::Proud::HostID, ::Proud::RmiContext& ,  const string & ) > RequestServerConnect_Function;
		virtual bool RequestServerConnect ( ::Proud::HostID remote, ::Proud::RmiContext& rmiContext ,  const string & id) 
		{ 
			if (RequestServerConnect_Function==nullptr) 
				return true; 
			return RequestServerConnect_Function(remote,rmiContext, id); 
		}

               
		std::function< bool ( ::Proud::HostID, ::Proud::RmiContext& ) > RequestLobbyConnect_Function;
		virtual bool RequestLobbyConnect ( ::Proud::HostID remote, ::Proud::RmiContext& rmiContext ) 
		{ 
			if (RequestLobbyConnect_Function==nullptr) 
				return true; 
			return RequestLobbyConnect_Function(remote,rmiContext); 
		}

               
		std::function< bool ( ::Proud::HostID, ::Proud::RmiContext& ,  const string & ,  const bool & ) > RequestNetworkGameTeamSelect_Function;
		virtual bool RequestNetworkGameTeamSelect ( ::Proud::HostID remote, ::Proud::RmiContext& rmiContext ,  const string & name,  const bool & teamRed) 
		{ 
			if (RequestNetworkGameTeamSelect_Function==nullptr) 
				return true; 
			return RequestNetworkGameTeamSelect_Function(remote,rmiContext, name, teamRed); 
		}

               
		std::function< bool ( ::Proud::HostID, ::Proud::RmiContext& ,  const string & ,  const bool & ) > RequestNetworkGameReady_Function;
		virtual bool RequestNetworkGameReady ( ::Proud::HostID remote, ::Proud::RmiContext& rmiContext ,  const string & name,  const bool & ready) 
		{ 
			if (RequestNetworkGameReady_Function==nullptr) 
				return true; 
			return RequestNetworkGameReady_Function(remote,rmiContext, name, ready); 
		}

               
		std::function< bool ( ::Proud::HostID, ::Proud::RmiContext& ,  const string & ) > RequestNetworkChangeMap_Function;
		virtual bool RequestNetworkChangeMap ( ::Proud::HostID remote, ::Proud::RmiContext& rmiContext ,  const string & mapName) 
		{ 
			if (RequestNetworkChangeMap_Function==nullptr) 
				return true; 
			return RequestNetworkChangeMap_Function(remote,rmiContext, mapName); 
		}

               
		std::function< bool ( ::Proud::HostID, ::Proud::RmiContext& ,  const int & ) > RequestNetworkPlayerCount_Function;
		virtual bool RequestNetworkPlayerCount ( ::Proud::HostID remote, ::Proud::RmiContext& rmiContext ,  const int & playerCount) 
		{ 
			if (RequestNetworkPlayerCount_Function==nullptr) 
				return true; 
			return RequestNetworkPlayerCount_Function(remote,rmiContext, playerCount); 
		}

               
		std::function< bool ( ::Proud::HostID, ::Proud::RmiContext& ,  const int & ,  const bool & ) > RequestNetworkGameModeChange_Function;
		virtual bool RequestNetworkGameModeChange ( ::Proud::HostID remote, ::Proud::RmiContext& rmiContext ,  const int & gameMode,  const bool & teamMode) 
		{ 
			if (RequestNetworkGameModeChange_Function==nullptr) 
				return true; 
			return RequestNetworkGameModeChange_Function(remote,rmiContext, gameMode, teamMode); 
		}

               
		std::function< bool ( ::Proud::HostID, ::Proud::RmiContext& ) > RequestNetworkGameStart_Function;
		virtual bool RequestNetworkGameStart ( ::Proud::HostID remote, ::Proud::RmiContext& rmiContext ) 
		{ 
			if (RequestNetworkGameStart_Function==nullptr) 
				return true; 
			return RequestNetworkGameStart_Function(remote,rmiContext); 
		}

               
		std::function< bool ( ::Proud::HostID, ::Proud::RmiContext& ,  const int & ) > RequestNetworkHostOut_Function;
		virtual bool RequestNetworkHostOut ( ::Proud::HostID remote, ::Proud::RmiContext& rmiContext ,  const int & hostID) 
		{ 
			if (RequestNetworkHostOut_Function==nullptr) 
				return true; 
			return RequestNetworkHostOut_Function(remote,rmiContext, hostID); 
		}

               
		std::function< bool ( ::Proud::HostID, ::Proud::RmiContext& ,  const Proud::Vector3 & ,  const int & ,  const string & ) > RequestGameSceneJoin_Function;
		virtual bool RequestGameSceneJoin ( ::Proud::HostID remote, ::Proud::RmiContext& rmiContext ,  const Proud::Vector3 & pos,  const int & hostID,  const string & name) 
		{ 
			if (RequestGameSceneJoin_Function==nullptr) 
				return true; 
			return RequestGameSceneJoin_Function(remote,rmiContext, pos, hostID, name); 
		}

               
		std::function< bool ( ::Proud::HostID, ::Proud::RmiContext& ,  const int & ,  const string & ,  const bool & ,  const bool & ) > NotifyNetworkUserSetup_Function;
		virtual bool NotifyNetworkUserSetup ( ::Proud::HostID remote, ::Proud::RmiContext& rmiContext ,  const int & userHostID,  const string & userName,  const bool & ready,  const bool & teamRed) 
		{ 
			if (NotifyNetworkUserSetup_Function==nullptr) 
				return true; 
			return NotifyNetworkUserSetup_Function(remote,rmiContext, userHostID, userName, ready, teamRed); 
		}

               
		std::function< bool ( ::Proud::HostID, ::Proud::RmiContext& ,  const int & ,  const bool & ) > NotifyNetworkGameTeamChange_Function;
		virtual bool NotifyNetworkGameTeamChange ( ::Proud::HostID remote, ::Proud::RmiContext& rmiContext ,  const int & userHostID,  const bool & teamRed) 
		{ 
			if (NotifyNetworkGameTeamChange_Function==nullptr) 
				return true; 
			return NotifyNetworkGameTeamChange_Function(remote,rmiContext, userHostID, teamRed); 
		}

               
		std::function< bool ( ::Proud::HostID, ::Proud::RmiContext& ,  const int & ,  const string & ) > NotifyNetworkConnectUser_Function;
		virtual bool NotifyNetworkConnectUser ( ::Proud::HostID remote, ::Proud::RmiContext& rmiContext ,  const int & userHostID,  const string & userName) 
		{ 
			if (NotifyNetworkConnectUser_Function==nullptr) 
				return true; 
			return NotifyNetworkConnectUser_Function(remote,rmiContext, userHostID, userName); 
		}

               
		std::function< bool ( ::Proud::HostID, ::Proud::RmiContext& ,  const int & ,  const string & ,  const bool & ) > NotifyNetworkReady_Function;
		virtual bool NotifyNetworkReady ( ::Proud::HostID remote, ::Proud::RmiContext& rmiContext ,  const int & hostID,  const string & userName,  const bool & ready) 
		{ 
			if (NotifyNetworkReady_Function==nullptr) 
				return true; 
			return NotifyNetworkReady_Function(remote,rmiContext, hostID, userName, ready); 
		}

               
		std::function< bool ( ::Proud::HostID, ::Proud::RmiContext& ,  const int & ,  const bool & ) > NotifyNetworkGameModeChange_Function;
		virtual bool NotifyNetworkGameModeChange ( ::Proud::HostID remote, ::Proud::RmiContext& rmiContext ,  const int & gameMode,  const bool & teamMode) 
		{ 
			if (NotifyNetworkGameModeChange_Function==nullptr) 
				return true; 
			return NotifyNetworkGameModeChange_Function(remote,rmiContext, gameMode, teamMode); 
		}

               
		std::function< bool ( ::Proud::HostID, ::Proud::RmiContext& ,  const int & ) > NotifyNetworkGamePlayerCountChange_Function;
		virtual bool NotifyNetworkGamePlayerCountChange ( ::Proud::HostID remote, ::Proud::RmiContext& rmiContext ,  const int & playerCount) 
		{ 
			if (NotifyNetworkGamePlayerCountChange_Function==nullptr) 
				return true; 
			return NotifyNetworkGamePlayerCountChange_Function(remote,rmiContext, playerCount); 
		}

               
		std::function< bool ( ::Proud::HostID, ::Proud::RmiContext& ,  const string & ) > NotifyNetworkGameChangeMap_Function;
		virtual bool NotifyNetworkGameChangeMap ( ::Proud::HostID remote, ::Proud::RmiContext& rmiContext ,  const string & map) 
		{ 
			if (NotifyNetworkGameChangeMap_Function==nullptr) 
				return true; 
			return NotifyNetworkGameChangeMap_Function(remote,rmiContext, map); 
		}

               
		std::function< bool ( ::Proud::HostID, ::Proud::RmiContext& ) > NotifyNetworkGameStart_Function;
		virtual bool NotifyNetworkGameStart ( ::Proud::HostID remote, ::Proud::RmiContext& rmiContext ) 
		{ 
			if (NotifyNetworkGameStart_Function==nullptr) 
				return true; 
			return NotifyNetworkGameStart_Function(remote,rmiContext); 
		}

               
		std::function< bool ( ::Proud::HostID, ::Proud::RmiContext& ) > NotifyNetworkGameStartFailed_Function;
		virtual bool NotifyNetworkGameStartFailed ( ::Proud::HostID remote, ::Proud::RmiContext& rmiContext ) 
		{ 
			if (NotifyNetworkGameStartFailed_Function==nullptr) 
				return true; 
			return NotifyNetworkGameStartFailed_Function(remote,rmiContext); 
		}

               
		std::function< bool ( ::Proud::HostID, ::Proud::RmiContext& ) > NotifyNetworkGameHostOut_Function;
		virtual bool NotifyNetworkGameHostOut ( ::Proud::HostID remote, ::Proud::RmiContext& rmiContext ) 
		{ 
			if (NotifyNetworkGameHostOut_Function==nullptr) 
				return true; 
			return NotifyNetworkGameHostOut_Function(remote,rmiContext); 
		}

               
		std::function< bool ( ::Proud::HostID, ::Proud::RmiContext& ,  const int & ,  const string & ,  const float & ,  const float & ,  const float & ) > RequestClientJoin_Function;
		virtual bool RequestClientJoin ( ::Proud::HostID remote, ::Proud::RmiContext& rmiContext ,  const int & hostID,  const string & name,  const float & x,  const float & y,  const float & z) 
		{ 
			if (RequestClientJoin_Function==nullptr) 
				return true; 
			return RequestClientJoin_Function(remote,rmiContext, hostID, name, x, y, z); 
		}

               
		std::function< bool ( ::Proud::HostID, ::Proud::RmiContext& ,  const int & ,  const int & ,  const int & ,  const Proud::Vector3 & ,  const Proud::Vector3 & ) > RequestWorldCreateItem_Function;
		virtual bool RequestWorldCreateItem ( ::Proud::HostID remote, ::Proud::RmiContext& rmiContext ,  const int & hostID,  const int & itemCID,  const int & itemID,  const Proud::Vector3 & pos,  const Proud::Vector3 & rot) 
		{ 
			if (RequestWorldCreateItem_Function==nullptr) 
				return true; 
			return RequestWorldCreateItem_Function(remote,rmiContext, hostID, itemCID, itemID, pos, rot); 
		}

               
		std::function< bool ( ::Proud::HostID, ::Proud::RmiContext& ,  const int & ,  const int & ,  const string & ,  const string & ,  const float & ) > RequestPlayerDamage_Function;
		virtual bool RequestPlayerDamage ( ::Proud::HostID remote, ::Proud::RmiContext& rmiContext ,  const int & sendHostID,  const int & targetHostID,  const string & name,  const string & weaponName,  const float & damage) 
		{ 
			if (RequestPlayerDamage_Function==nullptr) 
				return true; 
			return RequestPlayerDamage_Function(remote,rmiContext, sendHostID, targetHostID, name, weaponName, damage); 
		}

               
		std::function< bool ( ::Proud::HostID, ::Proud::RmiContext& ,  const int & ,  const string & ,  const float & ) > RequestPlayerUseOxy_Function;
		virtual bool RequestPlayerUseOxy ( ::Proud::HostID remote, ::Proud::RmiContext& rmiContext ,  const int & sendHostID,  const string & name,  const float & useOxy) 
		{ 
			if (RequestPlayerUseOxy_Function==nullptr) 
				return true; 
			return RequestPlayerUseOxy_Function(remote,rmiContext, sendHostID, name, useOxy); 
		}

               
		std::function< bool ( ::Proud::HostID, ::Proud::RmiContext& ,  const int & ,  const int & ,  const float & ) > RequestUseOxyCharger_Function;
		virtual bool RequestUseOxyCharger ( ::Proud::HostID remote, ::Proud::RmiContext& rmiContext ,  const int & sendHostID,  const int & oxyChargerIndex,  const float & userOxy) 
		{ 
			if (RequestUseOxyCharger_Function==nullptr) 
				return true; 
			return RequestUseOxyCharger_Function(remote,rmiContext, sendHostID, oxyChargerIndex, userOxy); 
		}

               
		std::function< bool ( ::Proud::HostID, ::Proud::RmiContext& ,  const int & ,  const int & ) > RequestUseItemBox_Function;
		virtual bool RequestUseItemBox ( ::Proud::HostID remote, ::Proud::RmiContext& rmiContext ,  const int & sendHostID,  const int & itemBoxIndex) 
		{ 
			if (RequestUseItemBox_Function==nullptr) 
				return true; 
			return RequestUseItemBox_Function(remote,rmiContext, sendHostID, itemBoxIndex); 
		}

               
		std::function< bool ( ::Proud::HostID, ::Proud::RmiContext& ,  const int & ) > RequestShelterStartSetup_Function;
		virtual bool RequestShelterStartSetup ( ::Proud::HostID remote, ::Proud::RmiContext& rmiContext ,  const int & shelterID) 
		{ 
			if (RequestShelterStartSetup_Function==nullptr) 
				return true; 
			return RequestShelterStartSetup_Function(remote,rmiContext, shelterID); 
		}

               
		std::function< bool ( ::Proud::HostID, ::Proud::RmiContext& ,  const int & ,  const int & ,  const bool & ) > RequestShelterDoorControl_Function;
		virtual bool RequestShelterDoorControl ( ::Proud::HostID remote, ::Proud::RmiContext& rmiContext ,  const int & sendHostID,  const int & shelterID,  const bool & doorState) 
		{ 
			if (RequestShelterDoorControl_Function==nullptr) 
				return true; 
			return RequestShelterDoorControl_Function(remote,rmiContext, sendHostID, shelterID, doorState); 
		}

               
		std::function< bool ( ::Proud::HostID, ::Proud::RmiContext& ,  const int & ,  const int & ,  const bool & ) > RequestShelterEnter_Function;
		virtual bool RequestShelterEnter ( ::Proud::HostID remote, ::Proud::RmiContext& rmiContext ,  const int & sendHostID,  const int & shelterID,  const bool & enter) 
		{ 
			if (RequestShelterEnter_Function==nullptr) 
				return true; 
			return RequestShelterEnter_Function(remote,rmiContext, sendHostID, shelterID, enter); 
		}

               
		std::function< bool ( ::Proud::HostID, ::Proud::RmiContext& ,  const int & ,  const bool & ) > NotifyLoginSuccess_Function;
		virtual bool NotifyLoginSuccess ( ::Proud::HostID remote, ::Proud::RmiContext& rmiContext ,  const int & hostID,  const bool & host) 
		{ 
			if (NotifyLoginSuccess_Function==nullptr) 
				return true; 
			return NotifyLoginSuccess_Function(remote,rmiContext, hostID, host); 
		}

               
		std::function< bool ( ::Proud::HostID, ::Proud::RmiContext& ,  const string & ) > NotifyLoginFailed_Function;
		virtual bool NotifyLoginFailed ( ::Proud::HostID remote, ::Proud::RmiContext& rmiContext ,  const string & reason) 
		{ 
			if (NotifyLoginFailed_Function==nullptr) 
				return true; 
			return NotifyLoginFailed_Function(remote,rmiContext, reason); 
		}

               
		std::function< bool ( ::Proud::HostID, ::Proud::RmiContext& ,  const int & ,  const string & ,  const float & ,  const float & ,  const float & ) > NotifyOtherClientJoin_Function;
		virtual bool NotifyOtherClientJoin ( ::Proud::HostID remote, ::Proud::RmiContext& rmiContext ,  const int & hostID,  const string & name,  const float & x,  const float & y,  const float & z) 
		{ 
			if (NotifyOtherClientJoin_Function==nullptr) 
				return true; 
			return NotifyOtherClientJoin_Function(remote,rmiContext, hostID, name, x, y, z); 
		}

               
		std::function< bool ( ::Proud::HostID, ::Proud::RmiContext& ,  const int & ) > NotifyPlayerLost_Function;
		virtual bool NotifyPlayerLost ( ::Proud::HostID remote, ::Proud::RmiContext& rmiContext ,  const int & hostID) 
		{ 
			if (NotifyPlayerLost_Function==nullptr) 
				return true; 
			return NotifyPlayerLost_Function(remote,rmiContext, hostID); 
		}

               
		std::function< bool ( ::Proud::HostID, ::Proud::RmiContext& ,  const int & ,  const string & ,  const float & ,  const float & ,  const float & ,  const float & ,  const float & ,  const float & ,  const float & ,  const float & ,  const float & ,  const float & ,  const float & ,  const float & ) > NotifyPlayerMove_Function;
		virtual bool NotifyPlayerMove ( ::Proud::HostID remote, ::Proud::RmiContext& rmiContext ,  const int & hostID,  const string & name,  const float & curX,  const float & curY,  const float & curZ,  const float & velocityX,  const float & velocityY,  const float & velocityZ,  const float & crx,  const float & cry,  const float & crz,  const float & rx,  const float & ry,  const float & rz) 
		{ 
			if (NotifyPlayerMove_Function==nullptr) 
				return true; 
			return NotifyPlayerMove_Function(remote,rmiContext, hostID, name, curX, curY, curZ, velocityX, velocityY, velocityZ, crx, cry, crz, rx, ry, rz); 
		}

               
		std::function< bool ( ::Proud::HostID, ::Proud::RmiContext& ,  const int & ) > NotifyDeleteItem_Function;
		virtual bool NotifyDeleteItem ( ::Proud::HostID remote, ::Proud::RmiContext& rmiContext ,  const int & itemID) 
		{ 
			if (NotifyDeleteItem_Function==nullptr) 
				return true; 
			return NotifyDeleteItem_Function(remote,rmiContext, itemID); 
		}

               
		std::function< bool ( ::Proud::HostID, ::Proud::RmiContext& ,  const int & ,  const int & ,  const int & ,  const Proud::Vector3 & ,  const Proud::Vector3 & ) > NotifyCreateItem_Function;
		virtual bool NotifyCreateItem ( ::Proud::HostID remote, ::Proud::RmiContext& rmiContext ,  const int & hostID,  const int & itemCID,  const int & itemID,  const Proud::Vector3 & pos,  const Proud::Vector3 & rot) 
		{ 
			if (NotifyCreateItem_Function==nullptr) 
				return true; 
			return NotifyCreateItem_Function(remote,rmiContext, hostID, itemCID, itemID, pos, rot); 
		}

               
		std::function< bool ( ::Proud::HostID, ::Proud::RmiContext& ,  const int & ,  const float & ) > NotifyStartOxyChargerState_Function;
		virtual bool NotifyStartOxyChargerState ( ::Proud::HostID remote, ::Proud::RmiContext& rmiContext ,  const int & oxyChargerID,  const float & oxy) 
		{ 
			if (NotifyStartOxyChargerState_Function==nullptr) 
				return true; 
			return NotifyStartOxyChargerState_Function(remote,rmiContext, oxyChargerID, oxy); 
		}

               
		std::function< bool ( ::Proud::HostID, ::Proud::RmiContext& ,  const int & ,  const bool & ) > NotifyStartItemBoxState_Function;
		virtual bool NotifyStartItemBoxState ( ::Proud::HostID remote, ::Proud::RmiContext& rmiContext ,  const int & itemBoxID,  const bool & openState) 
		{ 
			if (NotifyStartItemBoxState_Function==nullptr) 
				return true; 
			return NotifyStartItemBoxState_Function(remote,rmiContext, itemBoxID, openState); 
		}

               
		std::function< bool ( ::Proud::HostID, ::Proud::RmiContext& ,  const int & ,  const int & ,  const int & ) > NotifyPlayerEquipItem_Function;
		virtual bool NotifyPlayerEquipItem ( ::Proud::HostID remote, ::Proud::RmiContext& rmiContext ,  const int & hostID,  const int & itemCID,  const int & itemID) 
		{ 
			if (NotifyPlayerEquipItem_Function==nullptr) 
				return true; 
			return NotifyPlayerEquipItem_Function(remote,rmiContext, hostID, itemCID, itemID); 
		}

               
		std::function< bool ( ::Proud::HostID, ::Proud::RmiContext& ,  const int & ,  const int & ,  const int & ,  const Proud::Vector3 & ,  const Proud::Vector3 & ) > NotifyPlayerUnEquipItem_Function;
		virtual bool NotifyPlayerUnEquipItem ( ::Proud::HostID remote, ::Proud::RmiContext& rmiContext ,  const int & hostID,  const int & itemCID,  const int & itemID,  const Proud::Vector3 & pos,  const Proud::Vector3 & rot) 
		{ 
			if (NotifyPlayerUnEquipItem_Function==nullptr) 
				return true; 
			return NotifyPlayerUnEquipItem_Function(remote,rmiContext, hostID, itemCID, itemID, pos, rot); 
		}

               
		std::function< bool ( ::Proud::HostID, ::Proud::RmiContext& ,  const int & ,  const string & ,  const string & ,  const Proud::Vector3 & ,  const Proud::Vector3 & ) > NotifyPlayerBulletCreate_Function;
		virtual bool NotifyPlayerBulletCreate ( ::Proud::HostID remote, ::Proud::RmiContext& rmiContext ,  const int & sendHostID,  const string & bulletType,  const string & bulletID,  const Proud::Vector3 & pos,  const Proud::Vector3 & rot) 
		{ 
			if (NotifyPlayerBulletCreate_Function==nullptr) 
				return true; 
			return NotifyPlayerBulletCreate_Function(remote,rmiContext, sendHostID, bulletType, bulletID, pos, rot); 
		}

               
		std::function< bool ( ::Proud::HostID, ::Proud::RmiContext& ,  const int & ,  const string & ,  const Proud::Vector3 & ,  const Proud::Vector3 & ,  const Proud::Vector3 & ) > NotifyPlayerBulletMove_Function;
		virtual bool NotifyPlayerBulletMove ( ::Proud::HostID remote, ::Proud::RmiContext& rmiContext ,  const int & sendHostID,  const string & bulletID,  const Proud::Vector3 & pos,  const Proud::Vector3 & velocity,  const Proud::Vector3 & rot) 
		{ 
			if (NotifyPlayerBulletMove_Function==nullptr) 
				return true; 
			return NotifyPlayerBulletMove_Function(remote,rmiContext, sendHostID, bulletID, pos, velocity, rot); 
		}

               
		std::function< bool ( ::Proud::HostID, ::Proud::RmiContext& ,  const int & ,  const string & ) > NotifyPlayerBulletDelete_Function;
		virtual bool NotifyPlayerBulletDelete ( ::Proud::HostID remote, ::Proud::RmiContext& rmiContext ,  const int & sendHostID,  const string & bulletID) 
		{ 
			if (NotifyPlayerBulletDelete_Function==nullptr) 
				return true; 
			return NotifyPlayerBulletDelete_Function(remote,rmiContext, sendHostID, bulletID); 
		}

               
		std::function< bool ( ::Proud::HostID, ::Proud::RmiContext& ,  const int & ,  const string & ,  const string & ,  const int & ) > NotifyPlayerAnimation_Function;
		virtual bool NotifyPlayerAnimation ( ::Proud::HostID remote, ::Proud::RmiContext& rmiContext ,  const int & hostID,  const string & name,  const string & animationName,  const int & aniValue) 
		{ 
			if (NotifyPlayerAnimation_Function==nullptr) 
				return true; 
			return NotifyPlayerAnimation_Function(remote,rmiContext, hostID, name, animationName, aniValue); 
		}

               
		std::function< bool ( ::Proud::HostID, ::Proud::RmiContext& ,  const int & ,  const string & ,  const float & ,  const float & ,  const float & ) > NotifyPlayerChangeHP_Function;
		virtual bool NotifyPlayerChangeHP ( ::Proud::HostID remote, ::Proud::RmiContext& rmiContext ,  const int & sendHostID,  const string & name,  const float & hp,  const float & prevhp,  const float & maxhp) 
		{ 
			if (NotifyPlayerChangeHP_Function==nullptr) 
				return true; 
			return NotifyPlayerChangeHP_Function(remote,rmiContext, sendHostID, name, hp, prevhp, maxhp); 
		}

               
		std::function< bool ( ::Proud::HostID, ::Proud::RmiContext& ,  const int & ,  const string & ,  const float & ,  const float & ,  const float & ) > NotifyPlayerChangeOxygen_Function;
		virtual bool NotifyPlayerChangeOxygen ( ::Proud::HostID remote, ::Proud::RmiContext& rmiContext ,  const int & sendHostID,  const string & name,  const float & oxygen,  const float & prevoxy,  const float & maxoxy) 
		{ 
			if (NotifyPlayerChangeOxygen_Function==nullptr) 
				return true; 
			return NotifyPlayerChangeOxygen_Function(remote,rmiContext, sendHostID, name, oxygen, prevoxy, maxoxy); 
		}

               
		std::function< bool ( ::Proud::HostID, ::Proud::RmiContext& ,  const int & ,  const int & ,  const float & ) > NotifyUseOxyCharger_Function;
		virtual bool NotifyUseOxyCharger ( ::Proud::HostID remote, ::Proud::RmiContext& rmiContext ,  const int & sendHostID,  const int & oxyChargerIndex,  const float & userOxy) 
		{ 
			if (NotifyUseOxyCharger_Function==nullptr) 
				return true; 
			return NotifyUseOxyCharger_Function(remote,rmiContext, sendHostID, oxyChargerIndex, userOxy); 
		}

               
		std::function< bool ( ::Proud::HostID, ::Proud::RmiContext& ,  const int & ,  const int & ,  const int & ) > NotifyUseItemBox_Function;
		virtual bool NotifyUseItemBox ( ::Proud::HostID remote, ::Proud::RmiContext& rmiContext ,  const int & sendHostID,  const int & itemBoxIndex,  const int & itemID) 
		{ 
			if (NotifyUseItemBox_Function==nullptr) 
				return true; 
			return NotifyUseItemBox_Function(remote,rmiContext, sendHostID, itemBoxIndex, itemID); 
		}

               
		std::function< bool ( ::Proud::HostID, ::Proud::RmiContext& ,  const int & ,  const int & ,  const bool & ,  const bool & ) > NotifyShelterInfo_Function;
		virtual bool NotifyShelterInfo ( ::Proud::HostID remote, ::Proud::RmiContext& rmiContext ,  const int & sendHostID,  const int & shelterID,  const bool & doorState,  const bool & lightState) 
		{ 
			if (NotifyShelterInfo_Function==nullptr) 
				return true; 
			return NotifyShelterInfo_Function(remote,rmiContext, sendHostID, shelterID, doorState, lightState); 
		}

               
		std::function< bool ( ::Proud::HostID, ::Proud::RmiContext& ,  const int & ) > NotifyMeteorCreateTime_Function;
		virtual bool NotifyMeteorCreateTime ( ::Proud::HostID remote, ::Proud::RmiContext& rmiContext ,  const int & time) 
		{ 
			if (NotifyMeteorCreateTime_Function==nullptr) 
				return true; 
			return NotifyMeteorCreateTime_Function(remote,rmiContext, time); 
		}

               
		std::function< bool ( ::Proud::HostID, ::Proud::RmiContext& ,  const float & ,  const float & ) > NotifyMeteorCreate_Function;
		virtual bool NotifyMeteorCreate ( ::Proud::HostID remote, ::Proud::RmiContext& rmiContext ,  const float & anglex,  const float & anglez) 
		{ 
			if (NotifyMeteorCreate_Function==nullptr) 
				return true; 
			return NotifyMeteorCreate_Function(remote,rmiContext, anglex, anglez); 
		}

               
		std::function< bool ( ::Proud::HostID, ::Proud::RmiContext& ,  const int & ,  const float & ) > NotifySpaceShipEngineCharge_Function;
		virtual bool NotifySpaceShipEngineCharge ( ::Proud::HostID remote, ::Proud::RmiContext& rmiContext ,  const int & spaceShipID,  const float & fuel) 
		{ 
			if (NotifySpaceShipEngineCharge_Function==nullptr) 
				return true; 
			return NotifySpaceShipEngineCharge_Function(remote,rmiContext, spaceShipID, fuel); 
		}

               
		std::function< bool ( ::Proud::HostID, ::Proud::RmiContext& ,  const int & ) > RequestSpaceShip_Function;
		virtual bool RequestSpaceShip ( ::Proud::HostID remote, ::Proud::RmiContext& rmiContext ,  const int & winPlayerID) 
		{ 
			if (RequestSpaceShip_Function==nullptr) 
				return true; 
			return RequestSpaceShip_Function(remote,rmiContext, winPlayerID); 
		}

               
		std::function< bool ( ::Proud::HostID, ::Proud::RmiContext& ) > RequestGameEnd_Function;
		virtual bool RequestGameEnd ( ::Proud::HostID remote, ::Proud::RmiContext& rmiContext ) 
		{ 
			if (RequestGameEnd_Function==nullptr) 
				return true; 
			return RequestGameEnd_Function(remote,rmiContext); 
		}

               
		std::function< bool ( ::Proud::HostID, ::Proud::RmiContext& ,  const string & ,  const bool & ,  const int & ,  const int & ) > NotifyKillInfo_Function;
		virtual bool NotifyKillInfo ( ::Proud::HostID remote, ::Proud::RmiContext& rmiContext ,  const string & targetName,  const bool & kill,  const int & totalKill,  const int & totalAssist) 
		{ 
			if (NotifyKillInfo_Function==nullptr) 
				return true; 
			return NotifyKillInfo_Function(remote,rmiContext, targetName, kill, totalKill, totalAssist); 
		}

               
		std::function< bool ( ::Proud::HostID, ::Proud::RmiContext& ,  const string & ,  const int & ,  const int & ,  const int & ,  const int & ,  const int & ,  const int & ) > NotifyGameResultInfoMe_Function;
		virtual bool NotifyGameResultInfoMe ( ::Proud::HostID remote, ::Proud::RmiContext& rmiContext ,  const string & gameMode,  const int & winState,  const int & playTime,  const int & kills,  const int & assists,  const int & death,  const int & getMoney) 
		{ 
			if (NotifyGameResultInfoMe_Function==nullptr) 
				return true; 
			return NotifyGameResultInfoMe_Function(remote,rmiContext, gameMode, winState, playTime, kills, assists, death, getMoney); 
		}

               
		std::function< bool ( ::Proud::HostID, ::Proud::RmiContext& ,  const string & ,  const int & ) > NotifyGameResultInfoOther_Function;
		virtual bool NotifyGameResultInfoOther ( ::Proud::HostID remote, ::Proud::RmiContext& rmiContext ,  const string & name,  const int & state) 
		{ 
			if (NotifyGameResultInfoOther_Function==nullptr) 
				return true; 
			return NotifyGameResultInfoOther_Function(remote,rmiContext, name, state); 
		}

               
		std::function< bool ( ::Proud::HostID, ::Proud::RmiContext& ) > NotifyGameResultShow_Function;
		virtual bool NotifyGameResultShow ( ::Proud::HostID remote, ::Proud::RmiContext& rmiContext ) 
		{ 
			if (NotifyGameResultShow_Function==nullptr) 
				return true; 
			return NotifyGameResultShow_Function(remote,rmiContext); 
		}

	};
#endif
}

